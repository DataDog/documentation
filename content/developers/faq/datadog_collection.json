{
	"info": {
		"_postman_id": "65d3a91e-e54c-4204-ad41-4a906aed5948",
		"name": "Datadog API Collection",
		"description": "Top Level Folder For Datadog API calls",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Authentication Check",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/validate?api_key={{dd_api_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"validate"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								}
							]
						},
						"description": "This GET call just checks to see if an API call key is valid."
					},
					"response": []
				}
			],
			"description": "All requests to Datadog's API must be authenticated. Requests that write data require reporting access and require an API key. Requests that read data require full access and also require an application key."
		},
		{
			"name": "Checks",
			"item": [
				{
					"name": "Enter Check Status",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"check\": \"app.is_ok\",\n      \"host_name\": \"my_hostname\",\n      \"status\": 0\n  }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/check_run?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"check_run"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "This POST call allows for you to POST check statuses for use with monitors"
					},
					"response": []
				}
			],
			"description": "The service check endpoint allows you to post check statuses for use with monitors."
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Delete Comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/comments/3843084207937032193?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"comments",
								"3843084207937032193"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "This POST call allows for you to DELETE a previously posted comment by commentId"
					},
					"response": []
				},
				{
					"name": "POST A Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"message\" : \"There is a problem with the database2.\",\n      \"handle\":\"email@domain.com\"\n  }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/comments?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"comments"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "This POST call allows for you to POST status messages, or reply to another thread (if related_event_id is passed)"
					},
					"response": []
				},
				{
					"name": "Reply To Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"message\" : \"Try embedded comment to previous post\",\n      \"handle\":\"email@domain.com\",\n      \"related_event_id\":\"4315245270133755906\"\n  }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/comments?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"comments"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "This POST call allows for you to POST status messages to a previous post via ID."
					},
					"response": []
				},
				{
					"name": "Change Previous Comment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"message\" : \"Try Changing the Wording\"\n  }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/comments/3843084207937032193?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"comments",
								"3843084207937032193"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "This POST call allows for you to change a previously posted comment by commentId"
					},
					"response": []
				}
			],
			"description": "Comments are essentially special forms of events that appear in the stream. They can start a new discussion thread or optionally, reply in another thread.\n\nARGUMENTS\n\n* message [required]\n     **The comment text.\n* handle [optional, default=application key owner]\n     **The handle of the user making the comment.\n* related_event_id [optional, default=None]\n     **The id of another comment or event to reply to"
		},
		{
			"name": "Downtimes",
			"item": [
				{
					"name": "DELETE All Downtimes By Scope",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"scope\":\"region:midwest\"}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/downtime/cancel/by_scope?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								"cancel",
								"by_scope"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "DELETE all Downtimes that match the scope of X"
					},
					"response": []
				},
				{
					"name": "GET ALL Downtimes",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/downtime?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"downtime"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Get All Scheduled Downtimes"
					},
					"response": []
				},
				{
					"name": "Schedule Downtime",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/downtime?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start=1493343426&end=1556415426&type=weeks&period=1&week_days=Mon,Tue,Wed,Thu,Fri&until_date=1491026399&scope=region:midwest",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"downtime"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start",
									"value": "1493343426"
								},
								{
									"key": "end",
									"value": "1556415426"
								},
								{
									"key": "type",
									"value": "weeks"
								},
								{
									"key": "period",
									"value": "1"
								},
								{
									"key": "week_days",
									"value": "Mon,Tue,Wed,Thu,Fri"
								},
								{
									"key": "until_date",
									"value": "1491026399"
								},
								{
									"key": "scope",
									"value": "region:midwest"
								}
							]
						},
						"description": "Schedule a single Downtime.\n\nARGUMENTS\n\n* scope [required]\nThe scope(s) to which the downtime will apply, e.g. 'host:app2'. Provide multiple scopes as a comma-separated list, e.g. 'env:dev,env:prod'. The resulting downtime applies to sources that matches ALL provided scopes (i.e. env:dev AND env:prod), NOT any of them.\n\n*monitor_id [optional, default=None]\nA single monitor to which the downtime will apply. If not provided, the downtime will apply to all monitors.\n\n*start [optional, default=None]\nPOSIX timestamp to start the downtime. If not provided, the downtime starts the moment it is created.\n\n*end [optional, default=None]\nPOSIX timestamp to end the downtime. If not provided, the downtime will be in effect indefinitely (i.e. until you cancel it).\n\n*message [optional, default=None]\nA message to include with notifications for this downtime. Email notifications can be sent to specific users by using the same '@username' notation as events\n\n*monitor_id [optional, default=None]\nThe id of a specific monitor to apply the downtime to.\n\n*recurrence [optional, default=None]\nAn object defining the recurrence of the downtime with a variety of parameters:\n\n*type the type of recurrence. Choose from: days, weeks, months, years.\n\n*period how often to repeat as an integer. For example to repeat every 3 days, select a type of days and a period of 3.\n\n*week_days (optional) a list of week days to repeat on. Choose from: Mon, Tue, Wed, Thu, Fri, Sat or Sun. Only applicable when type is weeks. First letter must be capitalized.\n\n*until_occurrences (optional) how many times the downtime will be rescheduled. until_occurences and \n\n*until_date are mutually exclusive\nuntil_date (optional) the date at which the recurrence should end as a POSIX timestmap. until_occurences and until_date are mutually exclusive\n\n*timezone [optional, default=UTC]\nThe timezone for the downtime."
					},
					"response": []
				},
				{
					"name": "Update A Downtime",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/downtime/223886958?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start=1493343426&end=1556415426&type=weeks&period=1&week_days=Mon,Tue,Wed,Thu,Fri,Sat&until_date=1491026399&scope=region:midwest",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								"223886958"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start",
									"value": "1493343426"
								},
								{
									"key": "end",
									"value": "1556415426"
								},
								{
									"key": "type",
									"value": "weeks"
								},
								{
									"key": "period",
									"value": "1"
								},
								{
									"key": "week_days",
									"value": "Mon,Tue,Wed,Thu,Fri,Sat"
								},
								{
									"key": "until_date",
									"value": "1491026399"
								},
								{
									"key": "scope",
									"value": "region:midwest"
								}
							]
						},
						"description": "Update a single Downtime by downtime_id.\n\nARGUMENTS\n\n* scope [required]\nThe scope(s) to which the downtime will apply, e.g. 'host:app2'. Provide multiple scopes as a comma-separated list, e.g. 'env:dev,env:prod'. The resulting downtime applies to sources that matches ALL provided scopes (i.e. env:dev AND env:prod), NOT any of them.\n\n*monitor_id [optional, default=None]\nA single monitor to which the downtime will apply. If not provided, the downtime will apply to all monitors.\n\n*start [optional, default=None]\nPOSIX timestamp to start the downtime. If not provided, the downtime starts the moment it is created.\n\n*end [optional, default=None]\nPOSIX timestamp to end the downtime. If not provided, the downtime will be in effect indefinitely (i.e. until you cancel it).\n\n*message [optional, default=None]\nA message to include with notifications for this downtime. Email notifications can be sent to specific users by using the same '@username' notation as events\n\n*monitor_id [optional, default=None]\nThe id of a specific monitor to apply the downtime to.\n\n*recurrence [optional, default=None]\nAn object defining the recurrence of the downtime with a variety of parameters:\n\n*type the type of recurrence. Choose from: days, weeks, months, years.\n\n*period how often to repeat as an integer. For example to repeat every 3 days, select a type of days and a period of 3.\n\n*week_days (optional) a list of week days to repeat on. Choose from: Mon, Tue, Wed, Thu, Fri, Sat or Sun. Only applicable when type is weeks. First letter must be capitalized.\n\n*until_occurrences (optional) how many times the downtime will be rescheduled. until_occurences and \n\n*until_date are mutually exclusive\nuntil_date (optional) the date at which the recurrence should end as a POSIX timestmap. until_occurences and until_date are mutually exclusive\n\n*timezone [optional, default=UTC]\nThe timezone for the downtime."
					},
					"response": []
				},
				{
					"name": "GET A Downtime",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/downtime/223886958?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								"223886958"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Get Downtime Detail by downtime_id"
					},
					"response": []
				},
				{
					"name": "DELTE A Downtime",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/downtime/223886958?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								"223886958"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "DELETE a Downtime Detail by downtime_id"
					},
					"response": []
				}
			],
			"description": "Downtiming gives you greater control over monitor notifications by allowing you to globally exclude scopes from alerting. Downtime settings, which can be scheduled with start and end times, prevent all alerting related to specified Datadog tags."
		},
		{
			"name": "Embeddable Graphs",
			"item": [
				{
					"name": "GET A Specific Embeddable Graphs",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/graph/embed/45d8cf2d01e0673beadeb88f4368db271376eefd11d76e4eaf3cfae18f47e0f5?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed",
								"45d8cf2d01e0673beadeb88f4368db271376eefd11d76e4eaf3cfae18f47e0f5"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "GET A Specific Embeddable Graphs"
					},
					"response": []
				},
				{
					"name": "Enable A Specific Embed",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/graph/embed/9405f66beea59813e322e236da9dd31006267c4fc970442c5547f9fd7a676678/enable?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed",
								"9405f66beea59813e322e236da9dd31006267c4fc970442c5547f9fd7a676678",
								"enable"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Enable A Specific Embed by embed_id"
					},
					"response": []
				},
				{
					"name": "Revoke A Specific Embed",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/graph/embed/9405f66beea59813e322e236da9dd31006267c4fc970442c5547f9fd7a676678/revoke?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed",
								"9405f66beea59813e322e236da9dd31006267c4fc970442c5547f9fd7a676678",
								"revoke"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Revoke A Specific Embed by embed_id"
					},
					"response": []
				},
				{
					"name": "Create An Embeddable Graph",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "graph_json",
									"value": "{\"requests\":[{\"q\":\"avg:system.load.1{*}\"}],\"viz\":\"timeseries\",\"events\":[]}",
									"type": "text"
								},
								{
									"key": "timeframe",
									"value": "1_hour",
									"type": "text"
								},
								{
									"key": "size",
									"value": "medium",
									"type": "text"
								},
								{
									"key": "legend",
									"value": "yes",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/graph/embed?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Creates a new embeddable graph.\n\nReturns: A JSON consisting of the same elements returned by GET api/v1/graph/embed/:embed_id. On failure, the return value will be a JSON containing an error message {errors: [messages]}.\n\nNote: If an embed already exists for the exact same query in a given organization, the older embed will be returned instead of creating a new embed.\n\nARGUMENTS\n\n*graph_json [required]\nThe graph definition in JSON. Same format that is available on the JSON tab of the graph editor\n\n*timeframe [optional, default=1_hour]\nThe timegrame for the graph. Must be one of 1_hour, 4_hours, 1_day, 2_days, and 1_week.\n\n*size [optional, default=medium]\nThe size of the graph. Must be one of small, medium, large, and xlarge.\n\n*legend [optional, default=no]\nThe flag determining if the graph includes a legend. Must be one of yes or no.\n\n*title [optional, default=Embed created through API]\nDetermines graph title. Must be at least 1 character."
					},
					"response": []
				},
				{
					"name": "GET ALL Embeddable Graphs",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/graph/embed?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "GET ALL Embeddable Graphs"
					},
					"response": []
				}
			],
			"description": "You can interact with embeddable graphs through the API."
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Get Event Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/events/1044739812528776191?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"events",
								"1044739812528776191"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Get event details by event_id"
					},
					"response": []
				},
				{
					"name": "DELETE An Event",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Something big happened!\",\n\"text\":\"And let me tell you all about it here!\",\n\"tags\":\"environment:prod\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/events/1044739812528776191?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"events",
								"1044739812528776191"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "DELETE event details by event_id"
					},
					"response": []
				},
				{
					"name": "Query Event Stream",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/events?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start=1493127756&end=1493386969",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"events"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start",
									"value": "1493127756"
								},
								{
									"key": "end",
									"value": "1493386969"
								}
							]
						},
						"description": "The event stream can be queried and filtered by time, priority, sources and tags.\n\nARGUMENTS\n\n*start [required]\nPOSIX timestamp\n\n*end [required]\nPOSIX timestamp\n\n*priority [optional, default=None]\n'low' or 'normal'\n\n*sources [optional, default=None]\nA comma separated string of sources\n\n*tags [optional, default=None]\nA comma separated string of tags"
					},
					"response": []
				},
				{
					"name": "Post an Event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"alert_type\": \"success\",\n        \"title\": \"prod auth build #{{$randomInt}} succeeded on PROD\",\n       \n        \"text\": \"Jenkins Build #{{$randomInt}} completed (16.48 secs) without error.\",\n        \"tags\": [\n           \n            \"result:success\"\n        ],\n        \"device_name\": null,\n        \"priority\": \"low\",\n        \"source_type_name\":\"jenkins\"\n    \n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/events?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"events"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "This end point allows you to post events to the stream. You can tag them, set priority and event aggregate them with other events.\n\nARGUMENTS\n\n*title [required]\nThe event title. Limited to 100 characters.\n\n*text [required]\nThe body of the event. Limited to 4000 characters. The text supports markdown.\n\n*date_happened [optional, default=now]\nPOSIX timestamp of the event.\n\n*priority [optional, default='normal']\nThe priority of the event ('normal' or 'low').\n\n*host [optional, default=None]\nHost name to associate with the event.\n\n*tags [optional, default=None]\nA list of tags to apply to the event.\n\n*alert_type [optional, default='info']\n\"error\", \"warning\", \"info\" or \"success\".\n\n*aggregation_key [optional, default=None]\nAn arbitrary string to use for aggregation, max length of 100 characters. If you specify a key, all events using that key will be grouped together in the Event Stream.\n\n*source_type_name [optional, default=None]\nThe type of event being posted.\n\n*Options: nagios, hudson, jenkins, user, my apps, feed, chef, puppet, git, bitbucket, fabric, capistrano"
					},
					"response": []
				}
			],
			"description": "The events service allows you to programatically post events to the stream and fetch events from the stream."
		},
		{
			"name": "Graphs",
			"item": [
				{
					"name": "Graph a Snapshot",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/graph/snapshot?api_key={{dd_api_key}}&application_key={{dd_app_key}}&metric_query=system.load.1{*}&start=1493127756&end=1493387140",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"snapshot"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "metric_query",
									"value": "system.load.1{*}"
								},
								{
									"key": "start",
									"value": "1493127756"
								},
								{
									"key": "end",
									"value": "1493387140"
								}
							]
						},
						"description": "ARGUMENTS\n\n*metric_query [required]\nThe metric query.\n\n*start [required]\nThe POSIX timestamp of the start of the query.\n\n*end [required]\nThe POSIX timestamp of the end of the query.\n\n*event_query [optional, default=None]\nA query that will add event bands to the graph.\n\n*graph_def [optional, default=None]\nA JSON document defining the graph. graph_def can be used instead of metric_query. The JSON document uses the grammar defined here and should be formatted to a single line then URLEncoded. The graph_def argument is only available in the REST API and not using the Ruby or Python wrappers.\n\n*title [optional, default=None]\nA title for the graph. If no title is specified, the graph will not have a title."
					},
					"response": []
				}
			],
			"description": "You can take graph snapshots using the API."
		},
		{
			"name": "Hosts",
			"item": [
				{
					"name": "Unmute a Host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"message\": \"Un-Muting this host for a test!\"\n  }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/host/my_hostname/unmute?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"host",
								"my_hostname",
								"unmute"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Mute a Host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"message\": \"Muting this host for a test!\"\n  }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/host/my_hostname/mute?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"host",
								"my_hostname",
								"mute"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\n*end [optional, default=None]\nPOSIX timestamp when the host will be unmuted. If omitted, the host will remain muted until explicitly unmuted.\n\n*message [optional, default=None]\nMessage to associate with the muting of this host\n\n*override [optional, default=False]\nIf true and the host is already muted, will replace existing host mute settings."
					},
					"response": []
				},
				{
					"name": "Infastructure List Query",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/reports/v2/overview?api_key={{dd_api_key}}&application_key={{dd_app_key}}&tags=os:windows",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"reports",
								"v2",
								"overview"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "tags",
									"value": "os:windows"
								}
							]
						},
						"description": "https://help.datadoghq.com/hc/en-us/articles/115003306746-Query-the-Infrastructure-List-via-the-API\n\n\ntags: string. A comma-delimited list of what host tags you want to filter down by (uses AND logic; returns data only for those hosts that have all these tags associated with them)\nhostnames[]: list of strings. A list of those specific hostnames you want to query data from\nwith_apps: boolean. If true, will display the applications(integrations) that are associated with a given host.\nwith_mute_status: boolean. If true, will display whether the host is muted by a downtime or not\nwith_source: boolean. If true, returns a list of sources from which metrics are reported for this host. For example, you might see 'aws', or 'agent', or 'azure' in this list.\nwith_aliases: boolean. If true, will display aliases for this host. Here is information about aliases and what they are.\nwith_meta: boolean. If true, will include metadata about the host with things like disk information/ IP addresses/ etc"
					},
					"response": []
				},
				{
					"name": "Query Hosts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/hosts?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"hosts"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "tags",
									"value": "10.31.10.6",
									"disabled": true
								}
							]
						},
						"description": "This endpoint allows searching for hosts by name, alias, or tag. Hosts live within the past 3 hours are included. Results are paginated with a max of 100 results at a time.\n\nARGUMENTS\nfilter [optional, default=None]: Query string to filter search results.\nsort_field [optional, default=cpu]: Sort hosts by the given field. Options: status, apps, cpu, iowait, load\nsort_dir [optional, default=desc]: Direction of sort. Options: asc, desc\nstart [optional, default=0]: Host result to start search from.\ncount [optional, default=100]: Number of host results to return. Max 100."
					},
					"response": []
				}
			]
		},
		{
			"name": "Integrations",
			"item": [
				{
					"name": "PagerDuty",
					"item": [
						{
							"name": "POST Pager Duty Account Details via API",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n       \"services\": [\n        {\n          \"service_name\": \"test_00\",\n          \"service_key\": \"<PAGERDUTY_SERVICE_KEY>\"\n        },\n        {\n          \"service_name\": \"test_01\",\n          \"service_key\": \"<PAGERDUTY_SERVICE_KEY>\"\n        }\n      ],\n      \"subdomain\": \"my-pd\",\n      \"schedules\": [\"https://my-pd.pagerduty.com/schedules#PCPYT4M\", \"https://my-pd.pagerduty.com/schedules#PKTPB7P\"],\n      \"api_token\": \"<PAGERDUTY_TOKEN>\"\n    }\n"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/pagerduty?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "Configure your Datadog-PagerDuty integration directly through Datadog API."
							},
							"response": []
						}
					],
					"description": "Configure your Datadog-PagerDuty integration directly through Datadog API.\nRead more about Datadog-PagerDuty integration\n\nARGUMENTS\nservices [required]:\nArray of PagerDuty service objects. Learn how to configure you Datadog service with PagerDuty documentation. A PagerDuty service object is composed by:\n\nservice_name [required]:\nYour Service name in PagerDuty.\n\nservice_key [required]:\nYour Service name associated service key in Pagerduty.\n\nsubdomain [required]:\nYour PagerDuty accounts personalized sub-domain name.\n\nschedules [required]: Array of your schedule URLs e.g:\n[\"https://my-pd.pagerduty.com/schedules#PCPYT4M\", \"https://my-pd.pagerduty.com/schedules#PKTPB7P\"]\n\napi_token [required]:\nYour PagerDuty API token.\n\nrun_check [optional, default=false]:\nDetermines if the integration install check is run before returning a response.\n\nIf true:\n\nThe install check is run\nIf there’s an error in the configuration the error is returned\nIf there’s no error, 204 No Content response code is returned\nIf false:\n\nWe return a 202 accepted\nInstall check is run after returning a response",
					"_postman_isSubFolder": true
				},
				{
					"name": "AWS",
					"item": [
						{
							"name": "DELETE AWS Integration Details",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"account_id\": \"YOUR_AWS_ACCOUNT_ID\",\n        \"role_name\": \"DatadogAWSIntegrationRole\"\n    }\n"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/aws?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "ARGUMENTS\n\n"
							},
							"response": []
						},
						{
							"name": "POST AWS Integration Details",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"account_id\": \"YOUR_AWS_ACCOUNT_ID\",\n        \"filter_tags\": [\"env:staging\"],\n        \"host_tags\": [\"account:staging\",\"account:customer1\"],\n        \"role_name\": \"DatadogAWSIntegrationRole\"\n    }\n"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/aws?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "ARGUMENTS\n\n"
							},
							"response": []
						},
						{
							"name": "Get AWS Integration Details",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/aws?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "ARGUMENTS\n\n"
							},
							"response": []
						}
					],
					"description": "Configure your Datadog-AWS integration directly through Datadog API.\n\nMore Details Here: https://docs.datadoghq.com/integrations/amazon_web_services/",
					"_postman_isSubFolder": true
				},
				{
					"name": "Webhooks",
					"item": [
						{
							"name": "POST Webhooks Integration Details via API",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hooks\": [\n      {\n        \"name\": \"somehook\",\n        \"url\": \"http://requestb.in/v1srg7v1\",\n        \"use_custom_payload\": \"false\",\n        \"custom_payload\": \"\",\n        \"encode_as_form\": \"false\",\n        \"headers\": \"\"\n    \t}\n]}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/webhooks?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "ARGUMENTS\n\n"
							},
							"response": []
						},
						{
							"name": "PUT Additional Webhooks Integration Details via API",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hooks\": [\n      {\n        \"name\": \"anotherone\",\n        \"url\": \"http://requestb.in/v1srg7v1\"\n      }\n    ]\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/webhooks?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "ARGUMENTS\n\n"
							},
							"response": []
						}
					],
					"description": "Webhooks\nConfigure your Datadog-Webhooks integration directly through Datadog API.\nRead more about Datadog-Webhooks integration\n\nARGUMENTS\nhooks [required]:\nArray of Webhook objects. A Webhook object is composed by:\n\nname [required]:\nYour Webhook name.\nLearn more on how to use it in monitor notifications.\nurl [required]:\nYour Webhook URL.\nuse_custom_payload [optional, default=False]:\nIf true, allow you to specify a custom payload for your Webhook.\n\ncustom_payload [optional, default=None]:\nIf use_custom_payloag is true, specify your own payload to add your own custom fields to the request using those variables.\n\nencode_as_form [optional, default=False]:\nIf use_custom_payload is true, set this to true to have your payload to be URL-encoded.\n\nheaders [optional, default=None]:\nHeaders attached to your Webhook.\n\nrun_check [optional, default=false]:\nDetermines if the integration install check is run before returning a response.\n\nIf true:\n\nThe install check is run\nIf there’s an error in the configuration the error is returned\nIf there’s no error, 204 No Content response code is returned\nIf false:\n\nWe return a 202 accepted\nInstall check is run after returning a response",
					"_postman_isSubFolder": true
				},
				{
					"name": "Slack",
					"item": [
						{
							"name": "PUT Slack Service_Hooks and Channels Via API",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"service_hooks\": [\n      {\n        \"account\": \"Main_Account\",\n        \"url\": \"https://hooks.slack.com/services/1/1\"\n      },\n      {\n        \"account\": \"doghouse\",\n        \"url\": \"https://hooks.slack.com/services/2/2\"\n      }\n    ],\n    \"channels\": [\n      {\n        \"channel_name\": \"#private\",\n        \"transfer_all_user_comments\": \"false\",\n        \"account\": \"Main_Account\"\n      },\n      {\n        \"channel_name\": \"#heresachannel\",\n        \"transfer_all_user_comments\": \"false\",\n        \"account\": \"doghouse\"\n      }\n    ]\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/slack?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "Configure your Datadog-Slack integration directly through Datadog API."
							},
							"response": []
						},
						{
							"name": "POST Slack Account Details Via API",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"service_hooks\": [\n      {\n        \"account\": \"Main_Account\",\n        \"url\": \"https://hooks.slack.com/services/1/1\"\n      },\n      {\n        \"account\": \"doghouse\",\n        \"url\": \"https://hooks.slack.com/services/2/2\"\n      }\n    ],\n    \"channels\": [\n      {\n        \"channel_name\": \"#private\",\n        \"transfer_all_user_comments\": \"false\",\n        \"account\": \"Main_Account\"\n      },\n      {\n        \"channel_name\": \"#heresachannel\",\n        \"transfer_all_user_comments\": \"false\",\n        \"account\": \"doghouse\"\n      }\n    ]\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/slack?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "Configure your Datadog-Slack integration directly through Datadog API."
							},
							"response": []
						}
					],
					"description": "Configure your Datadog-Slack integration directly through Datadog API.\nRead more about Datadog-Slack integration\n\nARGUMENTS\nservice_hooks [required]:\nArray of service hook objects (the service hook is generated for your slack account in your Slack account administration page). A service hook object is composed by:\n\naccount [required]:\nYour Slack account name.\n\nurl [required]:\nYour Slack Service Hook URL.\n\nchannels [required]:\nArray of slack channel objects to post to. A slack channel object is composed by:\n\nchannel_name [required]:\nYour channel name e.g: #general, #private\n\ntransfer_all_user_comments [optional, default=False]:\nTo be notified for every comment on a graph, set it to true. If set to False use the @slack-channel_name syntax for comments to be posted to slack.\n\naccount [required]:\nAccount to which the channel belongs to.\n\nrun_check [optional, default=false]:\nDetermines if the integration install check is run before returning a response.\n\nIf true:\n\nThe install check is run\nIf there’s an error in the configuration the error is returned\nIf there’s no error, 204 No Content response code is returned\nIf false:\n\nWe return a 202 accepted\nInstall check is run after returning a response",
					"_postman_isSubFolder": true
				}
			],
			"description": "Configure your Datadog integrations via Datadog API, current configurable integrations are:\n\nAWS\nPagerDuty\nSlack\nWebhooks\nAvailable Endpoints are:\n\nTo Create an integration in Datadog:\nPOST /api/v1/integration/<source_type_name>\n\nTo edit an integration configuration:\nPUT /api/v1/integration/<source_type_name>\n\nTo get an integration status:\nGET /api/v1/integration/<source_type_name>\n\nTo delete an integration from Datadog:\nDELETE /api/v1/integration/<source_type_name>",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cee8587f-57a4-4835-8a94-9db6cc75c767",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "81e73228-13c1-444f-8424-202bff06c2ec",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Metrics",
			"item": [
				{
					"name": "POST Time Series Point",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5edede57-369e-4c98-b74c-267e1aa0f014",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"series\" :\n         [{\"metric\":\"test.metric\",\n          \"points\":[[\"{{$timestamp}}\", \"{{$randomInt}}\"]],\n          \"type\":\"gauge\",\n          \"tags\":\"source:Postman,test\",\n          \"host\":\"macbookPro\"\n         }\n        ]\n    }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/series?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"series"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "The metrics end-point allows you to post time-series data that can be graphed on Datadog's dashboards.\n\nARGUMENTS\n\n*series [required]\nA JSON array of metrics where each item in the array contains the following arguments:\n\n*metric [required]\nThe name of the time series\n\n*points [required]\nA JSON array of points. Each point is of the form:\n[[POSIX_timestamp, numeric_value], ...]\nNote that the timestamp should be in seconds, must be current, and the numeric value is a 32bit float gauge-type value. Current is defined as not more than 10 minutes in the future or more than 1 hour in the past.\n\n*host [optional, default=None]\nThe name of the host that produced the metric.\n\n*tags [optional, default=None]\nA list of tags associated with the metric."
					},
					"response": []
				},
				{
					"name": "Query Time Series Points",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/query?api_key={{dd_api_key}}&application_key={{dd_app_key}}&from=1493127756&to=1493388187&query=system.cpu.idle{*}by{host}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"query"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "from",
									"value": "1493127756"
								},
								{
									"key": "to",
									"value": "1493388187"
								},
								{
									"key": "query",
									"value": "system.cpu.idle{*}by{host}"
								}
							]
						},
						"description": "This end point allows you to query for metrics from any time period.\n\nARGUMENTS\n\n*from [required]\nseconds since the unix epoch\n\n*to [required]\nseconds since the unix epoch\n\n*query [required]\nThe query string\n\n\nQUERY LANGUAGE\n\nAny query used for a graph can be used here. See here for more details. The time between from and to should be less than 24 hours. If it is longer, you will receive points with less granularity."
					},
					"response": []
				},
				{
					"name": "View Metric Data",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/metrics/system.cpu.system?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"system.cpu.system"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\nThis endpoint takes no JSON arguments"
					},
					"response": []
				},
				{
					"name": "Edit Metric Data",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"The percent of time the CPU spent running the kernel 2.\",\n    \"short_name\": \"cpu system\",\n    \"integration\": \"system\",\n    \"statsd_interval\": null,\n    \"per_unit\": null,\n    \"type\": \"gauge\",\n    \"unit\": \"percent\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/metrics/system.cpu.system?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"system.cpu.system"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\nThe metrics metadata endpoint allows you to edit fields of a metric's metadata.\n\nARGUMENTS\n\n*type [optional, default=None]\nmetric type such as 'gauge' or 'rate'\n\n*description [optional, default=None]\nstring description of the metric\n\n*short_name [optional, default=None]\nshort name string of the metric\n\n*unit [optional, default=None]\nprimary unit of the metric such as 'byte' or 'operation'\n\n*per_unit [optional, default=None]\n'per' unit of the metric such as 'second' in 'bytes per second'\n\n*statsd_interval [optional, default=None]\nif applicable, statds flush interval in seconds for the metric"
					},
					"response": []
				},
				{
					"name": "Get All Active Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/metrics?api_key={{dd_api_key}}&application_key={{dd_app_key}}&from=1488386651",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"metrics"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "from",
									"value": "1488386651"
								}
							]
						},
						"description": "ARGUMENTS\n\n* from [required]\nseconds since the unix epoch"
					},
					"response": []
				}
			],
			"description": "The metrics end-point allows you to:\n\n*Post metrics data so it can be graphed on Datadog's dashboards\n\n*Query metrics from any time period\n\nAs occurs within the Datadog UI, a graph can only contain a set number of points and as the timeframe over which a metric is viewed increases, aggregation between points will occur to stay below that set number.\n\nThus, if you are querying for larger timeframes of data, the points returned will be more aggregated. The max granularity within Datadog is one point per second, so if you had submitted points at that interval and requested a very small interval from the query API (in this case, probably less than 100 seconds), you could end up getting all of those points back. Otherwise, our algorithm tries to return about 150 points per any given time window, so you'll see coarser and coarser granularity as the amount of time requested increases. We do this time aggregation via averages."
		},
		{
			"name": "Monitors",
			"item": [
				{
					"name": "Create a Monitor ",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"type\": \"metric alert\",\n      \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n      \"name\": \"Bytes received on host0\",\n      \"message\": \"We may need to add web hosts if this is consistently high.\",\n      \"tags\": [\"app:webserver\", \"frontend\"],\n      \"options\": {\n      \t\"notify_no_data\": true,\n      \t\"no_data_timeframe\": 20\n      }\n    }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "http://docs.datadoghq.com/api/?lang=console#monitors"
					},
					"response": []
				},
				{
					"name": "Mute A Specific Monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"type\": \"metric alert\",\n      \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n      \"name\": \"Bytes received on host0\",\n      \"message\": \"We may need to add web hosts if this is consistently high.\",\n      \"tags\": [\"app:webserver\", \"frontend\"],\n      \"options\": {\n      \t\"notify_no_data\": true,\n      \t\"no_data_timeframe\": 20\n      }\n    }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/1959920/mute?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"1959920",
								"mute"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\n*scope [optional, default=None]\nThe scope to apply the mute to, e.g. role:db\n\n*end [optional, default=None]\nA POSIX timestamp for when the mute should end"
					},
					"response": []
				},
				{
					"name": "GET All Monitor Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\n*group_states [optional, default=None]\nIf this argument is set, the returned data will include additional information (if available) regarding the specified group states, including the last notification timestamp, last resolution timestamp and details about the last time the monitor was triggered. The argument should include a string list indicating what, if any, group states to include. Choose one or more from 'all', 'alert', 'warn', or 'no data'. Example: 'alert,warn'\n\n*name [optional, default=None]\nA string to filter monitors by name\n\n*tags [optional, default=None]\nA comma separated list indicating what tags, if any, should be used to filter the list of monitors by scope, e.g. host:host0. For more information, see the tags parameter for the appropriate query argument in the Create a monitor section above.\n\n*monitor_tags [optional, default=None]\nA comma separated list indicating what service and/or custom tags, if any, should be used to filter the list of monitors. Tags created in the Datadog UI will automatically have the \"service\" key prepended (e.g. service:my-app)"
					},
					"response": []
				},
				{
					"name": "Unmute All Monitors",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/unmute_all?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"unmute_all"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Disables muting all monitors. Throws an error if mute all was not enabled previously.\n\nARGUMENTS\n\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Unmute A Specific Monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"type\": \"metric alert\",\n      \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n      \"name\": \"Bytes received on host0\",\n      \"message\": \"We may need to add web hosts if this is consistently high.\",\n      \"tags\": [\"app:webserver\", \"frontend\"],\n      \"options\": {\n      \t\"notify_no_data\": true,\n      \t\"no_data_timeframe\": 20\n      }\n    }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/1959920/unmute?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"1959920",
								"unmute"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\n*scope [optional, default=None]\nThe scope to apply the mute to. For example, if your alert is grouped by {host}, you might mute 'host:app1'\n\n*all_scopes [optional, default=False]\nClear muting across all scopes"
					},
					"response": []
				},
				{
					"name": "Mute All Monitors",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/mute_all?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"mute_all"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Muting will prevent all monitors from notifying through email and posts to the event stream. State changes will only be visible by checking the alert page.\n\nARGUMENTS\n\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Edit a Monitor's Details",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"tags\": [],\n        \"deleted\": null,\n        \"query\": \"\\\"windows_service.state\\\".over(\\\"host:GamingPC\\\",\\\"service:termservice\\\").by(\\\"host\\\",\\\"service\\\").last(4).count_by_status()\",\n        \"message\": \"Example Windows Service Check for {{service.name}} on {{host.name}}\",\n        \"matching_downtimes\": [],\n        \"id\": 4769031,\n        \"multi\": true,\n        \"name\": \"Windows Service Check\",\n        \"created\": \"2018-04-25T16:06:10.564735+00:00\",\n        \"created_at\": 1524672370000,\n        \"creator\": {\n            \"id\": 580920,\n            \"handle\": \"test@example.com\",\n            \"name\": \"Joe Schmoe\",\n            \"email\": \"test@example.com\"\n        },\n        \"org_id\": 12345,\n        \"modified\": \"2018-04-25T16:06:10.564735+00:00\",\n        \"overall_state_modified\": null,\n        \"overall_state\": \"No Data\",\n        \"type\": \"service check\",\n        \"options\": {\n            \"notify_audit\": false,\n            \"locked\": false,\n            \"timeout_h\": 0,\n            \"silenced\": {},\n            \"thresholds\": {\n                \"warning\": 3,\n                \"ok\": 3,\n                \"critical\": 3\n            },\n            \"new_host_delay\": 300,\n            \"notify_no_data\": false,\n            \"renotify_interval\": 0,\n            \"no_data_timeframe\": 2\n        }\n    }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/4769031?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"4769031"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\n*query [required]\nThe metric query to alert on.\n\n*name [optional, default=dynamic, based on query]\nThe name of the monitor.\n\n*message [optional, default=dynamic, based on query]\nA message to include with notifications for this monitor. Email notifications can be sent to specific users by using the same '@username' notation as events.\n\n*options [optional, default=None]\nRefer to the create monitor documentation for details on the available options.\n\n*tags [optional, default=empty list]\nA list of tags to associate with your monitor. This can help you categorize and filter monitors."
					},
					"response": []
				},
				{
					"name": "Get a Monitor's Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/1959920?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"1959920"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\n*group_states [optional, default=None]\n\nIf this argument is set, the returned data will include additional information (if available) regarding the specified group states, including the last notification timestamp, last resolution timestamp and details about the last time the monitor was triggered. The argument should include a string list indicating what, if any, group states to include. Choose one or more from 'all', 'alert', 'warn', or 'no data'. Example: 'alert,warn'"
					},
					"response": []
				},
				{
					"name": "DELETE a Monitor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/1959920?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"1959920"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Resolve Monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"resolve\": [\n        {\n            \"2376503\": \"*\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/monitor/bulk_resolve?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"monitor",
								"bulk_resolve"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Here you can resolve a monitor by monitorId & Group (can wildcard).\n\nresolve [required]: Array of group(s) to resolve for a given monitor_id, e.g.: {\"monitor_id\": \"group_to_resolve\"}\n\nIt supports multiple groups per monitor, e.g.: resolve: [{\"monitor_id\": \"group_1\"}, {\"monitor_id\": \"group_2\"}]\n\nIt can also resolve all triggered groups with the pseudo-group ALL_GROUPS: resolve: [{\"monitor_id\": \"ALL_GROUPS\"}]"
					},
					"response": []
				},
				{
					"name": "Validate a Monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"query alert\",\n    \"query\": \"min(last_5m):avg:fse_auto_process.request.duration{build:prod} + avg:cassandra.db.recent_read_latency_micros{host:fse-ldmx-f7-18} + avg:cassandra.db.recent_write_latency_micros{host:fse-ldmx-f7-18} + avg:redis.info.latency_ms{*} + avg:gunicorn.request.duration.avg{*} >= 550\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/monitor?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\ntype [required]:\nThe type of the monitor, chosen from:\nMONITOR TYPE\tTYPE ATTRIBUTE VALUE\nanomaly\tquery alert\napm\tquery alert\ncomposite\tcomposite\ncustom\tservice check\nevent\tevent alert\nforecast\tquery alert\nhost\tservice check\nintegration\tquery alert\nlive process\tprocess alert\nlogs\tlog alert\nmetric\tquery alert\nnetwork\tservice check\noutlier\tquery alert\nprocess\tservice check\nquery [required]:\nThe query defines when the monitor triggers. Query syntax depends on monitor type. See Create a monitor for details."
					},
					"response": []
				},
				{
					"name": "Monitor Search",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/monitor/search?api_key={{dd_api_key}}&application_key={{dd_app_key}}&query=CPU High",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"search"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "query",
									"value": "CPU High",
									"description": "[optional], After entering a search query in your Manage Monitor page use the query parameter value in the URL of the page as value for this parameter. Consult the dedicated manage monitor documentation page to learn more."
								},
								{
									"key": "page",
									"value": "insert pagination number here",
									"description": "[optional, default = 0], Page to start paginating from.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "insert value here",
									"description": "[optional, default=30],  Number of monitors to return per page.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "insert value here",
									"description": "[optional, default=null], Comma separated string for sort order (e.g. name,asc) supported fields:\n\nname\nstatus\ntags",
									"disabled": true
								}
							]
						},
						"description": "Search and filter your monitors details.\n\nARGUMENTS\nquery [optional]:\n\nAfter entering a search query in your Manage Monitor page use the query parameter value in the URL of the page as value for this parameter. Consult the dedicated manage monitor documentation page to learn more.\n\npage [optional, default = 0]:\n\nPage to start paginating from.\n\nper_page [optional, default=30]:\n\nNumber of monitors to return per page.\n\nsort [optional, default=null]:\n\nComma separated string for sort order (e.g. name,asc) supported fields:\n\nname\nstatus\ntags"
					},
					"response": []
				},
				{
					"name": "Monitor Group Search",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/monitor/groups/search?api_key={{dd_api_key}}&application_key={{dd_app_key}}&query=ELB",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"groups",
								"search"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "query",
									"value": "ELB",
									"description": "[optional], After entering a search query in your Manage Monitor page use the query parameter value in the URL of the page as value for this parameter. Consult the dedicated manage monitor documentation page to learn more."
								},
								{
									"key": "page",
									"value": "insert pagination number here",
									"description": "[optional, default = 0], Page to start paginating from.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "insert value here",
									"description": "[optional, default=30],  Number of monitors to return per page.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "insert value here",
									"description": "[optional, default=null], Comma separated string for sort order (e.g. name,asc) supported fields:\n\nname\nstatus\ntags",
									"disabled": true
								}
							]
						},
						"description": "Search and filter your monitor groups details.\n\nARGUMENTS\nquery [optional]:\n\nAfter entering a search query in your Manage Monitor page use the query parameter value in the URL of the page as value for this parameter. Consult the dedicated manage monitor documentation page to learn more.\n\npage [optional, default = 0]:\n\nPage to start paginating from.\n\nper_page [optional, default=30]:\n\nNumber of monitors to return per page.\n\nsort [optional, default=null]:\n\nComma separated string for sort order (e.g. name,asc) supported fields:\n\nname\nstatus\ntags"
					},
					"response": []
				}
			],
			"description": "Monitors allow you to watch a metric or check that you care about, notifying your team when some defined threshold is exceeded. Please refer to the Guide to Monitors for more information on creating monitors."
		},
		{
			"name": "Organizations",
			"item": [
				{
					"name": "Get all Orgs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/org?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"org"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Organization Update",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"settings\": {\n            \"saml\": {\n                \"enabled\": false\n            },\n            \"saml_strict_mode\": {\n                \"enabled\": false\n            },\n            \"saml_idp_initiated_login\": {\n                \"enabled\": false\n            },\n            \"saml_autocreate_users_domains\": {\n                \"enabled\": false,\n                \"domains\": [\n                    \"my-org.com\",\n                    \"example.com\"\n                ]\n            }\n        }\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/org/e5637d13b",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"org",
								"e5637d13b"
							]
						},
						"description": "ARGUMENTS\nname [optional]:\nThe organization name.\nsettings [optional]:\nA JSON array of settings. Settings include:\nsaml - Set the boolean property enabled to enable or disable single sign on with SAML. See the SAML documentation for more information about all SAML settings.\nsaml_idp_initiated_login - has one property enabled (boolean).v\nsaml_strict_mode - has one property enabled (boolean).\nsaml_autocreate_users_domains - has two properties: enabled (boolean) and domains which is a list of domains without the @ symbol."
					},
					"response": []
				},
				{
					"name": "POST Organization IdP Provider",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"settings\": {\n            \"saml\": {\n                \"enabled\": true\n            },\n            \"saml_strict_mode\": {\n                \"enabled\": true\n            },\n            \"saml_idp_initiated_login\": {\n                \"enabled\": true\n            },\n            \"saml_autocreate_users_domains\": {\n                \"enabled\": true,\n                \"domains\": [\n                    \"my-org.com\",\n                    \"example.com\"\n                ]\n            }\n        }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/org/idp_metadata",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"org",
								"idp_metadata"
							]
						},
						"description": "ARGUMENTS\nidp_file [required]:\nThe path to the XML metadata file you wish to upload."
					},
					"response": []
				},
				{
					"name": "Create Child Org",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"Setup Child Org Via API\",\n    \"subscription\" : {\n        \"type\" : \"trial\"\n    },\n    \"billing\" : {\n        \"type\" : \"parent_billing\"\n    }\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/org?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"org"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "create child org, based off api_key and app_key"
					},
					"response": []
				}
			],
			"description": "This endpoint requires the multi-org account feature and must be enabled by contacting support.\n\nMulti-org feature:https://docs.datadoghq.com/account_management/multi_organization\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4bfcbf69-1cf1-43f5-bcb1-7eb0e3d3b95f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8192426f-c281-4ad7-88a5-012c97209c9c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Screenboards",
			"item": [
				{
					"name": "Update ScreenBoard",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"board_title\": \"Number of Agents or EC2 reporting\",\n    \"read_only\": false,\n    \"created\": \"2017-04-25T22:12:54.909853+00:00\",\n    \"modified\": \"2017-04-25T22:15:01.403148+00:00\",\n    \"height\": 768,\n    \"width\": 1024,\n    \"widgets\": [\n        {\n            \"x\": 24,\n            \"title\": \"New Agents reporting, past week\",\n            \"height\": 57,\n            \"width\": 59,\n            \"timeframe\": \"1w\",\n            \"y\": 30,\n            \"query\": \"Datadog agent started\",\n            \"type\": \"event_stream\"\n        },\n        {\n            \"title_size\": 16,\n            \"title\": true,\n            \"title_align\": \"left\",\n            \"title_text\": \"Agent host count reporting (system.cpu.user)\",\n            \"height\": 26,\n            \"tile_def\": {\n                \"viz\": \"timeseries\",\n                \"requests\": [\n                    {\n                        \"q\": \"count:system.cpu.user{*}.rollup(max,3600)\",\n                        \"aggregator\": \"avg\",\n                        \"conditional_formats\": [],\n                        \"type\": \"line\"\n                    }\n                ]\n            },\n            \"width\": 47,\n            \"timeframe\": \"1w\",\n            \"y\": 1,\n            \"x\": 1,\n            \"type\": \"timeseries\"\n        },\n        {\n            \"title_size\": 16,\n            \"title\": true,\n            \"title_align\": \"left\",\n            \"title_text\": \"AWS host count reporting (ec2.host_ok)\",\n            \"height\": 26,\n            \"tile_def\": {\n                \"viz\": \"timeseries\",\n                \"requests\": [\n                    {\n                        \"q\": \"count:aws.ec2.host_ok{*}.rollup(max,3600)\",\n                        \"aggregator\": \"avg\",\n                        \"conditional_formats\": [],\n                        \"type\": \"line\"\n                    }\n                ]\n            },\n            \"width\": 47,\n            \"timeframe\": \"1w\",\n            \"y\": 1,\n            \"x\": 50,\n            \"type\": \"timeseries\"\n        }\n    ],\n    \"id\": 177964\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/screen/177964?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"screen",
								"177964"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Will update Screenboard definition"
					},
					"response": []
				},
				{
					"name": "Revoke Share of Screenboard",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"width\": 1024,\n        \"height\": 768,\n        \"board_title\": \"Number of Agents or EC2 reporting\",\n        \"widgets\": [\n            {\n                \"type\": \"event_stream\",\n                \"title\": \"New Agents reporting, past week\",\n                \"height\": 57,\n                \"width\": 59,\n\n                \"y\": 30,\n                \"x\": 24,\n\n                \"query\": \"Datadog agent started\",\n                \"timeframe\": \"1w\"\n            },\n            {\"type\": \"timeseries\",\n\n               \"title\": true,\n               \"title_size\": 16,\n               \"title_align\": \"left\",\n               \"title_text\": \"Agent host count reporting (system.cpu.user)\",\n\n               \"height\": 26,\n               \"width\": 47,\n\n               \"y\": 1,\n               \"x\": 1,\n\n               \"timeframe\": \"1w\",\n                 \"tile_def\": {\n                   \"viz\": \"timeseries\",\n                   \"requests\": [\n                      {\n                           \"q\": \"count:system.cpu.user{*}.rollup(max,3600)\",\n                           \"aggregator\": \"avg\",\n                           \"conditional_formats\": [],\n                           \"type\": \"line\"\n\n                      }\n                      ]\n                 }\n            },\n    {\"type\": \"timeseries\",\n\n               \"title\": true,\n               \"title_size\": 16,\n               \"title_align\": \"left\",\n               \"title_text\": \"AWS host count reporting (ec2.host_ok)\",\n\n               \"height\": 26,\n               \"width\": 47,\n\n               \"y\": 1,\n               \"x\": 50,\n\n               \"timeframe\": \"1w\",\n                 \"tile_def\": {\n                   \"viz\": \"timeseries\",\n                   \"requests\": [\n                      {\n                           \"q\": \"count:aws.ec2.host_ok{*}.rollup(max,3600)\",\n                           \"aggregator\": \"avg\",\n                           \"conditional_formats\": [],\n                           \"type\": \"line\"\n\n                      }\n                      ]\n                     }\n\n                 }\n        ]\n    }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/screen/share/178837?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"screen",
								"share",
								"178837"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Revoke a currently shared screenboard's.\n\nARGUMENTS\n\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Setup New ScreenBoard",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"width\": 1024,\n        \"height\": 768,\n        \"board_title\": \"Number of Agents or EC2 reporting\",\n        \"widgets\": [\n            {\n                \"type\": \"event_stream\",\n                \"title\": \"New Agents reporting, past week\",\n                \"height\": 57,\n                \"width\": 59,\n\n                \"y\": 30,\n                \"x\": 24,\n\n                \"query\": \"Datadog agent started\",\n                \"timeframe\": \"1w\"\n            },\n            {\"type\": \"timeseries\",\n\n               \"title\": true,\n               \"title_size\": 16,\n               \"title_align\": \"left\",\n               \"title_text\": \"Agent host count reporting (system.cpu.user)\",\n\n               \"height\": 26,\n               \"width\": 47,\n\n               \"y\": 1,\n               \"x\": 1,\n\n               \"timeframe\": \"1w\",\n                 \"tile_def\": {\n                   \"viz\": \"timeseries\",\n                   \"requests\": [\n                      {\n                           \"q\": \"count:system.cpu.user{*}.rollup(max,3600)\",\n                           \"aggregator\": \"avg\",\n                           \"conditional_formats\": [],\n                           \"type\": \"line\"\n\n                      }\n                      ]\n                 }\n            },\n    {\"type\": \"timeseries\",\n\n               \"title\": true,\n               \"title_size\": 16,\n               \"title_align\": \"left\",\n               \"title_text\": \"AWS host count reporting (ec2.host_ok)\",\n\n               \"height\": 26,\n               \"width\": 47,\n\n               \"y\": 1,\n               \"x\": 50,\n\n               \"timeframe\": \"1w\",\n                 \"tile_def\": {\n                   \"viz\": \"timeseries\",\n                   \"requests\": [\n                      {\n                           \"q\": \"count:aws.ec2.host_ok{*}.rollup(max,3600)\",\n                           \"aggregator\": \"avg\",\n                           \"conditional_formats\": [],\n                           \"type\": \"line\"\n\n                      }\n                      ]\n                     }\n\n                 }\n        ]\n    }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/screen?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"screen"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\n*board_title [required]\nThe name of the dashboard.\n\n*description [optional, default=None]\nA description of the dashboard's content.\n\n*widgets [required]\nA list of widget definitions. See here for more examples.\n\n*template_variables [optional, default=None]\nA list of template variables for using Dashboard templating.\n\n*width [optional, default=None]\nScreenboard width in pixels\n\n*height [optional, default=None]\nHeight in pixels.\n\n*read_only [optional, default=False]\nThe read-only status of the screenboard."
					},
					"response": []
				},
				{
					"name": "DELETE ScreenBoard",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"board_title\": \"Number of Agents or EC2 reporting\",\n    \"read_only\": false,\n    \"created\": \"2017-04-25T22:12:54.909853+00:00\",\n    \"modified\": \"2017-04-25T22:15:01.403148+00:00\",\n    \"height\": 768,\n    \"width\": 1024,\n    \"widgets\": [\n        {\n            \"x\": 24,\n            \"title\": \"New Agents reporting, past week\",\n            \"height\": 57,\n            \"width\": 59,\n            \"timeframe\": \"1w\",\n            \"y\": 30,\n            \"query\": \"Datadog agent started\",\n            \"type\": \"event_stream\"\n        },\n        {\n            \"title_size\": 16,\n            \"title\": true,\n            \"title_align\": \"left\",\n            \"title_text\": \"Agent host count reporting (system.cpu.user)\",\n            \"height\": 26,\n            \"tile_def\": {\n                \"viz\": \"timeseries\",\n                \"requests\": [\n                    {\n                        \"q\": \"count:system.cpu.user{*}.rollup(max,3600)\",\n                        \"aggregator\": \"avg\",\n                        \"conditional_formats\": [],\n                        \"type\": \"line\"\n                    }\n                ]\n            },\n            \"width\": 47,\n            \"timeframe\": \"1w\",\n            \"y\": 1,\n            \"x\": 1,\n            \"type\": \"timeseries\"\n        },\n        {\n            \"title_size\": 16,\n            \"title\": true,\n            \"title_align\": \"left\",\n            \"title_text\": \"AWS host count reporting (ec2.host_ok)\",\n            \"height\": 26,\n            \"tile_def\": {\n                \"viz\": \"timeseries\",\n                \"requests\": [\n                    {\n                        \"q\": \"count:aws.ec2.host_ok{*}.rollup(max,3600)\",\n                        \"aggregator\": \"avg\",\n                        \"conditional_formats\": [],\n                        \"type\": \"line\"\n                    }\n                ]\n            },\n            \"width\": 47,\n            \"timeframe\": \"1w\",\n            \"y\": 1,\n            \"x\": 50,\n            \"type\": \"timeseries\"\n        }\n    ],\n    \"id\": 177964\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/screen/177964?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"screen",
								"177964"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Will DELETE Screenboard definition"
					},
					"response": []
				},
				{
					"name": "Get All Screenboards",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/screen?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"screen"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Fetch all of your screenboards' definitions.\n\nARGUMENTS\n\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Share A Screenboard",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/screen/share/178837?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"screen",
								"share",
								"178837"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Share an existing screenboard's with a public URL.\n\nARGUMENTS\n\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "GET ScreenBoard Definition",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/screen/177964?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"screen",
								"177964"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Will get screenboard definition by screenboard id"
					},
					"response": []
				}
			],
			"description": "You can view more detailed documentation on the Screenboard API at http://docs.datadoghq.com/api/screenboards/."
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "Search",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/search?api_key={{dd_api_key}}&application_key={{dd_app_key}}&q=cpu",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"search"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "q",
									"value": "cpu"
								}
							]
						},
						"description": "This end point allows you to search for entities from the last 24 hours in Datadog. The currently searchable entities are:\n\nhosts\n*metrics\n*ARGUMENTS\n\n*q [required]\nThe query string\nQUERY LANGUAGE\n\nSearch queries allow for limited faceting. Available facets are:\n\n*hosts\n*metrics\nFaceting your search limits your results to only matches of the specified type. Un-faceted queries return results for all possible types.\n\nUn-faceted queries are of the form:\n\n*query_string\nFaceted queries are of the form:\n\n*facet:query_string"
					},
					"response": []
				}
			],
			"description": "This end point allows you to search for entities from the last 24 hours in Datadog. The currently searchable entities are:\n\n* hosts\n* metrics\n\nARGUMENTS\n\n* q [required]\nThe query string\n\n\nQUERY LANGUAGE\n\nSearch queries allow for limited faceting. Available facets are:\n\n* hosts\n* metrics\n\n\nFaceting your search limits your results to only matches of the specified type. Un-faceted queries return results for all possible types.\n\nUn-faceted queries are of the form:\n* query_string\nFaceted queries are of the form:\n* facet:query_string"
		},
		{
			"name": "Tags",
			"item": [
				{
					"name": "Update All Tags By Hostname",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tags\": [\n    \"aws:cloudformation:stack-name:myfirstinstance\",\n    \"name:myfirstinstance\",\n    \"demo\",\n    \"image:ami-80861296\",\n    \"region:us-east-1\",\n    \"instance-type:t2.micro\",\n    \"aws:cloudformation:logical-id:webserverinstance\",\n    \"security-group:sg-658ba51a\",\n    \"availability-zone:us-east-1c\",\n    \"kernel:none\",\n    \"aws:cloudformation:stack-id:arn:aws:cloudformation:us-east-1:989648780687:stack/myfirstinstance/7f4b9880-250e-11e7-94ec-500c20fefad2\"\n  ]\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/tags/hosts/i-0f125915827da9af1?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								"i-0f125915827da9af1"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "The POST will update all tags, not just the one new tag."
					},
					"response": []
				},
				{
					"name": "Add Tags By Hostname",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tags\": [\n    \"blank:test2\"\n  ]\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/tags/hosts/i-0f125915827da9af1?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								"i-0f125915827da9af1"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Host Tags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/tags/hosts/i-0f125915827da9af1?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								"i-0f125915827da9af1"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Get all host tags by hostname"
					},
					"response": []
				}
			],
			"description": "The tag end point allows you to tag hosts with keywords meaningful to you - like role:database. All metrics sent from a host will have its tags applied. When fetching and applying tags to a particular host, you can refer to hosts by name (yourhost.example.com).\n\nThe component of your infrastructure responsible for a tag is identified by a source. Valid sources are: nagios, hudson, jenkins, users, feed, chef, puppet, git, bitbucket, fabric, capistrano."
		},
		{
			"name": "Timeboards",
			"item": [
				{
					"name": "Create a Timeboard",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"graphs\" : [{\n          \"title\": \"Average Memory Free\",\n          \"definition\": {\n              \"events\": [],\n              \"requests\": [\n                  {\"q\": \"avg:system.mem.free{*}\"}\n              ]\n          },\n          \"viz\": \"timeseries\"\n      }],\n      \"title\" : \"Average Memory Free Shell\",\n      \"description\" : \"A dashboard with memory info.\",\n      \"template_variables\": [{\n          \"name\": \"host1\",\n          \"prefix\": \"host\",\n          \"default\": \"host:my-host\"\n      }],\n      \"read_only\": \"True\"\n    }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/dash?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dash"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\n*title [required]\nThe name of the dashboard.\n\n*description [required]\nA description of the dashboard's content.\n\n*graphs [required]\nA list of graph definitions. Graph definitions follow this form:\n\n**title [required]\nThe name of the graph.\n\n**definition [required]\nThe graph definition. \n\n***Example:\n{\"requests\": [{\"q\": \"system.cpu.idle{*} by {host}\"}\n\n\n**template_variables [optional, default=None]\nA list of template variables for using Dashboard templating. Template variable definitions follow this \n\n**form:\n\n***name [required]\nThe name of the variable.\n\n***prefix [optional, default=None]\nThe tag prefix associated with the variable. Only tags with this prefix will appear in the variable dropdown.\n\n***default [optional, default=None]\nThe default value for the template variable on dashboard load"
					},
					"response": []
				},
				{
					"name": "Get A TimeBoard",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/dash/306185?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dash",
								"306185"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Fetch an existing dashboard's definition.\n\nARGUMENTS\n\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Get All TimeBoards",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/dash?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dash"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Fetch all of your timeboards' definitions.\n\nARGUMENTS\n\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Update a Timeboard",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"created by test@example.com\",\n    \"graphs\": [\n        {\n            \"definition\": {\n                \"autoscale\": false,\n                \"custom_unit\": \"\\u00b0F\",\n                \"precision\": \"0\",\n                \"requests\": [\n                    {\n                        \"aggregator\": \"last\",\n                        \"conditional_formats\": [],\n                        \"q\": \"avg:weather.temp_f_broomfield{*}\"\n                    }\n                ],\n                \"status\": \"done\",\n                \"viz\": \"query_value\"\n            },\n            \"title\": \"Broomfield Current Temp\"\n        },\n        {\n            \"definition\": {\n                \"autoscale\": false,\n                \"custom_unit\": \"MPH\",\n                \"precision\": \"0\",\n                \"requests\": [\n                    {\n                        \"aggregator\": \"last\",\n                        \"conditional_formats\": [],\n                        \"q\": \"avg:weather.wind_mph_broomfield{*}\",\n                        \"type\": \"line\"\n                    }\n                ],\n                \"status\": \"done\",\n                \"viz\": \"query_value\"\n            },\n            \"title\": \"Broomfield Wind Strength\"\n        },\n        {\n            \"definition\": {\n                \"autoscale\": false,\n                \"custom_unit\": \"%\",\n                \"precision\": \"0\",\n                \"requests\": [\n                    {\n                        \"aggregator\": \"last\",\n                        \"conditional_formats\": [],\n                        \"q\": \"avg:weather.humidity_broomfield{*}\"\n                    }\n                ],\n                \"status\": \"done\",\n                \"viz\": \"query_value\"\n            },\n            \"title\": \"Broomfield Humidity\"\n        },\n        {\n            \"definition\": {\n                \"autoscale\": true,\n                \"requests\": [\n                    {\n                        \"aggregator\": \"avg\",\n                        \"conditional_formats\": [],\n                        \"q\": \"avg:weather.temp_f_broomfield{*}\",\n                        \"style\": {\n                            \"palette\": \"orange\"\n                        },\n                        \"type\": \"line\"\n                    }\n                ],\n                \"status\": \"done\",\n                \"viz\": \"timeseries\"\n            },\n            \"title\": \"Broomfield Temp\"\n        },\n        {\n            \"definition\": {\n                \"autoscale\": true,\n                \"requests\": [\n                    {\n                        \"aggregator\": \"avg\",\n                        \"conditional_formats\": [],\n                        \"q\": \"avg:weather.wind_mph_broomfield{*}\",\n                        \"style\": {\n                            \"palette\": \"orange\"\n                        },\n                        \"type\": \"area\"\n                    }\n                ],\n                \"status\": \"done\",\n                \"viz\": \"timeseries\"\n            },\n            \"title\": \"Broomfield Wind\"\n        }\n    ],\n    \"read_only\": false,\n    \"template_variables\": [\n        {\n            \"default\": \"*\",\n            \"name\": \"source\",\n            \"prefix\": \"source\"\n        }\n    ],\n    \"title\": \"Broomfield CO Weather\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/dash/346679?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dash",
								"346679"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\n*title [required]\nThe name of the dashboard.\n\n*description [required]\nA description of the dashboard's contents.\n\n*graphs [required]\nA list of graph definitions. Graph definitions follow this form:\n\n*title [required]\nThe name of the graph.\n\n*definition [required]\nThe graph definition. Read the Graph Guide for more on graphs. Example:\n{\"requests\": [{\"q\": \"system.cpu.idle{*} by {host}\"}\n\n*template_variables [optional, default=None]\nA list of template variables for using Dashboard templating. Template variable definitions follow this form:\n\n*name [required]\nThe name of the variable.\n\n*prefix [optional, default=None]\nThe tag prefix associated with the variable. Only tags with this prefix will appear in the variable dropdown.\n\n*default [optional, default=None]\nThe default value for the template variable on dashboard load"
					},
					"response": []
				}
			],
			"description": "This endpoint allows you to programmatically create, update delete and query timeboards."
		},
		{
			"name": "Usage Metering",
			"item": [
				{
					"name": "GET Top 500 Custom Metrics by Hourly Usage",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/usage/top_avg_metrics?api_key={{dd_api_key}}&application_key={{dd_app_key}}&month=2018-02&names=aws.ec2.spot_history,system.processes.number",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"top_avg_metrics"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "month",
									"value": "2018-02",
									"description": "Required: datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning at this hour."
								},
								{
									"key": "names",
									"value": "aws.ec2.spot_history,system.processes.number",
									"description": "optional: comma-separated list of metric names "
								}
							]
						},
						"description": "Get Top Custom Metrics By Hourly Average.\n\nArguments\nmonth [required]:\ndatetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning at this hour.\nnames [optional, default=None]:\nComma-separated list of metric names."
					},
					"response": []
				},
				{
					"name": "GET Hourly Usage For Hosts and Containers",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/usage/hosts?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start_hr=2018-03-16T00&end_hr=2018-03-17T00",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"hosts"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start_hr",
									"value": "2018-03-16T00",
									"description": "datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour"
								},
								{
									"key": "end_hr",
									"value": "2018-03-17T00",
									"description": "datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour"
								}
							]
						},
						"description": "Get Hourly Usage For Hosts and Containers.\n\nArguments\nstart_hr [required]:\ndatetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour\nend_hr [optional, default=1d+start_hr]:\ndatetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour\n\n\nResponse\ncontainer_count:\nShows the total number of containers reporting via the Docker integration during the hour.\nhost_count:\nContains the total number of billable infrastructure hosts reporting during a given hour. This is the sum of agent_host_count, aws_host_count, and gcp_host_count.\nhour:\nThe hour for the usage.\napm_host_count:\nShows the total number of hosts using APM during the hour. For Pro plans, these are counted as billable (except during trial periods). For Enterprise plans, APM hosts are included in the price of infrastructure hosts (see host_count) and not billed separately.\nagent_host_count:\nContains the total number of infrastructure hosts reporting during a given hour that were running the Datadog Agent.\ngcp_host_count:\nContains the total number of hosts that reported via the Google Cloud integration (and were NOT running the Datadog Agent).\naws_host_count:\nContains the total number of hosts that reported via the AWS integration (and were NOT running the Datadog Agent). When AWS or GCP hosts are also running the Datadog Agent, they are counted as Agent hosts, NOT as AWS or GCP"
					},
					"response": []
				},
				{
					"name": "GET Hourly Usage for Custom Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/usage/timeseries?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start_hr=2018-03-01T14&end_hr=2018-03-02T14",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"timeseries"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start_hr",
									"value": "2018-03-01T14",
									"description": "Required: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour"
								},
								{
									"key": "end_hr",
									"value": "2018-03-02T14",
									"description": "Optional: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour"
								}
							]
						},
						"description": "Get Top Custom Metrics By Hourly Average.\n\nArguments\nmonth [required]:\ndatetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning at this hour.\nnames [optional, default=None]:\nComma-separated list of metric names."
					},
					"response": []
				},
				{
					"name": "GET Multi-Org Usage Details",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/usage/summary?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start_month=2018-03",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"summary"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start_month",
									"value": "2018-03",
									"description": "[required]:\nDatetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning in this month. Maximum of 15 months ago."
								},
								{
									"key": "end_month",
									"value": "2018-04",
									"description": "[optional, default=current_month-3d]: Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage ending this month.",
									"disabled": true
								},
								{
									"key": "include_org_ids",
									"value": "76293afda",
									"description": "[optional, default=true]: Include usage summaries for each sub-org.",
									"disabled": true
								}
							]
						},
						"description": "Get usage across your multi-org account\n\nArguments\nstart_month [required]:\nDatetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning in this month. Maximum of 15 months ago.\nend_month [optional, default=current_month-3d]: Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage ending this month.\ninclude_org_details [optional, default=true]: Include usage summaries for each sub-org."
					},
					"response": []
				}
			],
			"description": "This API is currently in private beta. Python and Ruby clients are not yet supported.\n\nThe usage metering end-point allows you to:\n\nGet Hourly Usage For Hosts and Containers\nGet Hourly Usage For Custom Metrics\nGet Top Custom Metrics By Hourly Average\nUsage data is delayed by up to 72 hours from when it was incurred. It is retained for the past 15 months."
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users of An Org",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/user?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"user"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Get's all user details for an org"
					},
					"response": []
				},
				{
					"name": "Disable A Users by Handle",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/user/test@gmail.com?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"user",
								"test@gmail.com"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "DELETE a user by handle"
					},
					"response": []
				},
				{
					"name": "Update User Info by Handle",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user\": {\n    \"disabled\": false,\n    \"handle\": \"email@domain.com\",\n    \"name\": \"Testy McTestingson\",\n    \"is_admin\": true,\n    \"role\": null,\n    \"access_role\": \"adm\",\n    \"verified\": true,\n    \"email\": \"email@domain.com\",\n    \"icon\": \"https://secure.gravatar.com/avatar/df46ee85ff1cbb518b20c8cab742b9ea?s=48&d=retro\"\n  }\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/user/email@domain.com?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"user",
								"email@domain.com"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Update User Profile by handle"
					},
					"response": []
				},
				{
					"name": "Get Single User of An Org by handle",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/user/email@domain.com?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"user",
								"email@domain.com"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Get user info from handle"
					},
					"response": []
				},
				{
					"name": "Create User for an Org",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"disabled\": false,\n    \"handle\": \"test@gmail.com\",\n    \"name\": \"Testy McTestingson\",\n    \"is_admin\": true,\n    \"role\": null,\n    \"access_role\": \"adm\",\n    \"verified\": true,\n    \"email\": \"test@gmail.com\",\n    \"icon\": \"https://secure.gravatar.com/avatar/df46ee85ff1cbb518b20c8cab742b9ea?s=48&d=retro\"\n  }\n"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/user?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"user"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Create new user"
					},
					"response": []
				}
			],
			"description": "You can create, edit, and disable users."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "c41623be-f6de-4e50-b2d7-a774bd352140",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "72537730-7e9d-49b3-96a1-49995ee97eba",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
