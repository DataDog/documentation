{
  "components": {
    "callbacks": {},
    "examples": {},
    "headers": {},
    "links": {},
    "parameters": {
      "ArchiveID": {
        "description": "The ID of the archive.",
        "in": "path",
        "name": "archive_id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "PageNumber": {
        "description": "Specific page number to return.",
        "in": "query",
        "name": "page[number]",
        "required": false,
        "schema": {
          "default": 0,
          "format": "int64",
          "type": "integer"
        }
      },
      "PageSize": {
        "description": "Size for a given page.",
        "in": "query",
        "name": "page[size]",
        "required": false,
        "schema": {
          "default": 10,
          "format": "int64",
          "type": "integer"
        }
      },
      "RestrictionQueryID": {
        "description": "The ID of the restriction query.",
        "in": "path",
        "name": "restriction_query_id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "RestrictionQueryRoleID": {
        "description": "The ID of the role.",
        "in": "path",
        "name": "role_id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "RestrictionQueryUserID": {
        "description": "The ID of the user.",
        "in": "path",
        "name": "user_id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "RoleID": {
        "description": "The ID of the role.",
        "in": "path",
        "name": "role_id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "SecurityMonitoringRuleID": {
        "description": "The ID of the rule.",
        "in": "path",
        "name": "rule_id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "UserID": {
        "description": "The ID of the user.",
        "in": "path",
        "name": "user_id",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {},
    "responses": {
      "BadRequestResponse": {
        "content": {
          "application/json": {
            "schema": {
              "description": "API error response.",
              "properties": {
                "errors": {
                  "description": "A list of errors.",
                  "items": {
                    "description": "A list of items.",
                    "example": "Bad Request",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "description": "Bad Request"
      },
      "ConcurrentModificationResponse": {
        "content": {
          "application/json": {
            "schema": {
              "description": "API error response.",
              "properties": {
                "errors": {
                  "description": "A list of errors.",
                  "items": {
                    "description": "A list of items.",
                    "example": "Bad Request",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "description": "Concurrent Modification"
      },
      "NotAuthorizedResponse": {
        "content": {
          "application/json": {
            "schema": {
              "description": "API error response.",
              "properties": {
                "errors": {
                  "description": "A list of errors.",
                  "items": {
                    "description": "A list of items.",
                    "example": "Bad Request",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "description": "Not Authorized"
      },
      "NotFoundResponse": {
        "content": {
          "application/json": {
            "schema": {
              "description": "API error response.",
              "properties": {
                "errors": {
                  "description": "A list of errors.",
                  "items": {
                    "description": "A list of items.",
                    "example": "Bad Request",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "errors"
              ],
              "type": "object"
            }
          }
        },
        "description": "Not Found"
      }
    },
    "schemas": {
      "APIErrorResponse": {
        "description": "API error response.",
        "properties": {
          "errors": {
            "description": "A list of errors.",
            "items": {
              "description": "A list of items.",
              "example": "Bad Request",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "errors"
        ],
        "type": "object"
      },
      "Creator": {
        "description": "Creator of the object.",
        "properties": {
          "email": {
            "description": "Email of the creator.",
            "type": "string"
          },
          "handle": {
            "description": "Handle of the creator.",
            "type": "string"
          },
          "name": {
            "description": "Name of the creator.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DashboardListAddItemsRequest": {
        "description": "Request containing a list of dashboards to add.",
        "properties": {
          "dashboards": {
            "description": "List of dashboards to add the dashboard list.",
            "items": {
              "description": "A dashboard within a list.",
              "properties": {
                "id": {
                  "description": "ID of the dashboard.",
                  "example": "q5j-nti-fv6",
                  "type": "string"
                },
                "type": {
                  "description": "The type of the dashboard.",
                  "enum": [
                    "custom_timeboard",
                    "custom_screenboard",
                    "integration_screenboard",
                    "integration_timeboard",
                    "host_timeboard"
                  ],
                  "type": "string",
                  "x-enum-varnames": [
                    "CUSTOM_TIMEBOARD",
                    "CUSTOM_SCREENBOARD",
                    "INTEGRATION_SCREENBOARD",
                    "INTEGRATION_TIMEBOARD",
                    "HOST_TIMEBOARD"
                  ]
                }
              },
              "required": [
                "type",
                "id"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DashboardListAddItemsResponse": {
        "description": "Response containing a list of added dashboards.",
        "properties": {
          "added_dashboards_to_list": {
            "description": "List of dashboards added to the dashboard list.",
            "items": {
              "description": "A dashboard within a list.",
              "properties": {
                "id": {
                  "description": "ID of the dashboard.",
                  "example": "q5j-nti-fv6",
                  "readOnly": true,
                  "type": "string"
                },
                "type": {
                  "description": "The type of the dashboard.",
                  "enum": [
                    "custom_timeboard",
                    "custom_screenboard",
                    "integration_screenboard",
                    "integration_timeboard",
                    "host_timeboard"
                  ],
                  "type": "string",
                  "x-enum-varnames": [
                    "CUSTOM_TIMEBOARD",
                    "CUSTOM_SCREENBOARD",
                    "INTEGRATION_SCREENBOARD",
                    "INTEGRATION_TIMEBOARD",
                    "HOST_TIMEBOARD"
                  ]
                }
              },
              "required": [
                "type",
                "id"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DashboardListDeleteItemsRequest": {
        "description": "Request containing a list of dashboards to delete.",
        "properties": {
          "dashboards": {
            "description": "List of dashboards to delete from the dashboard list.",
            "items": {
              "description": "A dashboard within a list.",
              "properties": {
                "id": {
                  "description": "ID of the dashboard.",
                  "example": "q5j-nti-fv6",
                  "type": "string"
                },
                "type": {
                  "description": "The type of the dashboard.",
                  "enum": [
                    "custom_timeboard",
                    "custom_screenboard",
                    "integration_screenboard",
                    "integration_timeboard",
                    "host_timeboard"
                  ],
                  "type": "string",
                  "x-enum-varnames": [
                    "CUSTOM_TIMEBOARD",
                    "CUSTOM_SCREENBOARD",
                    "INTEGRATION_SCREENBOARD",
                    "INTEGRATION_TIMEBOARD",
                    "HOST_TIMEBOARD"
                  ]
                }
              },
              "required": [
                "type",
                "id"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DashboardListDeleteItemsResponse": {
        "description": "Response containing a list of deleted dashboards.",
        "properties": {
          "deleted_dashboards_from_list": {
            "description": "List of dashboards deleted from the dashboard list.",
            "items": {
              "description": "A dashboard within a list.",
              "properties": {
                "id": {
                  "description": "ID of the dashboard.",
                  "example": "q5j-nti-fv6",
                  "readOnly": true,
                  "type": "string"
                },
                "type": {
                  "description": "The type of the dashboard.",
                  "enum": [
                    "custom_timeboard",
                    "custom_screenboard",
                    "integration_screenboard",
                    "integration_timeboard",
                    "host_timeboard"
                  ],
                  "type": "string",
                  "x-enum-varnames": [
                    "CUSTOM_TIMEBOARD",
                    "CUSTOM_SCREENBOARD",
                    "INTEGRATION_SCREENBOARD",
                    "INTEGRATION_TIMEBOARD",
                    "HOST_TIMEBOARD"
                  ]
                }
              },
              "required": [
                "type",
                "id"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DashboardListItem": {
        "description": "A dashboard within a list.",
        "properties": {
          "author": {
            "description": "Creator of the object.",
            "properties": {
              "email": {
                "description": "Email of the creator.",
                "type": "string"
              },
              "handle": {
                "description": "Handle of the creator.",
                "type": "string"
              },
              "name": {
                "description": "Name of the creator.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "created": {
            "description": "Date of creation of the dashboard.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "icon": {
            "description": "URL to the icon of the dashboard.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "ID of the dashboard.",
            "example": "q5j-nti-fv6",
            "type": "string"
          },
          "is_favorite": {
            "description": "Whether or not the dashboard is in the favorites.",
            "readOnly": true,
            "type": "boolean"
          },
          "is_read_only": {
            "description": "Whether or not the dashboard is read only.",
            "readOnly": true,
            "type": "boolean"
          },
          "is_shared": {
            "description": "Whether the dashboard is publicly shared or not.",
            "readOnly": true,
            "type": "boolean"
          },
          "modified": {
            "description": "Date of last edition of the dashboard.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "popularity": {
            "description": "Popularity of the dashboard.",
            "format": "int32",
            "maximum": 5,
            "readOnly": true,
            "type": "integer"
          },
          "title": {
            "description": "Title of the dashboard.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The type of the dashboard.",
            "enum": [
              "custom_timeboard",
              "custom_screenboard",
              "integration_screenboard",
              "integration_timeboard",
              "host_timeboard"
            ],
            "type": "string",
            "x-enum-varnames": [
              "CUSTOM_TIMEBOARD",
              "CUSTOM_SCREENBOARD",
              "INTEGRATION_SCREENBOARD",
              "INTEGRATION_TIMEBOARD",
              "HOST_TIMEBOARD"
            ]
          },
          "url": {
            "description": "URL path to the dashboard.",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "type",
          "id"
        ],
        "type": "object"
      },
      "DashboardListItemRequest": {
        "description": "A dashboard within a list.",
        "properties": {
          "id": {
            "description": "ID of the dashboard.",
            "example": "q5j-nti-fv6",
            "type": "string"
          },
          "type": {
            "description": "The type of the dashboard.",
            "enum": [
              "custom_timeboard",
              "custom_screenboard",
              "integration_screenboard",
              "integration_timeboard",
              "host_timeboard"
            ],
            "type": "string",
            "x-enum-varnames": [
              "CUSTOM_TIMEBOARD",
              "CUSTOM_SCREENBOARD",
              "INTEGRATION_SCREENBOARD",
              "INTEGRATION_TIMEBOARD",
              "HOST_TIMEBOARD"
            ]
          }
        },
        "required": [
          "type",
          "id"
        ],
        "type": "object"
      },
      "DashboardListItemResponse": {
        "description": "A dashboard within a list.",
        "properties": {
          "id": {
            "description": "ID of the dashboard.",
            "example": "q5j-nti-fv6",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The type of the dashboard.",
            "enum": [
              "custom_timeboard",
              "custom_screenboard",
              "integration_screenboard",
              "integration_timeboard",
              "host_timeboard"
            ],
            "type": "string",
            "x-enum-varnames": [
              "CUSTOM_TIMEBOARD",
              "CUSTOM_SCREENBOARD",
              "INTEGRATION_SCREENBOARD",
              "INTEGRATION_TIMEBOARD",
              "HOST_TIMEBOARD"
            ]
          }
        },
        "required": [
          "type",
          "id"
        ],
        "type": "object"
      },
      "DashboardListItems": {
        "description": "Dashboards within a list.",
        "properties": {
          "dashboards": {
            "description": "List of dashboards in the dashboard list.",
            "example": [],
            "items": {
              "description": "A dashboard within a list.",
              "properties": {
                "author": {
                  "description": "Creator of the object.",
                  "properties": {
                    "email": {
                      "description": "Email of the creator.",
                      "type": "string"
                    },
                    "handle": {
                      "description": "Handle of the creator.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the creator.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "created": {
                  "description": "Date of creation of the dashboard.",
                  "format": "date-time",
                  "readOnly": true,
                  "type": "string"
                },
                "icon": {
                  "description": "URL to the icon of the dashboard.",
                  "readOnly": true,
                  "type": "string"
                },
                "id": {
                  "description": "ID of the dashboard.",
                  "example": "q5j-nti-fv6",
                  "type": "string"
                },
                "is_favorite": {
                  "description": "Whether or not the dashboard is in the favorites.",
                  "readOnly": true,
                  "type": "boolean"
                },
                "is_read_only": {
                  "description": "Whether or not the dashboard is read only.",
                  "readOnly": true,
                  "type": "boolean"
                },
                "is_shared": {
                  "description": "Whether the dashboard is publicly shared or not.",
                  "readOnly": true,
                  "type": "boolean"
                },
                "modified": {
                  "description": "Date of last edition of the dashboard.",
                  "format": "date-time",
                  "readOnly": true,
                  "type": "string"
                },
                "popularity": {
                  "description": "Popularity of the dashboard.",
                  "format": "int32",
                  "maximum": 5,
                  "readOnly": true,
                  "type": "integer"
                },
                "title": {
                  "description": "Title of the dashboard.",
                  "readOnly": true,
                  "type": "string"
                },
                "type": {
                  "description": "The type of the dashboard.",
                  "enum": [
                    "custom_timeboard",
                    "custom_screenboard",
                    "integration_screenboard",
                    "integration_timeboard",
                    "host_timeboard"
                  ],
                  "type": "string",
                  "x-enum-varnames": [
                    "CUSTOM_TIMEBOARD",
                    "CUSTOM_SCREENBOARD",
                    "INTEGRATION_SCREENBOARD",
                    "INTEGRATION_TIMEBOARD",
                    "HOST_TIMEBOARD"
                  ]
                },
                "url": {
                  "description": "URL path to the dashboard.",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "required": [
                "type",
                "id"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "total": {
            "description": "Number of dashboards in the dashboard list.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          }
        },
        "required": [
          "dashboards"
        ],
        "type": "object"
      },
      "DashboardListUpdateItemsRequest": {
        "description": "Request containing the list of dashboards to update to.",
        "properties": {
          "dashboards": {
            "description": "List of dashboards to update the dashboard list to.",
            "items": {
              "description": "A dashboard within a list.",
              "properties": {
                "id": {
                  "description": "ID of the dashboard.",
                  "example": "q5j-nti-fv6",
                  "type": "string"
                },
                "type": {
                  "description": "The type of the dashboard.",
                  "enum": [
                    "custom_timeboard",
                    "custom_screenboard",
                    "integration_screenboard",
                    "integration_timeboard",
                    "host_timeboard"
                  ],
                  "type": "string",
                  "x-enum-varnames": [
                    "CUSTOM_TIMEBOARD",
                    "CUSTOM_SCREENBOARD",
                    "INTEGRATION_SCREENBOARD",
                    "INTEGRATION_TIMEBOARD",
                    "HOST_TIMEBOARD"
                  ]
                }
              },
              "required": [
                "type",
                "id"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DashboardListUpdateItemsResponse": {
        "description": "Response containing a list of updated dashboards.",
        "properties": {
          "dashboards": {
            "description": "List of dashboards in the dashboard list.",
            "items": {
              "description": "A dashboard within a list.",
              "properties": {
                "id": {
                  "description": "ID of the dashboard.",
                  "example": "q5j-nti-fv6",
                  "readOnly": true,
                  "type": "string"
                },
                "type": {
                  "description": "The type of the dashboard.",
                  "enum": [
                    "custom_timeboard",
                    "custom_screenboard",
                    "integration_screenboard",
                    "integration_timeboard",
                    "host_timeboard"
                  ],
                  "type": "string",
                  "x-enum-varnames": [
                    "CUSTOM_TIMEBOARD",
                    "CUSTOM_SCREENBOARD",
                    "INTEGRATION_SCREENBOARD",
                    "INTEGRATION_TIMEBOARD",
                    "HOST_TIMEBOARD"
                  ]
                }
              },
              "required": [
                "type",
                "id"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DashboardType": {
        "description": "The type of the dashboard.",
        "enum": [
          "custom_timeboard",
          "custom_screenboard",
          "integration_screenboard",
          "integration_timeboard",
          "host_timeboard"
        ],
        "type": "string",
        "x-enum-varnames": [
          "CUSTOM_TIMEBOARD",
          "CUSTOM_SCREENBOARD",
          "INTEGRATION_SCREENBOARD",
          "INTEGRATION_TIMEBOARD",
          "HOST_TIMEBOARD"
        ]
      },
      "LogsArchive": {
        "description": "The logs archive.",
        "properties": {
          "data": {
            "description": "The definition of an archive.",
            "properties": {
              "attributes": {
                "description": "The attributes associated with the archive.",
                "properties": {
                  "destination": {
                    "description": "An archive's destination.",
                    "nullable": true,
                    "oneOf": [
                      {
                        "description": "The Azure archive destination.",
                        "properties": {
                          "container": {
                            "description": "The container where the archive will be stored.",
                            "example": "container-name",
                            "type": "string"
                          },
                          "integration": {
                            "description": "The Azure archive's integration destination.",
                            "properties": {
                              "client_id": {
                                "description": "A client ID.",
                                "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                                "type": "string"
                              },
                              "tenant_id": {
                                "description": "A tenant ID.",
                                "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                                "type": "string"
                              }
                            },
                            "required": [
                              "tenant_id",
                              "client_id"
                            ],
                            "type": "object"
                          },
                          "path": {
                            "description": "The archive path.",
                            "type": "string"
                          },
                          "region": {
                            "description": "The region where the archive will be stored.",
                            "type": "string"
                          },
                          "storage_account": {
                            "description": "The associated storage account.",
                            "example": "account-name",
                            "type": "string"
                          },
                          "type": {
                            "default": "azure",
                            "description": "Type of the Azure archive destination.",
                            "enum": [
                              "azure"
                            ],
                            "example": "azure",
                            "type": "string",
                            "x-enum-varnames": [
                              "AZURE"
                            ]
                          }
                        },
                        "required": [
                          "storage_account",
                          "container",
                          "integration",
                          "type"
                        ],
                        "type": "object"
                      },
                      {
                        "description": "The GCS archive destination.",
                        "properties": {
                          "bucket": {
                            "description": "The bucket where the archive will be stored.",
                            "example": "bucket-name",
                            "type": "string"
                          },
                          "integration": {
                            "description": "The GCS archive's integration destination.",
                            "properties": {
                              "client_email": {
                                "description": "A client email.",
                                "example": "youremail@example.com",
                                "type": "string"
                              },
                              "project_id": {
                                "description": "A project ID.",
                                "example": "project-id",
                                "type": "string"
                              }
                            },
                            "required": [
                              "project_id",
                              "client_email"
                            ],
                            "type": "object"
                          },
                          "path": {
                            "description": "The archive path.",
                            "type": "string"
                          },
                          "type": {
                            "default": "gcs",
                            "description": "Type of the GCS archive destination.",
                            "enum": [
                              "gcs"
                            ],
                            "example": "gcs",
                            "type": "string",
                            "x-enum-varnames": [
                              "GCS"
                            ]
                          }
                        },
                        "required": [
                          "bucket",
                          "integration",
                          "type"
                        ],
                        "type": "object"
                      },
                      {
                        "description": "The S3 archive destination.",
                        "properties": {
                          "bucket": {
                            "description": "The bucket where the archive will be stored.",
                            "example": "bucket-name",
                            "type": "string"
                          },
                          "integration": {
                            "description": "The S3 Archive's integration destination.",
                            "properties": {
                              "account_id": {
                                "description": "The account ID for the integration.",
                                "example": "123456789012",
                                "type": "string"
                              },
                              "role_name": {
                                "description": "The path of the integration.",
                                "example": "role-name",
                                "type": "string"
                              }
                            },
                            "required": [
                              "role_name",
                              "account_id"
                            ],
                            "type": "object"
                          },
                          "path": {
                            "description": "The archive path.",
                            "type": "string"
                          },
                          "type": {
                            "default": "s3",
                            "description": "Type of the S3 archive destination.",
                            "enum": [
                              "s3"
                            ],
                            "example": "s3",
                            "type": "string",
                            "x-enum-varnames": [
                              "S3"
                            ]
                          }
                        },
                        "required": [
                          "bucket",
                          "integration",
                          "type"
                        ],
                        "type": "object"
                      }
                    ],
                    "required": [
                      "type",
                      "integration"
                    ],
                    "type": "object"
                  },
                  "name": {
                    "description": "The archive name.",
                    "example": "Nginx Archive",
                    "type": "string"
                  },
                  "query": {
                    "description": "The archive query/filter. Logs matching this query are included in the archive.",
                    "example": "source:nginx",
                    "type": "string"
                  },
                  "state": {
                    "description": "The state of the archive.",
                    "enum": [
                      "UNKNOWN",
                      "WORKING",
                      "FAILING",
                      "WORKING_AUTH_LEGACY"
                    ],
                    "example": "WORKING",
                    "type": "string",
                    "x-enum-varnames": [
                      "UNKNOWN",
                      "WORKING",
                      "FAILING",
                      "WORKING_AUTH_LEGACY"
                    ]
                  }
                },
                "required": [
                  "name",
                  "query",
                  "destination"
                ],
                "type": "object"
              },
              "id": {
                "description": "The archive ID.",
                "example": "a2zcMylnM4OCHpYusxIi3g",
                "readOnly": true,
                "type": "string"
              },
              "type": {
                "default": "archives",
                "description": "The type of the resource. The value should always be archives.",
                "example": "archives",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "LogsArchiveAttributes": {
        "description": "The attributes associated with the archive.",
        "properties": {
          "destination": {
            "description": "An archive's destination.",
            "nullable": true,
            "oneOf": [
              {
                "description": "The Azure archive destination.",
                "properties": {
                  "container": {
                    "description": "The container where the archive will be stored.",
                    "example": "container-name",
                    "type": "string"
                  },
                  "integration": {
                    "description": "The Azure archive's integration destination.",
                    "properties": {
                      "client_id": {
                        "description": "A client ID.",
                        "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                        "type": "string"
                      },
                      "tenant_id": {
                        "description": "A tenant ID.",
                        "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                        "type": "string"
                      }
                    },
                    "required": [
                      "tenant_id",
                      "client_id"
                    ],
                    "type": "object"
                  },
                  "path": {
                    "description": "The archive path.",
                    "type": "string"
                  },
                  "region": {
                    "description": "The region where the archive will be stored.",
                    "type": "string"
                  },
                  "storage_account": {
                    "description": "The associated storage account.",
                    "example": "account-name",
                    "type": "string"
                  },
                  "type": {
                    "default": "azure",
                    "description": "Type of the Azure archive destination.",
                    "enum": [
                      "azure"
                    ],
                    "example": "azure",
                    "type": "string",
                    "x-enum-varnames": [
                      "AZURE"
                    ]
                  }
                },
                "required": [
                  "storage_account",
                  "container",
                  "integration",
                  "type"
                ],
                "type": "object"
              },
              {
                "description": "The GCS archive destination.",
                "properties": {
                  "bucket": {
                    "description": "The bucket where the archive will be stored.",
                    "example": "bucket-name",
                    "type": "string"
                  },
                  "integration": {
                    "description": "The GCS archive's integration destination.",
                    "properties": {
                      "client_email": {
                        "description": "A client email.",
                        "example": "youremail@example.com",
                        "type": "string"
                      },
                      "project_id": {
                        "description": "A project ID.",
                        "example": "project-id",
                        "type": "string"
                      }
                    },
                    "required": [
                      "project_id",
                      "client_email"
                    ],
                    "type": "object"
                  },
                  "path": {
                    "description": "The archive path.",
                    "type": "string"
                  },
                  "type": {
                    "default": "gcs",
                    "description": "Type of the GCS archive destination.",
                    "enum": [
                      "gcs"
                    ],
                    "example": "gcs",
                    "type": "string",
                    "x-enum-varnames": [
                      "GCS"
                    ]
                  }
                },
                "required": [
                  "bucket",
                  "integration",
                  "type"
                ],
                "type": "object"
              },
              {
                "description": "The S3 archive destination.",
                "properties": {
                  "bucket": {
                    "description": "The bucket where the archive will be stored.",
                    "example": "bucket-name",
                    "type": "string"
                  },
                  "integration": {
                    "description": "The S3 Archive's integration destination.",
                    "properties": {
                      "account_id": {
                        "description": "The account ID for the integration.",
                        "example": "123456789012",
                        "type": "string"
                      },
                      "role_name": {
                        "description": "The path of the integration.",
                        "example": "role-name",
                        "type": "string"
                      }
                    },
                    "required": [
                      "role_name",
                      "account_id"
                    ],
                    "type": "object"
                  },
                  "path": {
                    "description": "The archive path.",
                    "type": "string"
                  },
                  "type": {
                    "default": "s3",
                    "description": "Type of the S3 archive destination.",
                    "enum": [
                      "s3"
                    ],
                    "example": "s3",
                    "type": "string",
                    "x-enum-varnames": [
                      "S3"
                    ]
                  }
                },
                "required": [
                  "bucket",
                  "integration",
                  "type"
                ],
                "type": "object"
              }
            ],
            "required": [
              "type",
              "integration"
            ],
            "type": "object"
          },
          "name": {
            "description": "The archive name.",
            "example": "Nginx Archive",
            "type": "string"
          },
          "query": {
            "description": "The archive query/filter. Logs matching this query are included in the archive.",
            "example": "source:nginx",
            "type": "string"
          },
          "state": {
            "description": "The state of the archive.",
            "enum": [
              "UNKNOWN",
              "WORKING",
              "FAILING",
              "WORKING_AUTH_LEGACY"
            ],
            "example": "WORKING",
            "type": "string",
            "x-enum-varnames": [
              "UNKNOWN",
              "WORKING",
              "FAILING",
              "WORKING_AUTH_LEGACY"
            ]
          }
        },
        "required": [
          "name",
          "query",
          "destination"
        ],
        "type": "object"
      },
      "LogsArchiveCreateRequest": {
        "description": "The logs archive.",
        "properties": {
          "data": {
            "description": "The definition of an archive.",
            "properties": {
              "attributes": {
                "description": "The attributes associated with the archive.",
                "properties": {
                  "destination": {
                    "description": "An archive's destination.",
                    "oneOf": [
                      {
                        "description": "The Azure archive destination.",
                        "properties": {
                          "container": {
                            "description": "The container where the archive will be stored.",
                            "example": "container-name",
                            "type": "string"
                          },
                          "integration": {
                            "description": "The Azure archive's integration destination.",
                            "properties": {
                              "client_id": {
                                "description": "A client ID.",
                                "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                                "type": "string"
                              },
                              "tenant_id": {
                                "description": "A tenant ID.",
                                "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                                "type": "string"
                              }
                            },
                            "required": [
                              "tenant_id",
                              "client_id"
                            ],
                            "type": "object"
                          },
                          "path": {
                            "description": "The archive path.",
                            "type": "string"
                          },
                          "region": {
                            "description": "The region where the archive will be stored.",
                            "type": "string"
                          },
                          "storage_account": {
                            "description": "The associated storage account.",
                            "example": "account-name",
                            "type": "string"
                          },
                          "type": {
                            "default": "azure",
                            "description": "Type of the Azure archive destination.",
                            "enum": [
                              "azure"
                            ],
                            "example": "azure",
                            "type": "string",
                            "x-enum-varnames": [
                              "AZURE"
                            ]
                          }
                        },
                        "required": [
                          "storage_account",
                          "container",
                          "integration",
                          "type"
                        ],
                        "type": "object"
                      },
                      {
                        "description": "The GCS archive destination.",
                        "properties": {
                          "bucket": {
                            "description": "The bucket where the archive will be stored.",
                            "example": "bucket-name",
                            "type": "string"
                          },
                          "integration": {
                            "description": "The GCS archive's integration destination.",
                            "properties": {
                              "client_email": {
                                "description": "A client email.",
                                "example": "youremail@example.com",
                                "type": "string"
                              },
                              "project_id": {
                                "description": "A project ID.",
                                "example": "project-id",
                                "type": "string"
                              }
                            },
                            "required": [
                              "project_id",
                              "client_email"
                            ],
                            "type": "object"
                          },
                          "path": {
                            "description": "The archive path.",
                            "type": "string"
                          },
                          "type": {
                            "default": "gcs",
                            "description": "Type of the GCS archive destination.",
                            "enum": [
                              "gcs"
                            ],
                            "example": "gcs",
                            "type": "string",
                            "x-enum-varnames": [
                              "GCS"
                            ]
                          }
                        },
                        "required": [
                          "bucket",
                          "integration",
                          "type"
                        ],
                        "type": "object"
                      },
                      {
                        "description": "The S3 archive destination.",
                        "properties": {
                          "bucket": {
                            "description": "The bucket where the archive will be stored.",
                            "example": "bucket-name",
                            "type": "string"
                          },
                          "integration": {
                            "description": "The S3 Archive's integration destination.",
                            "properties": {
                              "account_id": {
                                "description": "The account ID for the integration.",
                                "example": "123456789012",
                                "type": "string"
                              },
                              "role_name": {
                                "description": "The path of the integration.",
                                "example": "role-name",
                                "type": "string"
                              }
                            },
                            "required": [
                              "role_name",
                              "account_id"
                            ],
                            "type": "object"
                          },
                          "path": {
                            "description": "The archive path.",
                            "type": "string"
                          },
                          "type": {
                            "default": "s3",
                            "description": "Type of the S3 archive destination.",
                            "enum": [
                              "s3"
                            ],
                            "example": "s3",
                            "type": "string",
                            "x-enum-varnames": [
                              "S3"
                            ]
                          }
                        },
                        "required": [
                          "bucket",
                          "integration",
                          "type"
                        ],
                        "type": "object"
                      }
                    ],
                    "required": [
                      "type",
                      "integration"
                    ],
                    "type": "object"
                  },
                  "name": {
                    "description": "The archive name.",
                    "example": "Nginx Archive",
                    "type": "string"
                  },
                  "query": {
                    "description": "The archive query/filter. Logs matching this query are included in the archive.",
                    "example": "source:nginx",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "query",
                  "destination"
                ],
                "type": "object"
              },
              "type": {
                "default": "archives",
                "description": "The type of the resource. The value should always be archives.",
                "example": "archives",
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "LogsArchiveCreateRequestAttributes": {
        "description": "The attributes associated with the archive.",
        "properties": {
          "destination": {
            "description": "An archive's destination.",
            "oneOf": [
              {
                "description": "The Azure archive destination.",
                "properties": {
                  "container": {
                    "description": "The container where the archive will be stored.",
                    "example": "container-name",
                    "type": "string"
                  },
                  "integration": {
                    "description": "The Azure archive's integration destination.",
                    "properties": {
                      "client_id": {
                        "description": "A client ID.",
                        "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                        "type": "string"
                      },
                      "tenant_id": {
                        "description": "A tenant ID.",
                        "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                        "type": "string"
                      }
                    },
                    "required": [
                      "tenant_id",
                      "client_id"
                    ],
                    "type": "object"
                  },
                  "path": {
                    "description": "The archive path.",
                    "type": "string"
                  },
                  "region": {
                    "description": "The region where the archive will be stored.",
                    "type": "string"
                  },
                  "storage_account": {
                    "description": "The associated storage account.",
                    "example": "account-name",
                    "type": "string"
                  },
                  "type": {
                    "default": "azure",
                    "description": "Type of the Azure archive destination.",
                    "enum": [
                      "azure"
                    ],
                    "example": "azure",
                    "type": "string",
                    "x-enum-varnames": [
                      "AZURE"
                    ]
                  }
                },
                "required": [
                  "storage_account",
                  "container",
                  "integration",
                  "type"
                ],
                "type": "object"
              },
              {
                "description": "The GCS archive destination.",
                "properties": {
                  "bucket": {
                    "description": "The bucket where the archive will be stored.",
                    "example": "bucket-name",
                    "type": "string"
                  },
                  "integration": {
                    "description": "The GCS archive's integration destination.",
                    "properties": {
                      "client_email": {
                        "description": "A client email.",
                        "example": "youremail@example.com",
                        "type": "string"
                      },
                      "project_id": {
                        "description": "A project ID.",
                        "example": "project-id",
                        "type": "string"
                      }
                    },
                    "required": [
                      "project_id",
                      "client_email"
                    ],
                    "type": "object"
                  },
                  "path": {
                    "description": "The archive path.",
                    "type": "string"
                  },
                  "type": {
                    "default": "gcs",
                    "description": "Type of the GCS archive destination.",
                    "enum": [
                      "gcs"
                    ],
                    "example": "gcs",
                    "type": "string",
                    "x-enum-varnames": [
                      "GCS"
                    ]
                  }
                },
                "required": [
                  "bucket",
                  "integration",
                  "type"
                ],
                "type": "object"
              },
              {
                "description": "The S3 archive destination.",
                "properties": {
                  "bucket": {
                    "description": "The bucket where the archive will be stored.",
                    "example": "bucket-name",
                    "type": "string"
                  },
                  "integration": {
                    "description": "The S3 Archive's integration destination.",
                    "properties": {
                      "account_id": {
                        "description": "The account ID for the integration.",
                        "example": "123456789012",
                        "type": "string"
                      },
                      "role_name": {
                        "description": "The path of the integration.",
                        "example": "role-name",
                        "type": "string"
                      }
                    },
                    "required": [
                      "role_name",
                      "account_id"
                    ],
                    "type": "object"
                  },
                  "path": {
                    "description": "The archive path.",
                    "type": "string"
                  },
                  "type": {
                    "default": "s3",
                    "description": "Type of the S3 archive destination.",
                    "enum": [
                      "s3"
                    ],
                    "example": "s3",
                    "type": "string",
                    "x-enum-varnames": [
                      "S3"
                    ]
                  }
                },
                "required": [
                  "bucket",
                  "integration",
                  "type"
                ],
                "type": "object"
              }
            ],
            "required": [
              "type",
              "integration"
            ],
            "type": "object"
          },
          "name": {
            "description": "The archive name.",
            "example": "Nginx Archive",
            "type": "string"
          },
          "query": {
            "description": "The archive query/filter. Logs matching this query are included in the archive.",
            "example": "source:nginx",
            "type": "string"
          }
        },
        "required": [
          "name",
          "query",
          "destination"
        ],
        "type": "object"
      },
      "LogsArchiveCreateRequestDefinition": {
        "description": "The definition of an archive.",
        "properties": {
          "attributes": {
            "description": "The attributes associated with the archive.",
            "properties": {
              "destination": {
                "description": "An archive's destination.",
                "oneOf": [
                  {
                    "description": "The Azure archive destination.",
                    "properties": {
                      "container": {
                        "description": "The container where the archive will be stored.",
                        "example": "container-name",
                        "type": "string"
                      },
                      "integration": {
                        "description": "The Azure archive's integration destination.",
                        "properties": {
                          "client_id": {
                            "description": "A client ID.",
                            "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                            "type": "string"
                          },
                          "tenant_id": {
                            "description": "A tenant ID.",
                            "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenant_id",
                          "client_id"
                        ],
                        "type": "object"
                      },
                      "path": {
                        "description": "The archive path.",
                        "type": "string"
                      },
                      "region": {
                        "description": "The region where the archive will be stored.",
                        "type": "string"
                      },
                      "storage_account": {
                        "description": "The associated storage account.",
                        "example": "account-name",
                        "type": "string"
                      },
                      "type": {
                        "default": "azure",
                        "description": "Type of the Azure archive destination.",
                        "enum": [
                          "azure"
                        ],
                        "example": "azure",
                        "type": "string",
                        "x-enum-varnames": [
                          "AZURE"
                        ]
                      }
                    },
                    "required": [
                      "storage_account",
                      "container",
                      "integration",
                      "type"
                    ],
                    "type": "object"
                  },
                  {
                    "description": "The GCS archive destination.",
                    "properties": {
                      "bucket": {
                        "description": "The bucket where the archive will be stored.",
                        "example": "bucket-name",
                        "type": "string"
                      },
                      "integration": {
                        "description": "The GCS archive's integration destination.",
                        "properties": {
                          "client_email": {
                            "description": "A client email.",
                            "example": "youremail@example.com",
                            "type": "string"
                          },
                          "project_id": {
                            "description": "A project ID.",
                            "example": "project-id",
                            "type": "string"
                          }
                        },
                        "required": [
                          "project_id",
                          "client_email"
                        ],
                        "type": "object"
                      },
                      "path": {
                        "description": "The archive path.",
                        "type": "string"
                      },
                      "type": {
                        "default": "gcs",
                        "description": "Type of the GCS archive destination.",
                        "enum": [
                          "gcs"
                        ],
                        "example": "gcs",
                        "type": "string",
                        "x-enum-varnames": [
                          "GCS"
                        ]
                      }
                    },
                    "required": [
                      "bucket",
                      "integration",
                      "type"
                    ],
                    "type": "object"
                  },
                  {
                    "description": "The S3 archive destination.",
                    "properties": {
                      "bucket": {
                        "description": "The bucket where the archive will be stored.",
                        "example": "bucket-name",
                        "type": "string"
                      },
                      "integration": {
                        "description": "The S3 Archive's integration destination.",
                        "properties": {
                          "account_id": {
                            "description": "The account ID for the integration.",
                            "example": "123456789012",
                            "type": "string"
                          },
                          "role_name": {
                            "description": "The path of the integration.",
                            "example": "role-name",
                            "type": "string"
                          }
                        },
                        "required": [
                          "role_name",
                          "account_id"
                        ],
                        "type": "object"
                      },
                      "path": {
                        "description": "The archive path.",
                        "type": "string"
                      },
                      "type": {
                        "default": "s3",
                        "description": "Type of the S3 archive destination.",
                        "enum": [
                          "s3"
                        ],
                        "example": "s3",
                        "type": "string",
                        "x-enum-varnames": [
                          "S3"
                        ]
                      }
                    },
                    "required": [
                      "bucket",
                      "integration",
                      "type"
                    ],
                    "type": "object"
                  }
                ],
                "required": [
                  "type",
                  "integration"
                ],
                "type": "object"
              },
              "name": {
                "description": "The archive name.",
                "example": "Nginx Archive",
                "type": "string"
              },
              "query": {
                "description": "The archive query/filter. Logs matching this query are included in the archive.",
                "example": "source:nginx",
                "type": "string"
              }
            },
            "required": [
              "name",
              "query",
              "destination"
            ],
            "type": "object"
          },
          "type": {
            "default": "archives",
            "description": "The type of the resource. The value should always be archives.",
            "example": "archives",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "LogsArchiveCreateRequestDestination": {
        "description": "An archive's destination.",
        "oneOf": [
          {
            "description": "The Azure archive destination.",
            "properties": {
              "container": {
                "description": "The container where the archive will be stored.",
                "example": "container-name",
                "type": "string"
              },
              "integration": {
                "description": "The Azure archive's integration destination.",
                "properties": {
                  "client_id": {
                    "description": "A client ID.",
                    "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                    "type": "string"
                  },
                  "tenant_id": {
                    "description": "A tenant ID.",
                    "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                    "type": "string"
                  }
                },
                "required": [
                  "tenant_id",
                  "client_id"
                ],
                "type": "object"
              },
              "path": {
                "description": "The archive path.",
                "type": "string"
              },
              "region": {
                "description": "The region where the archive will be stored.",
                "type": "string"
              },
              "storage_account": {
                "description": "The associated storage account.",
                "example": "account-name",
                "type": "string"
              },
              "type": {
                "default": "azure",
                "description": "Type of the Azure archive destination.",
                "enum": [
                  "azure"
                ],
                "example": "azure",
                "type": "string",
                "x-enum-varnames": [
                  "AZURE"
                ]
              }
            },
            "required": [
              "storage_account",
              "container",
              "integration",
              "type"
            ],
            "type": "object"
          },
          {
            "description": "The GCS archive destination.",
            "properties": {
              "bucket": {
                "description": "The bucket where the archive will be stored.",
                "example": "bucket-name",
                "type": "string"
              },
              "integration": {
                "description": "The GCS archive's integration destination.",
                "properties": {
                  "client_email": {
                    "description": "A client email.",
                    "example": "youremail@example.com",
                    "type": "string"
                  },
                  "project_id": {
                    "description": "A project ID.",
                    "example": "project-id",
                    "type": "string"
                  }
                },
                "required": [
                  "project_id",
                  "client_email"
                ],
                "type": "object"
              },
              "path": {
                "description": "The archive path.",
                "type": "string"
              },
              "type": {
                "default": "gcs",
                "description": "Type of the GCS archive destination.",
                "enum": [
                  "gcs"
                ],
                "example": "gcs",
                "type": "string",
                "x-enum-varnames": [
                  "GCS"
                ]
              }
            },
            "required": [
              "bucket",
              "integration",
              "type"
            ],
            "type": "object"
          },
          {
            "description": "The S3 archive destination.",
            "properties": {
              "bucket": {
                "description": "The bucket where the archive will be stored.",
                "example": "bucket-name",
                "type": "string"
              },
              "integration": {
                "description": "The S3 Archive's integration destination.",
                "properties": {
                  "account_id": {
                    "description": "The account ID for the integration.",
                    "example": "123456789012",
                    "type": "string"
                  },
                  "role_name": {
                    "description": "The path of the integration.",
                    "example": "role-name",
                    "type": "string"
                  }
                },
                "required": [
                  "role_name",
                  "account_id"
                ],
                "type": "object"
              },
              "path": {
                "description": "The archive path.",
                "type": "string"
              },
              "type": {
                "default": "s3",
                "description": "Type of the S3 archive destination.",
                "enum": [
                  "s3"
                ],
                "example": "s3",
                "type": "string",
                "x-enum-varnames": [
                  "S3"
                ]
              }
            },
            "required": [
              "bucket",
              "integration",
              "type"
            ],
            "type": "object"
          }
        ],
        "required": [
          "type",
          "integration"
        ],
        "type": "object"
      },
      "LogsArchiveDefinition": {
        "description": "The definition of an archive.",
        "properties": {
          "attributes": {
            "description": "The attributes associated with the archive.",
            "properties": {
              "destination": {
                "description": "An archive's destination.",
                "nullable": true,
                "oneOf": [
                  {
                    "description": "The Azure archive destination.",
                    "properties": {
                      "container": {
                        "description": "The container where the archive will be stored.",
                        "example": "container-name",
                        "type": "string"
                      },
                      "integration": {
                        "description": "The Azure archive's integration destination.",
                        "properties": {
                          "client_id": {
                            "description": "A client ID.",
                            "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                            "type": "string"
                          },
                          "tenant_id": {
                            "description": "A tenant ID.",
                            "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenant_id",
                          "client_id"
                        ],
                        "type": "object"
                      },
                      "path": {
                        "description": "The archive path.",
                        "type": "string"
                      },
                      "region": {
                        "description": "The region where the archive will be stored.",
                        "type": "string"
                      },
                      "storage_account": {
                        "description": "The associated storage account.",
                        "example": "account-name",
                        "type": "string"
                      },
                      "type": {
                        "default": "azure",
                        "description": "Type of the Azure archive destination.",
                        "enum": [
                          "azure"
                        ],
                        "example": "azure",
                        "type": "string",
                        "x-enum-varnames": [
                          "AZURE"
                        ]
                      }
                    },
                    "required": [
                      "storage_account",
                      "container",
                      "integration",
                      "type"
                    ],
                    "type": "object"
                  },
                  {
                    "description": "The GCS archive destination.",
                    "properties": {
                      "bucket": {
                        "description": "The bucket where the archive will be stored.",
                        "example": "bucket-name",
                        "type": "string"
                      },
                      "integration": {
                        "description": "The GCS archive's integration destination.",
                        "properties": {
                          "client_email": {
                            "description": "A client email.",
                            "example": "youremail@example.com",
                            "type": "string"
                          },
                          "project_id": {
                            "description": "A project ID.",
                            "example": "project-id",
                            "type": "string"
                          }
                        },
                        "required": [
                          "project_id",
                          "client_email"
                        ],
                        "type": "object"
                      },
                      "path": {
                        "description": "The archive path.",
                        "type": "string"
                      },
                      "type": {
                        "default": "gcs",
                        "description": "Type of the GCS archive destination.",
                        "enum": [
                          "gcs"
                        ],
                        "example": "gcs",
                        "type": "string",
                        "x-enum-varnames": [
                          "GCS"
                        ]
                      }
                    },
                    "required": [
                      "bucket",
                      "integration",
                      "type"
                    ],
                    "type": "object"
                  },
                  {
                    "description": "The S3 archive destination.",
                    "properties": {
                      "bucket": {
                        "description": "The bucket where the archive will be stored.",
                        "example": "bucket-name",
                        "type": "string"
                      },
                      "integration": {
                        "description": "The S3 Archive's integration destination.",
                        "properties": {
                          "account_id": {
                            "description": "The account ID for the integration.",
                            "example": "123456789012",
                            "type": "string"
                          },
                          "role_name": {
                            "description": "The path of the integration.",
                            "example": "role-name",
                            "type": "string"
                          }
                        },
                        "required": [
                          "role_name",
                          "account_id"
                        ],
                        "type": "object"
                      },
                      "path": {
                        "description": "The archive path.",
                        "type": "string"
                      },
                      "type": {
                        "default": "s3",
                        "description": "Type of the S3 archive destination.",
                        "enum": [
                          "s3"
                        ],
                        "example": "s3",
                        "type": "string",
                        "x-enum-varnames": [
                          "S3"
                        ]
                      }
                    },
                    "required": [
                      "bucket",
                      "integration",
                      "type"
                    ],
                    "type": "object"
                  }
                ],
                "required": [
                  "type",
                  "integration"
                ],
                "type": "object"
              },
              "name": {
                "description": "The archive name.",
                "example": "Nginx Archive",
                "type": "string"
              },
              "query": {
                "description": "The archive query/filter. Logs matching this query are included in the archive.",
                "example": "source:nginx",
                "type": "string"
              },
              "state": {
                "description": "The state of the archive.",
                "enum": [
                  "UNKNOWN",
                  "WORKING",
                  "FAILING",
                  "WORKING_AUTH_LEGACY"
                ],
                "example": "WORKING",
                "type": "string",
                "x-enum-varnames": [
                  "UNKNOWN",
                  "WORKING",
                  "FAILING",
                  "WORKING_AUTH_LEGACY"
                ]
              }
            },
            "required": [
              "name",
              "query",
              "destination"
            ],
            "type": "object"
          },
          "id": {
            "description": "The archive ID.",
            "example": "a2zcMylnM4OCHpYusxIi3g",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "default": "archives",
            "description": "The type of the resource. The value should always be archives.",
            "example": "archives",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "LogsArchiveDestination": {
        "description": "An archive's destination.",
        "nullable": true,
        "oneOf": [
          {
            "description": "The Azure archive destination.",
            "properties": {
              "container": {
                "description": "The container where the archive will be stored.",
                "example": "container-name",
                "type": "string"
              },
              "integration": {
                "description": "The Azure archive's integration destination.",
                "properties": {
                  "client_id": {
                    "description": "A client ID.",
                    "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                    "type": "string"
                  },
                  "tenant_id": {
                    "description": "A tenant ID.",
                    "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                    "type": "string"
                  }
                },
                "required": [
                  "tenant_id",
                  "client_id"
                ],
                "type": "object"
              },
              "path": {
                "description": "The archive path.",
                "type": "string"
              },
              "region": {
                "description": "The region where the archive will be stored.",
                "type": "string"
              },
              "storage_account": {
                "description": "The associated storage account.",
                "example": "account-name",
                "type": "string"
              },
              "type": {
                "default": "azure",
                "description": "Type of the Azure archive destination.",
                "enum": [
                  "azure"
                ],
                "example": "azure",
                "type": "string",
                "x-enum-varnames": [
                  "AZURE"
                ]
              }
            },
            "required": [
              "storage_account",
              "container",
              "integration",
              "type"
            ],
            "type": "object"
          },
          {
            "description": "The GCS archive destination.",
            "properties": {
              "bucket": {
                "description": "The bucket where the archive will be stored.",
                "example": "bucket-name",
                "type": "string"
              },
              "integration": {
                "description": "The GCS archive's integration destination.",
                "properties": {
                  "client_email": {
                    "description": "A client email.",
                    "example": "youremail@example.com",
                    "type": "string"
                  },
                  "project_id": {
                    "description": "A project ID.",
                    "example": "project-id",
                    "type": "string"
                  }
                },
                "required": [
                  "project_id",
                  "client_email"
                ],
                "type": "object"
              },
              "path": {
                "description": "The archive path.",
                "type": "string"
              },
              "type": {
                "default": "gcs",
                "description": "Type of the GCS archive destination.",
                "enum": [
                  "gcs"
                ],
                "example": "gcs",
                "type": "string",
                "x-enum-varnames": [
                  "GCS"
                ]
              }
            },
            "required": [
              "bucket",
              "integration",
              "type"
            ],
            "type": "object"
          },
          {
            "description": "The S3 archive destination.",
            "properties": {
              "bucket": {
                "description": "The bucket where the archive will be stored.",
                "example": "bucket-name",
                "type": "string"
              },
              "integration": {
                "description": "The S3 Archive's integration destination.",
                "properties": {
                  "account_id": {
                    "description": "The account ID for the integration.",
                    "example": "123456789012",
                    "type": "string"
                  },
                  "role_name": {
                    "description": "The path of the integration.",
                    "example": "role-name",
                    "type": "string"
                  }
                },
                "required": [
                  "role_name",
                  "account_id"
                ],
                "type": "object"
              },
              "path": {
                "description": "The archive path.",
                "type": "string"
              },
              "type": {
                "default": "s3",
                "description": "Type of the S3 archive destination.",
                "enum": [
                  "s3"
                ],
                "example": "s3",
                "type": "string",
                "x-enum-varnames": [
                  "S3"
                ]
              }
            },
            "required": [
              "bucket",
              "integration",
              "type"
            ],
            "type": "object"
          }
        ],
        "required": [
          "type",
          "integration"
        ],
        "type": "object"
      },
      "LogsArchiveDestinationAzure": {
        "description": "The Azure archive destination.",
        "properties": {
          "container": {
            "description": "The container where the archive will be stored.",
            "example": "container-name",
            "type": "string"
          },
          "integration": {
            "description": "The Azure archive's integration destination.",
            "properties": {
              "client_id": {
                "description": "A client ID.",
                "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                "type": "string"
              },
              "tenant_id": {
                "description": "A tenant ID.",
                "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                "type": "string"
              }
            },
            "required": [
              "tenant_id",
              "client_id"
            ],
            "type": "object"
          },
          "path": {
            "description": "The archive path.",
            "type": "string"
          },
          "region": {
            "description": "The region where the archive will be stored.",
            "type": "string"
          },
          "storage_account": {
            "description": "The associated storage account.",
            "example": "account-name",
            "type": "string"
          },
          "type": {
            "default": "azure",
            "description": "Type of the Azure archive destination.",
            "enum": [
              "azure"
            ],
            "example": "azure",
            "type": "string",
            "x-enum-varnames": [
              "AZURE"
            ]
          }
        },
        "required": [
          "storage_account",
          "container",
          "integration",
          "type"
        ],
        "type": "object"
      },
      "LogsArchiveDestinationAzureType": {
        "default": "azure",
        "description": "Type of the Azure archive destination.",
        "enum": [
          "azure"
        ],
        "example": "azure",
        "type": "string",
        "x-enum-varnames": [
          "AZURE"
        ]
      },
      "LogsArchiveDestinationGCS": {
        "description": "The GCS archive destination.",
        "properties": {
          "bucket": {
            "description": "The bucket where the archive will be stored.",
            "example": "bucket-name",
            "type": "string"
          },
          "integration": {
            "description": "The GCS archive's integration destination.",
            "properties": {
              "client_email": {
                "description": "A client email.",
                "example": "youremail@example.com",
                "type": "string"
              },
              "project_id": {
                "description": "A project ID.",
                "example": "project-id",
                "type": "string"
              }
            },
            "required": [
              "project_id",
              "client_email"
            ],
            "type": "object"
          },
          "path": {
            "description": "The archive path.",
            "type": "string"
          },
          "type": {
            "default": "gcs",
            "description": "Type of the GCS archive destination.",
            "enum": [
              "gcs"
            ],
            "example": "gcs",
            "type": "string",
            "x-enum-varnames": [
              "GCS"
            ]
          }
        },
        "required": [
          "bucket",
          "integration",
          "type"
        ],
        "type": "object"
      },
      "LogsArchiveDestinationGCSType": {
        "default": "gcs",
        "description": "Type of the GCS archive destination.",
        "enum": [
          "gcs"
        ],
        "example": "gcs",
        "type": "string",
        "x-enum-varnames": [
          "GCS"
        ]
      },
      "LogsArchiveDestinationS3": {
        "description": "The S3 archive destination.",
        "properties": {
          "bucket": {
            "description": "The bucket where the archive will be stored.",
            "example": "bucket-name",
            "type": "string"
          },
          "integration": {
            "description": "The S3 Archive's integration destination.",
            "properties": {
              "account_id": {
                "description": "The account ID for the integration.",
                "example": "123456789012",
                "type": "string"
              },
              "role_name": {
                "description": "The path of the integration.",
                "example": "role-name",
                "type": "string"
              }
            },
            "required": [
              "role_name",
              "account_id"
            ],
            "type": "object"
          },
          "path": {
            "description": "The archive path.",
            "type": "string"
          },
          "type": {
            "default": "s3",
            "description": "Type of the S3 archive destination.",
            "enum": [
              "s3"
            ],
            "example": "s3",
            "type": "string",
            "x-enum-varnames": [
              "S3"
            ]
          }
        },
        "required": [
          "bucket",
          "integration",
          "type"
        ],
        "type": "object"
      },
      "LogsArchiveDestinationS3Type": {
        "default": "s3",
        "description": "Type of the S3 archive destination.",
        "enum": [
          "s3"
        ],
        "example": "s3",
        "type": "string",
        "x-enum-varnames": [
          "S3"
        ]
      },
      "LogsArchiveIntegrationAzure": {
        "description": "The Azure archive's integration destination.",
        "properties": {
          "client_id": {
            "description": "A client ID.",
            "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
            "type": "string"
          },
          "tenant_id": {
            "description": "A tenant ID.",
            "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
            "type": "string"
          }
        },
        "required": [
          "tenant_id",
          "client_id"
        ],
        "type": "object"
      },
      "LogsArchiveIntegrationGCS": {
        "description": "The GCS archive's integration destination.",
        "properties": {
          "client_email": {
            "description": "A client email.",
            "example": "youremail@example.com",
            "type": "string"
          },
          "project_id": {
            "description": "A project ID.",
            "example": "project-id",
            "type": "string"
          }
        },
        "required": [
          "project_id",
          "client_email"
        ],
        "type": "object"
      },
      "LogsArchiveIntegrationS3": {
        "description": "The S3 Archive's integration destination.",
        "properties": {
          "account_id": {
            "description": "The account ID for the integration.",
            "example": "123456789012",
            "type": "string"
          },
          "role_name": {
            "description": "The path of the integration.",
            "example": "role-name",
            "type": "string"
          }
        },
        "required": [
          "role_name",
          "account_id"
        ],
        "type": "object"
      },
      "LogsArchiveState": {
        "description": "The state of the archive.",
        "enum": [
          "UNKNOWN",
          "WORKING",
          "FAILING",
          "WORKING_AUTH_LEGACY"
        ],
        "example": "WORKING",
        "type": "string",
        "x-enum-varnames": [
          "UNKNOWN",
          "WORKING",
          "FAILING",
          "WORKING_AUTH_LEGACY"
        ]
      },
      "LogsArchives": {
        "description": "The available archives.",
        "properties": {
          "data": {
            "description": "A list of archives.",
            "items": {
              "description": "The definition of an archive.",
              "properties": {
                "attributes": {
                  "description": "The attributes associated with the archive.",
                  "properties": {
                    "destination": {
                      "description": "An archive's destination.",
                      "nullable": true,
                      "oneOf": [
                        {
                          "description": "The Azure archive destination.",
                          "properties": {
                            "container": {
                              "description": "The container where the archive will be stored.",
                              "example": "container-name",
                              "type": "string"
                            },
                            "integration": {
                              "description": "The Azure archive's integration destination.",
                              "properties": {
                                "client_id": {
                                  "description": "A client ID.",
                                  "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                                  "type": "string"
                                },
                                "tenant_id": {
                                  "description": "A tenant ID.",
                                  "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "tenant_id",
                                "client_id"
                              ],
                              "type": "object"
                            },
                            "path": {
                              "description": "The archive path.",
                              "type": "string"
                            },
                            "region": {
                              "description": "The region where the archive will be stored.",
                              "type": "string"
                            },
                            "storage_account": {
                              "description": "The associated storage account.",
                              "example": "account-name",
                              "type": "string"
                            },
                            "type": {
                              "default": "azure",
                              "description": "Type of the Azure archive destination.",
                              "enum": [
                                "azure"
                              ],
                              "example": "azure",
                              "type": "string",
                              "x-enum-varnames": [
                                "AZURE"
                              ]
                            }
                          },
                          "required": [
                            "storage_account",
                            "container",
                            "integration",
                            "type"
                          ],
                          "type": "object"
                        },
                        {
                          "description": "The GCS archive destination.",
                          "properties": {
                            "bucket": {
                              "description": "The bucket where the archive will be stored.",
                              "example": "bucket-name",
                              "type": "string"
                            },
                            "integration": {
                              "description": "The GCS archive's integration destination.",
                              "properties": {
                                "client_email": {
                                  "description": "A client email.",
                                  "example": "youremail@example.com",
                                  "type": "string"
                                },
                                "project_id": {
                                  "description": "A project ID.",
                                  "example": "project-id",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "project_id",
                                "client_email"
                              ],
                              "type": "object"
                            },
                            "path": {
                              "description": "The archive path.",
                              "type": "string"
                            },
                            "type": {
                              "default": "gcs",
                              "description": "Type of the GCS archive destination.",
                              "enum": [
                                "gcs"
                              ],
                              "example": "gcs",
                              "type": "string",
                              "x-enum-varnames": [
                                "GCS"
                              ]
                            }
                          },
                          "required": [
                            "bucket",
                            "integration",
                            "type"
                          ],
                          "type": "object"
                        },
                        {
                          "description": "The S3 archive destination.",
                          "properties": {
                            "bucket": {
                              "description": "The bucket where the archive will be stored.",
                              "example": "bucket-name",
                              "type": "string"
                            },
                            "integration": {
                              "description": "The S3 Archive's integration destination.",
                              "properties": {
                                "account_id": {
                                  "description": "The account ID for the integration.",
                                  "example": "123456789012",
                                  "type": "string"
                                },
                                "role_name": {
                                  "description": "The path of the integration.",
                                  "example": "role-name",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "role_name",
                                "account_id"
                              ],
                              "type": "object"
                            },
                            "path": {
                              "description": "The archive path.",
                              "type": "string"
                            },
                            "type": {
                              "default": "s3",
                              "description": "Type of the S3 archive destination.",
                              "enum": [
                                "s3"
                              ],
                              "example": "s3",
                              "type": "string",
                              "x-enum-varnames": [
                                "S3"
                              ]
                            }
                          },
                          "required": [
                            "bucket",
                            "integration",
                            "type"
                          ],
                          "type": "object"
                        }
                      ],
                      "required": [
                        "type",
                        "integration"
                      ],
                      "type": "object"
                    },
                    "name": {
                      "description": "The archive name.",
                      "example": "Nginx Archive",
                      "type": "string"
                    },
                    "query": {
                      "description": "The archive query/filter. Logs matching this query are included in the archive.",
                      "example": "source:nginx",
                      "type": "string"
                    },
                    "state": {
                      "description": "The state of the archive.",
                      "enum": [
                        "UNKNOWN",
                        "WORKING",
                        "FAILING",
                        "WORKING_AUTH_LEGACY"
                      ],
                      "example": "WORKING",
                      "type": "string",
                      "x-enum-varnames": [
                        "UNKNOWN",
                        "WORKING",
                        "FAILING",
                        "WORKING_AUTH_LEGACY"
                      ]
                    }
                  },
                  "required": [
                    "name",
                    "query",
                    "destination"
                  ],
                  "type": "object"
                },
                "id": {
                  "description": "The archive ID.",
                  "example": "a2zcMylnM4OCHpYusxIi3g",
                  "readOnly": true,
                  "type": "string"
                },
                "type": {
                  "default": "archives",
                  "description": "The type of the resource. The value should always be archives.",
                  "example": "archives",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LogsRestrictionQueriesType": {
        "default": "logs_restriction_queries",
        "description": "Restriction query resource type.",
        "enum": [
          "logs_restriction_queries"
        ],
        "example": "logs_restriction_queries",
        "type": "string",
        "x-enum-varnames": [
          "LOGS_RESTRICTION_QUERIES"
        ]
      },
      "Organization": {
        "description": "Organization object.",
        "properties": {
          "attributes": {
            "description": "Attributes of the organization.",
            "properties": {
              "created_at": {
                "description": "Creation time of the organization.",
                "format": "date-time",
                "type": "string"
              },
              "description": {
                "description": "Description of the organization.",
                "type": "string"
              },
              "disabled": {
                "description": "Whether or not the organization is disabled.",
                "type": "boolean"
              },
              "modified_at": {
                "description": "Time of last organization modification.",
                "format": "date-time",
                "type": "string"
              },
              "name": {
                "description": "Name of the organization.",
                "type": "string"
              },
              "public_id": {
                "description": "Public ID of the organization.",
                "type": "string"
              },
              "sharing": {
                "description": "Sharing type of the organization.",
                "type": "string"
              },
              "url": {
                "description": "URL of the site that this organization exists at.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "ID of the organization.",
            "type": "string"
          },
          "type": {
            "default": "orgs",
            "description": "Organizations resource type.",
            "enum": [
              "orgs"
            ],
            "example": "orgs",
            "type": "string",
            "x-enum-varnames": [
              "ORGS"
            ]
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "OrganizationAttributes": {
        "description": "Attributes of the organization.",
        "properties": {
          "created_at": {
            "description": "Creation time of the organization.",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the organization.",
            "type": "string"
          },
          "disabled": {
            "description": "Whether or not the organization is disabled.",
            "type": "boolean"
          },
          "modified_at": {
            "description": "Time of last organization modification.",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the organization.",
            "type": "string"
          },
          "public_id": {
            "description": "Public ID of the organization.",
            "type": "string"
          },
          "sharing": {
            "description": "Sharing type of the organization.",
            "type": "string"
          },
          "url": {
            "description": "URL of the site that this organization exists at.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrganizationsType": {
        "default": "orgs",
        "description": "Organizations resource type.",
        "enum": [
          "orgs"
        ],
        "example": "orgs",
        "type": "string",
        "x-enum-varnames": [
          "ORGS"
        ]
      },
      "Pagination": {
        "description": "Pagination object.",
        "properties": {
          "total_count": {
            "description": "Total count.",
            "format": "int64",
            "type": "integer"
          },
          "total_filtered_count": {
            "description": "Total count of elements matched by the filter.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Permission": {
        "description": "Permission object.",
        "properties": {
          "attributes": {
            "description": "Attributes of a permission.",
            "properties": {
              "created": {
                "description": "Creation time of the permission.",
                "format": "date-time",
                "type": "string"
              },
              "description": {
                "description": "Description of the permission.",
                "type": "string"
              },
              "display_name": {
                "description": "Displayed name for the permission.",
                "type": "string"
              },
              "display_type": {
                "description": "Display type.",
                "type": "string"
              },
              "group_name": {
                "description": "Name of the permission group.",
                "type": "string"
              },
              "name": {
                "description": "Name of the permission.",
                "type": "string"
              },
              "restricted": {
                "description": "Whether or not the permission is restricted.",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "ID of the permission.",
            "type": "string"
          },
          "type": {
            "default": "permissions",
            "description": "Permissions resource type.",
            "enum": [
              "permissions"
            ],
            "example": "permissions",
            "type": "string",
            "x-enum-varnames": [
              "PERMISSIONS"
            ]
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "PermissionAttributes": {
        "description": "Attributes of a permission.",
        "properties": {
          "created": {
            "description": "Creation time of the permission.",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the permission.",
            "type": "string"
          },
          "display_name": {
            "description": "Displayed name for the permission.",
            "type": "string"
          },
          "display_type": {
            "description": "Display type.",
            "type": "string"
          },
          "group_name": {
            "description": "Name of the permission group.",
            "type": "string"
          },
          "name": {
            "description": "Name of the permission.",
            "type": "string"
          },
          "restricted": {
            "description": "Whether or not the permission is restricted.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "PermissionsResponse": {
        "description": "Payload with API-returned permissions.",
        "properties": {
          "data": {
            "description": "Array of permissions.",
            "items": {
              "description": "Permission object.",
              "properties": {
                "attributes": {
                  "description": "Attributes of a permission.",
                  "properties": {
                    "created": {
                      "description": "Creation time of the permission.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "Description of the permission.",
                      "type": "string"
                    },
                    "display_name": {
                      "description": "Displayed name for the permission.",
                      "type": "string"
                    },
                    "display_type": {
                      "description": "Display type.",
                      "type": "string"
                    },
                    "group_name": {
                      "description": "Name of the permission group.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the permission.",
                      "type": "string"
                    },
                    "restricted": {
                      "description": "Whether or not the permission is restricted.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "description": "ID of the permission.",
                  "type": "string"
                },
                "type": {
                  "default": "permissions",
                  "description": "Permissions resource type.",
                  "enum": [
                    "permissions"
                  ],
                  "example": "permissions",
                  "type": "string",
                  "x-enum-varnames": [
                    "PERMISSIONS"
                  ]
                }
              },
              "required": [
                "type"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PermissionsType": {
        "default": "permissions",
        "description": "Permissions resource type.",
        "enum": [
          "permissions"
        ],
        "example": "permissions",
        "type": "string",
        "x-enum-varnames": [
          "PERMISSIONS"
        ]
      },
      "QuerySortOrder": {
        "default": "desc",
        "description": "Direction of sort.",
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string",
        "x-enum-varnames": [
          "ASC",
          "DESC"
        ]
      },
      "RelationshipToOrganization": {
        "description": "Relationship to an organization.",
        "properties": {
          "data": {
            "description": "Relationship to organization object.",
            "properties": {
              "id": {
                "description": "ID of the organization.",
                "type": "string"
              },
              "type": {
                "default": "orgs",
                "description": "Organizations resource type.",
                "enum": [
                  "orgs"
                ],
                "example": "orgs",
                "type": "string",
                "x-enum-varnames": [
                  "ORGS"
                ]
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "RelationshipToOrganizationData": {
        "description": "Relationship to organization object.",
        "properties": {
          "id": {
            "description": "ID of the organization.",
            "type": "string"
          },
          "type": {
            "default": "orgs",
            "description": "Organizations resource type.",
            "enum": [
              "orgs"
            ],
            "example": "orgs",
            "type": "string",
            "x-enum-varnames": [
              "ORGS"
            ]
          }
        },
        "type": "object"
      },
      "RelationshipToOrganizations": {
        "description": "Relationship to organizations.",
        "properties": {
          "data": {
            "description": "Relationships to organization objects.",
            "items": {
              "description": "Relationship to organization object.",
              "properties": {
                "id": {
                  "description": "ID of the organization.",
                  "type": "string"
                },
                "type": {
                  "default": "orgs",
                  "description": "Organizations resource type.",
                  "enum": [
                    "orgs"
                  ],
                  "example": "orgs",
                  "type": "string",
                  "x-enum-varnames": [
                    "ORGS"
                  ]
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RelationshipToPermission": {
        "description": "Relationship to a permissions object.",
        "properties": {
          "data": {
            "description": "Relationship to permission object.",
            "properties": {
              "id": {
                "description": "ID of the permission.",
                "type": "string"
              },
              "type": {
                "default": "permissions",
                "description": "Permissions resource type.",
                "enum": [
                  "permissions"
                ],
                "example": "permissions",
                "type": "string",
                "x-enum-varnames": [
                  "PERMISSIONS"
                ]
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "RelationshipToPermissionData": {
        "description": "Relationship to permission object.",
        "properties": {
          "id": {
            "description": "ID of the permission.",
            "type": "string"
          },
          "type": {
            "default": "permissions",
            "description": "Permissions resource type.",
            "enum": [
              "permissions"
            ],
            "example": "permissions",
            "type": "string",
            "x-enum-varnames": [
              "PERMISSIONS"
            ]
          }
        },
        "type": "object"
      },
      "RelationshipToPermissions": {
        "description": "Relationship to multiple permissions objects.",
        "properties": {
          "data": {
            "description": "Relationships to permission objects.",
            "items": {
              "description": "Relationship to permission object.",
              "properties": {
                "id": {
                  "description": "ID of the permission.",
                  "type": "string"
                },
                "type": {
                  "default": "permissions",
                  "description": "Permissions resource type.",
                  "enum": [
                    "permissions"
                  ],
                  "example": "permissions",
                  "type": "string",
                  "x-enum-varnames": [
                    "PERMISSIONS"
                  ]
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RelationshipToRole": {
        "description": "Relationship to role.",
        "properties": {
          "data": {
            "description": "Relationship to role object.",
            "properties": {
              "id": {
                "description": "ID of the role.",
                "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                "type": "string"
              },
              "type": {
                "default": "roles",
                "description": "Roles type.",
                "enum": [
                  "roles"
                ],
                "example": "roles",
                "type": "string",
                "x-enum-varnames": [
                  "ROLES"
                ]
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "RelationshipToRoleData": {
        "description": "Relationship to role object.",
        "properties": {
          "id": {
            "description": "ID of the role.",
            "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
            "type": "string"
          },
          "type": {
            "default": "roles",
            "description": "Roles type.",
            "enum": [
              "roles"
            ],
            "example": "roles",
            "type": "string",
            "x-enum-varnames": [
              "ROLES"
            ]
          }
        },
        "type": "object"
      },
      "RelationshipToRoles": {
        "description": "Relationship to roles.",
        "properties": {
          "data": {
            "description": "An array containing type and ID of a role.",
            "items": {
              "description": "Relationship to role object.",
              "properties": {
                "id": {
                  "description": "ID of the role.",
                  "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                  "type": "string"
                },
                "type": {
                  "default": "roles",
                  "description": "Roles type.",
                  "enum": [
                    "roles"
                  ],
                  "example": "roles",
                  "type": "string",
                  "x-enum-varnames": [
                    "ROLES"
                  ]
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RelationshipToUser": {
        "description": "Relationship to user.",
        "properties": {
          "data": {
            "description": "Relationship to user object.",
            "properties": {
              "id": {
                "description": "ID of the user.",
                "type": "string"
              },
              "type": {
                "default": "users",
                "description": "Users type.",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "RelationshipToUserData": {
        "description": "Relationship to user object.",
        "properties": {
          "id": {
            "description": "ID of the user.",
            "type": "string"
          },
          "type": {
            "default": "users",
            "description": "Users type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RelationshipToUsers": {
        "description": "Relationship to users.",
        "properties": {
          "data": {
            "description": "Relationships to user objects.",
            "items": {
              "description": "Relationship to user object.",
              "properties": {
                "id": {
                  "description": "ID of the user.",
                  "type": "string"
                },
                "type": {
                  "default": "users",
                  "description": "Users type.",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResponseMetaAttributes": {
        "description": "Object describing meta attributes of response.",
        "properties": {
          "page": {
            "description": "Pagination object.",
            "properties": {
              "total_count": {
                "description": "Total count.",
                "format": "int64",
                "type": "integer"
              },
              "total_filtered_count": {
                "description": "Total count of elements matched by the filter.",
                "format": "int64",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "RestrictionQueryAttributes": {
        "description": "Attributes of the restriction query.",
        "properties": {
          "created_at": {
            "description": "Creation time of the restriction query.",
            "example": "2020-03-17T21:06:44Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "modified_at": {
            "description": "Time of last restriction query modification.",
            "example": "2020-03-17T21:15:15Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "restriction_query": {
            "description": "The query that defines the restriction. Only the content matching the query can be returned.",
            "example": "env:sandbox",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RestrictionQueryCreateAttributes": {
        "description": "Attributes of the created restriction query.",
        "properties": {
          "restriction_query": {
            "description": "The restriction query.",
            "example": "env:sandbox",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RestrictionQueryCreateData": {
        "description": "Data related to the creation of a restriction query.",
        "properties": {
          "attributes": {
            "description": "Attributes of the created restriction query.",
            "properties": {
              "restriction_query": {
                "description": "The restriction query.",
                "example": "env:sandbox",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": {
            "default": "logs_restriction_queries",
            "description": "Restriction query resource type.",
            "enum": [
              "logs_restriction_queries"
            ],
            "example": "logs_restriction_queries",
            "type": "string",
            "x-enum-varnames": [
              "LOGS_RESTRICTION_QUERIES"
            ]
          }
        },
        "type": "object"
      },
      "RestrictionQueryCreatePayload": {
        "description": "Create a restriction query.",
        "properties": {
          "data": {
            "description": "Data related to the creation of a restriction query.",
            "properties": {
              "attributes": {
                "description": "Attributes of the created restriction query.",
                "properties": {
                  "restriction_query": {
                    "description": "The restriction query.",
                    "example": "env:sandbox",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "logs_restriction_queries",
                "description": "Restriction query resource type.",
                "enum": [
                  "logs_restriction_queries"
                ],
                "example": "logs_restriction_queries",
                "type": "string",
                "x-enum-varnames": [
                  "LOGS_RESTRICTION_QUERIES"
                ]
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "RestrictionQueryListResponse": {
        "description": "Response containing information about multiple restriction queries.",
        "properties": {
          "data": {
            "description": "Array of returned restriction queries.",
            "items": {
              "description": "Restriction query object returned by the API.",
              "properties": {
                "attributes": {
                  "description": "Attributes of the restriction query.",
                  "properties": {
                    "created_at": {
                      "description": "Creation time of the restriction query.",
                      "example": "2020-03-17T21:06:44Z",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "Time of last restriction query modification.",
                      "example": "2020-03-17T21:15:15Z",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "restriction_query": {
                      "description": "The query that defines the restriction. Only the content matching the query can be returned.",
                      "example": "env:sandbox",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "description": "ID of the restriction query.",
                  "example": "79a0e60a-644a-11ea-ad29-43329f7f58b5",
                  "type": "string"
                },
                "type": {
                  "default": "logs_restriction_queries",
                  "description": "Restriction queries type.",
                  "example": "logs_restriction_queries",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RestrictionQueryRelationships": {
        "description": "Relationships of the restriction query object.",
        "properties": {
          "roles": {
            "description": "Relationship to roles.",
            "properties": {
              "data": {
                "description": "An array containing type and ID of a role.",
                "items": {
                  "description": "Relationship to role object.",
                  "properties": {
                    "id": {
                      "description": "ID of the role.",
                      "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                      "type": "string"
                    },
                    "type": {
                      "default": "roles",
                      "description": "Roles type.",
                      "enum": [
                        "roles"
                      ],
                      "example": "roles",
                      "type": "string",
                      "x-enum-varnames": [
                        "ROLES"
                      ]
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "RestrictionQueryResponseIncludedItem": {
        "description": "An object related to a restriction query.",
        "discriminator": {
          "mapping": {
            "roles": "#/components/schemas/RestrictionQueryRole"
          },
          "propertyName": "type"
        },
        "oneOf": [
          {
            "description": "Partial role object.",
            "properties": {
              "attributes": {
                "description": "Attributes of the role for a restriction query.",
                "properties": {
                  "name": {
                    "description": "The role name.",
                    "example": "Datadog Admin Role",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "ID of the role.",
                "example": "<ROLE_ID>",
                "type": "string"
              },
              "type": {
                "default": "roles",
                "description": "Role resource type.",
                "example": "roles",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "RestrictionQueryRole": {
        "description": "Partial role object.",
        "properties": {
          "attributes": {
            "description": "Attributes of the role for a restriction query.",
            "properties": {
              "name": {
                "description": "The role name.",
                "example": "Datadog Admin Role",
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "ID of the role.",
            "example": "<ROLE_ID>",
            "type": "string"
          },
          "type": {
            "default": "roles",
            "description": "Role resource type.",
            "example": "roles",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RestrictionQueryRoleAttribute": {
        "description": "Attributes of the role for a restriction query.",
        "properties": {
          "name": {
            "description": "The role name.",
            "example": "Datadog Admin Role",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RestrictionQueryRolesResponse": {
        "description": "Response containing information about roles attached to a restriction query.",
        "properties": {
          "data": {
            "description": "Array of roles.",
            "items": {
              "description": "Partial role object.",
              "properties": {
                "attributes": {
                  "description": "Attributes of the role for a restriction query.",
                  "properties": {
                    "name": {
                      "description": "The role name.",
                      "example": "Datadog Admin Role",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "description": "ID of the role.",
                  "example": "<ROLE_ID>",
                  "type": "string"
                },
                "type": {
                  "default": "roles",
                  "description": "Role resource type.",
                  "example": "roles",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RestrictionQueryUpdateAttributes": {
        "description": "Attributes of the edited restriction query.",
        "properties": {
          "restriction_query": {
            "description": "The restriction query.",
            "example": "env:sandbox",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RestrictionQueryUpdateData": {
        "description": "Data related to the update of a restriction query.",
        "properties": {
          "attributes": {
            "description": "Attributes of the edited restriction query.",
            "properties": {
              "restriction_query": {
                "description": "The restriction query.",
                "example": "env:sandbox",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": {
            "default": "logs_restriction_queries",
            "description": "Restriction query resource type.",
            "enum": [
              "logs_restriction_queries"
            ],
            "example": "logs_restriction_queries",
            "type": "string",
            "x-enum-varnames": [
              "LOGS_RESTRICTION_QUERIES"
            ]
          }
        },
        "type": "object"
      },
      "RestrictionQueryUpdatePayload": {
        "description": "Update a restriction query.",
        "properties": {
          "data": {
            "description": "Data related to the update of a restriction query.",
            "properties": {
              "attributes": {
                "description": "Attributes of the edited restriction query.",
                "properties": {
                  "restriction_query": {
                    "description": "The restriction query.",
                    "example": "env:sandbox",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "logs_restriction_queries",
                "description": "Restriction query resource type.",
                "enum": [
                  "logs_restriction_queries"
                ],
                "example": "logs_restriction_queries",
                "type": "string",
                "x-enum-varnames": [
                  "LOGS_RESTRICTION_QUERIES"
                ]
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "RestrictionQueryWithRelationships": {
        "description": "Restriction query object returned by the API.",
        "properties": {
          "attributes": {
            "description": "Attributes of the restriction query.",
            "properties": {
              "created_at": {
                "description": "Creation time of the restriction query.",
                "example": "2020-03-17T21:06:44Z",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "modified_at": {
                "description": "Time of last restriction query modification.",
                "example": "2020-03-17T21:15:15Z",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "restriction_query": {
                "description": "The query that defines the restriction. Only the content matching the query can be returned.",
                "example": "env:sandbox",
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "ID of the restriction query.",
            "example": "79a0e60a-644a-11ea-ad29-43329f7f58b5",
            "type": "string"
          },
          "relationships": {
            "description": "Relationships of the restriction query object.",
            "properties": {
              "roles": {
                "description": "Relationship to roles.",
                "properties": {
                  "data": {
                    "description": "An array containing type and ID of a role.",
                    "items": {
                      "description": "Relationship to role object.",
                      "properties": {
                        "id": {
                          "description": "ID of the role.",
                          "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                          "type": "string"
                        },
                        "type": {
                          "default": "roles",
                          "description": "Roles type.",
                          "enum": [
                            "roles"
                          ],
                          "example": "roles",
                          "type": "string",
                          "x-enum-varnames": [
                            "ROLES"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": {
            "default": "logs_restriction_queries",
            "description": "Restriction query resource type.",
            "enum": [
              "logs_restriction_queries"
            ],
            "example": "logs_restriction_queries",
            "type": "string",
            "x-enum-varnames": [
              "LOGS_RESTRICTION_QUERIES"
            ]
          }
        },
        "type": "object"
      },
      "RestrictionQueryWithRelationshipsResponse": {
        "description": "Response containing information about a single restriction query.",
        "properties": {
          "data": {
            "description": "Restriction query object returned by the API.",
            "properties": {
              "attributes": {
                "description": "Attributes of the restriction query.",
                "properties": {
                  "created_at": {
                    "description": "Creation time of the restriction query.",
                    "example": "2020-03-17T21:06:44Z",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "Time of last restriction query modification.",
                    "example": "2020-03-17T21:15:15Z",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "restriction_query": {
                    "description": "The query that defines the restriction. Only the content matching the query can be returned.",
                    "example": "env:sandbox",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "ID of the restriction query.",
                "example": "79a0e60a-644a-11ea-ad29-43329f7f58b5",
                "type": "string"
              },
              "relationships": {
                "description": "Relationships of the restriction query object.",
                "properties": {
                  "roles": {
                    "description": "Relationship to roles.",
                    "properties": {
                      "data": {
                        "description": "An array containing type and ID of a role.",
                        "items": {
                          "description": "Relationship to role object.",
                          "properties": {
                            "id": {
                              "description": "ID of the role.",
                              "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                              "type": "string"
                            },
                            "type": {
                              "default": "roles",
                              "description": "Roles type.",
                              "enum": [
                                "roles"
                              ],
                              "example": "roles",
                              "type": "string",
                              "x-enum-varnames": [
                                "ROLES"
                              ]
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "logs_restriction_queries",
                "description": "Restriction query resource type.",
                "enum": [
                  "logs_restriction_queries"
                ],
                "example": "logs_restriction_queries",
                "type": "string",
                "x-enum-varnames": [
                  "LOGS_RESTRICTION_QUERIES"
                ]
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Array of objects related to the restriction query.",
            "items": {
              "description": "An object related to a restriction query.",
              "discriminator": {
                "mapping": {
                  "roles": "#/components/schemas/RestrictionQueryRole"
                },
                "propertyName": "type"
              },
              "oneOf": [
                {
                  "description": "Partial role object.",
                  "properties": {
                    "attributes": {
                      "description": "Attributes of the role for a restriction query.",
                      "properties": {
                        "name": {
                          "description": "The role name.",
                          "example": "Datadog Admin Role",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "ID of the role.",
                      "example": "<ROLE_ID>",
                      "type": "string"
                    },
                    "type": {
                      "default": "roles",
                      "description": "Role resource type.",
                      "example": "roles",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RestrictionQueryWithoutRelationships": {
        "description": "Restriction query object returned by the API.",
        "properties": {
          "attributes": {
            "description": "Attributes of the restriction query.",
            "properties": {
              "created_at": {
                "description": "Creation time of the restriction query.",
                "example": "2020-03-17T21:06:44Z",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "modified_at": {
                "description": "Time of last restriction query modification.",
                "example": "2020-03-17T21:15:15Z",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "restriction_query": {
                "description": "The query that defines the restriction. Only the content matching the query can be returned.",
                "example": "env:sandbox",
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "ID of the restriction query.",
            "example": "79a0e60a-644a-11ea-ad29-43329f7f58b5",
            "type": "string"
          },
          "type": {
            "default": "logs_restriction_queries",
            "description": "Restriction queries type.",
            "example": "logs_restriction_queries",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RestrictionQueryWithoutRelationshipsResponse": {
        "description": "Response containing information about a single restriction query.",
        "properties": {
          "data": {
            "description": "Restriction query object returned by the API.",
            "properties": {
              "attributes": {
                "description": "Attributes of the restriction query.",
                "properties": {
                  "created_at": {
                    "description": "Creation time of the restriction query.",
                    "example": "2020-03-17T21:06:44Z",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "Time of last restriction query modification.",
                    "example": "2020-03-17T21:15:15Z",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "restriction_query": {
                    "description": "The query that defines the restriction. Only the content matching the query can be returned.",
                    "example": "env:sandbox",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "ID of the restriction query.",
                "example": "79a0e60a-644a-11ea-ad29-43329f7f58b5",
                "type": "string"
              },
              "type": {
                "default": "logs_restriction_queries",
                "description": "Restriction queries type.",
                "example": "logs_restriction_queries",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Role": {
        "description": "Role object returned by the API.",
        "properties": {
          "attributes": {
            "description": "Attributes of the role.",
            "properties": {
              "created_at": {
                "description": "Creation time of the role.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "modified_at": {
                "description": "Time of last role modification.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "name": {
                "description": "Name of the role.",
                "type": "string"
              },
              "user_count": {
                "description": "Number of users with that role.",
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "ID of the role.",
            "type": "string"
          },
          "relationships": {
            "description": "Relationships of the role object returned by the API.",
            "properties": {
              "permissions": {
                "description": "Relationship to multiple permissions objects.",
                "properties": {
                  "data": {
                    "description": "Relationships to permission objects.",
                    "items": {
                      "description": "Relationship to permission object.",
                      "properties": {
                        "id": {
                          "description": "ID of the permission.",
                          "type": "string"
                        },
                        "type": {
                          "default": "permissions",
                          "description": "Permissions resource type.",
                          "enum": [
                            "permissions"
                          ],
                          "example": "permissions",
                          "type": "string",
                          "x-enum-varnames": [
                            "PERMISSIONS"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": {
            "default": "roles",
            "description": "Roles type.",
            "enum": [
              "roles"
            ],
            "example": "roles",
            "type": "string",
            "x-enum-varnames": [
              "ROLES"
            ]
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "RoleAttributes": {
        "description": "Attributes of the role.",
        "properties": {
          "created_at": {
            "description": "Creation time of the role.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "modified_at": {
            "description": "Time of last role modification.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the role.",
            "type": "string"
          },
          "user_count": {
            "description": "Number of users with that role.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RoleCreateAttributes": {
        "description": "Attributes of the created role.",
        "properties": {
          "created_at": {
            "description": "Creation time of the role.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "modified_at": {
            "description": "Time of last role modification.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the role.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RoleCreateData": {
        "description": "Data related to the creation of a role.",
        "properties": {
          "attributes": {
            "description": "Attributes of the created role.",
            "properties": {
              "created_at": {
                "description": "Creation time of the role.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "modified_at": {
                "description": "Time of last role modification.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "name": {
                "description": "Name of the role.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "relationships": {
            "description": "Relationships of the role object.",
            "properties": {
              "permissions": {
                "description": "Relationship to multiple permissions objects.",
                "properties": {
                  "data": {
                    "description": "Relationships to permission objects.",
                    "items": {
                      "description": "Relationship to permission object.",
                      "properties": {
                        "id": {
                          "description": "ID of the permission.",
                          "type": "string"
                        },
                        "type": {
                          "default": "permissions",
                          "description": "Permissions resource type.",
                          "enum": [
                            "permissions"
                          ],
                          "example": "permissions",
                          "type": "string",
                          "x-enum-varnames": [
                            "PERMISSIONS"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "users": {
                "description": "Relationship to users.",
                "properties": {
                  "data": {
                    "description": "Relationships to user objects.",
                    "items": {
                      "description": "Relationship to user object.",
                      "properties": {
                        "id": {
                          "description": "ID of the user.",
                          "type": "string"
                        },
                        "type": {
                          "default": "users",
                          "description": "Users type.",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": {
            "default": "roles",
            "description": "Roles type.",
            "enum": [
              "roles"
            ],
            "example": "roles",
            "type": "string",
            "x-enum-varnames": [
              "ROLES"
            ]
          }
        },
        "type": "object"
      },
      "RoleCreateRequest": {
        "description": "Create a role.",
        "properties": {
          "data": {
            "description": "Data related to the creation of a role.",
            "properties": {
              "attributes": {
                "description": "Attributes of the created role.",
                "properties": {
                  "created_at": {
                    "description": "Creation time of the role.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "Time of last role modification.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the role.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "description": "Relationships of the role object.",
                "properties": {
                  "permissions": {
                    "description": "Relationship to multiple permissions objects.",
                    "properties": {
                      "data": {
                        "description": "Relationships to permission objects.",
                        "items": {
                          "description": "Relationship to permission object.",
                          "properties": {
                            "id": {
                              "description": "ID of the permission.",
                              "type": "string"
                            },
                            "type": {
                              "default": "permissions",
                              "description": "Permissions resource type.",
                              "enum": [
                                "permissions"
                              ],
                              "example": "permissions",
                              "type": "string",
                              "x-enum-varnames": [
                                "PERMISSIONS"
                              ]
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "users": {
                    "description": "Relationship to users.",
                    "properties": {
                      "data": {
                        "description": "Relationships to user objects.",
                        "items": {
                          "description": "Relationship to user object.",
                          "properties": {
                            "id": {
                              "description": "ID of the user.",
                              "type": "string"
                            },
                            "type": {
                              "default": "users",
                              "description": "Users type.",
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "roles",
                "description": "Roles type.",
                "enum": [
                  "roles"
                ],
                "example": "roles",
                "type": "string",
                "x-enum-varnames": [
                  "ROLES"
                ]
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "RoleCreateResponse": {
        "description": "Response containing information about a created role.",
        "properties": {
          "data": {
            "description": "Role object returned by the API.",
            "properties": {
              "attributes": {
                "description": "Attributes of the created role.",
                "properties": {
                  "created_at": {
                    "description": "Creation time of the role.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "Time of last role modification.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the role.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "ID of the role.",
                "type": "string"
              },
              "relationships": {
                "description": "Relationships of the role object returned by the API.",
                "properties": {
                  "permissions": {
                    "description": "Relationship to multiple permissions objects.",
                    "properties": {
                      "data": {
                        "description": "Relationships to permission objects.",
                        "items": {
                          "description": "Relationship to permission object.",
                          "properties": {
                            "id": {
                              "description": "ID of the permission.",
                              "type": "string"
                            },
                            "type": {
                              "default": "permissions",
                              "description": "Permissions resource type.",
                              "enum": [
                                "permissions"
                              ],
                              "example": "permissions",
                              "type": "string",
                              "x-enum-varnames": [
                                "PERMISSIONS"
                              ]
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "roles",
                "description": "Roles type.",
                "enum": [
                  "roles"
                ],
                "example": "roles",
                "type": "string",
                "x-enum-varnames": [
                  "ROLES"
                ]
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "RoleRelationships": {
        "description": "Relationships of the role object.",
        "properties": {
          "permissions": {
            "description": "Relationship to multiple permissions objects.",
            "properties": {
              "data": {
                "description": "Relationships to permission objects.",
                "items": {
                  "description": "Relationship to permission object.",
                  "properties": {
                    "id": {
                      "description": "ID of the permission.",
                      "type": "string"
                    },
                    "type": {
                      "default": "permissions",
                      "description": "Permissions resource type.",
                      "enum": [
                        "permissions"
                      ],
                      "example": "permissions",
                      "type": "string",
                      "x-enum-varnames": [
                        "PERMISSIONS"
                      ]
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "users": {
            "description": "Relationship to users.",
            "properties": {
              "data": {
                "description": "Relationships to user objects.",
                "items": {
                  "description": "Relationship to user object.",
                  "properties": {
                    "id": {
                      "description": "ID of the user.",
                      "type": "string"
                    },
                    "type": {
                      "default": "users",
                      "description": "Users type.",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "RoleResponse": {
        "description": "Response containing information about a single role.",
        "properties": {
          "data": {
            "description": "Role object returned by the API.",
            "properties": {
              "attributes": {
                "description": "Attributes of the role.",
                "properties": {
                  "created_at": {
                    "description": "Creation time of the role.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "Time of last role modification.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the role.",
                    "type": "string"
                  },
                  "user_count": {
                    "description": "Number of users with that role.",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "ID of the role.",
                "type": "string"
              },
              "relationships": {
                "description": "Relationships of the role object returned by the API.",
                "properties": {
                  "permissions": {
                    "description": "Relationship to multiple permissions objects.",
                    "properties": {
                      "data": {
                        "description": "Relationships to permission objects.",
                        "items": {
                          "description": "Relationship to permission object.",
                          "properties": {
                            "id": {
                              "description": "ID of the permission.",
                              "type": "string"
                            },
                            "type": {
                              "default": "permissions",
                              "description": "Permissions resource type.",
                              "enum": [
                                "permissions"
                              ],
                              "example": "permissions",
                              "type": "string",
                              "x-enum-varnames": [
                                "PERMISSIONS"
                              ]
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "roles",
                "description": "Roles type.",
                "enum": [
                  "roles"
                ],
                "example": "roles",
                "type": "string",
                "x-enum-varnames": [
                  "ROLES"
                ]
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "RoleResponseRelationships": {
        "description": "Relationships of the role object returned by the API.",
        "properties": {
          "permissions": {
            "description": "Relationship to multiple permissions objects.",
            "properties": {
              "data": {
                "description": "Relationships to permission objects.",
                "items": {
                  "description": "Relationship to permission object.",
                  "properties": {
                    "id": {
                      "description": "ID of the permission.",
                      "type": "string"
                    },
                    "type": {
                      "default": "permissions",
                      "description": "Permissions resource type.",
                      "enum": [
                        "permissions"
                      ],
                      "example": "permissions",
                      "type": "string",
                      "x-enum-varnames": [
                        "PERMISSIONS"
                      ]
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "RoleUpdateAttributes": {
        "description": "Attributes of the role.",
        "properties": {
          "created_at": {
            "description": "Creation time of the role.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "modified_at": {
            "description": "Time of last role modification.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the role.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RoleUpdateData": {
        "description": "Data related to the update of a role.",
        "properties": {
          "attributes": {
            "description": "Attributes of the role.",
            "properties": {
              "created_at": {
                "description": "Creation time of the role.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "modified_at": {
                "description": "Time of last role modification.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "name": {
                "description": "Name of the role.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "ID of the role.",
            "type": "string"
          },
          "type": {
            "default": "roles",
            "description": "Roles type.",
            "enum": [
              "roles"
            ],
            "example": "roles",
            "type": "string",
            "x-enum-varnames": [
              "ROLES"
            ]
          }
        },
        "type": "object"
      },
      "RoleUpdateRequest": {
        "description": "Update a role.",
        "properties": {
          "data": {
            "description": "Data related to the update of a role.",
            "properties": {
              "attributes": {
                "description": "Attributes of the role.",
                "properties": {
                  "created_at": {
                    "description": "Creation time of the role.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "Time of last role modification.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the role.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "ID of the role.",
                "type": "string"
              },
              "type": {
                "default": "roles",
                "description": "Roles type.",
                "enum": [
                  "roles"
                ],
                "example": "roles",
                "type": "string",
                "x-enum-varnames": [
                  "ROLES"
                ]
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "RoleUpdateResponse": {
        "description": "Response containing information about an updated role.",
        "properties": {
          "data": {
            "description": "Role object returned by the API.",
            "properties": {
              "attributes": {
                "description": "Attributes of the role.",
                "properties": {
                  "created_at": {
                    "description": "Creation time of the role.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "Time of last role modification.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the role.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "ID of the role.",
                "type": "string"
              },
              "relationships": {
                "description": "Relationships of the role object returned by the API.",
                "properties": {
                  "permissions": {
                    "description": "Relationship to multiple permissions objects.",
                    "properties": {
                      "data": {
                        "description": "Relationships to permission objects.",
                        "items": {
                          "description": "Relationship to permission object.",
                          "properties": {
                            "id": {
                              "description": "ID of the permission.",
                              "type": "string"
                            },
                            "type": {
                              "default": "permissions",
                              "description": "Permissions resource type.",
                              "enum": [
                                "permissions"
                              ],
                              "example": "permissions",
                              "type": "string",
                              "x-enum-varnames": [
                                "PERMISSIONS"
                              ]
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "roles",
                "description": "Roles type.",
                "enum": [
                  "roles"
                ],
                "example": "roles",
                "type": "string",
                "x-enum-varnames": [
                  "ROLES"
                ]
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "RolesResponse": {
        "description": "Response containing information about multiple roles.",
        "properties": {
          "data": {
            "description": "Array of returned roles.",
            "items": {
              "description": "Role object returned by the API.",
              "properties": {
                "attributes": {
                  "description": "Attributes of the role.",
                  "properties": {
                    "created_at": {
                      "description": "Creation time of the role.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "Time of last role modification.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the role.",
                      "type": "string"
                    },
                    "user_count": {
                      "description": "Number of users with that role.",
                      "format": "int64",
                      "readOnly": true,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "description": "ID of the role.",
                  "type": "string"
                },
                "relationships": {
                  "description": "Relationships of the role object returned by the API.",
                  "properties": {
                    "permissions": {
                      "description": "Relationship to multiple permissions objects.",
                      "properties": {
                        "data": {
                          "description": "Relationships to permission objects.",
                          "items": {
                            "description": "Relationship to permission object.",
                            "properties": {
                              "id": {
                                "description": "ID of the permission.",
                                "type": "string"
                              },
                              "type": {
                                "default": "permissions",
                                "description": "Permissions resource type.",
                                "enum": [
                                  "permissions"
                                ],
                                "example": "permissions",
                                "type": "string",
                                "x-enum-varnames": [
                                  "PERMISSIONS"
                                ]
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "roles",
                  "description": "Roles type.",
                  "enum": [
                    "roles"
                  ],
                  "example": "roles",
                  "type": "string",
                  "x-enum-varnames": [
                    "ROLES"
                  ]
                }
              },
              "required": [
                "type"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "meta": {
            "description": "Object describing meta attributes of response.",
            "properties": {
              "page": {
                "description": "Pagination object.",
                "properties": {
                  "total_count": {
                    "description": "Total count.",
                    "format": "int64",
                    "type": "integer"
                  },
                  "total_filtered_count": {
                    "description": "Total count of elements matched by the filter.",
                    "format": "int64",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "RolesSort": {
        "default": "name",
        "description": "Sorting options for roles.",
        "enum": [
          "name",
          "-name",
          "modified_at",
          "-modified_at",
          "user_count",
          "-user_count"
        ],
        "type": "string",
        "x-enum-varnames": [
          "NAME_ASCENDING",
          "NAME_DESCENDING",
          "MODIFIED_AT_ASCENDING",
          "MODIFIED_AT_DESCENDING",
          "USER_COUNT_ASCENDING",
          "USER_COUNT_DESCENDING"
        ]
      },
      "RolesType": {
        "default": "roles",
        "description": "Roles type.",
        "enum": [
          "roles"
        ],
        "example": "roles",
        "type": "string",
        "x-enum-varnames": [
          "ROLES"
        ]
      },
      "SecurityMonitoringListRulesResponse": {
        "description": "List of rules",
        "properties": {
          "data": {
            "description": "TODO.",
            "items": {
              "description": "Detection rule",
              "properties": {
                "cases": {
                  "description": "Cases for generating signals.",
                  "items": {
                    "description": "Case when signal is generated.",
                    "properties": {
                      "condition": {
                        "description": "A rule case contains logical operations (>, >=, &&, ||) to determine if a signal should be generated\nbased on the event counts in the previously defined queries.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the case.",
                        "type": "string"
                      },
                      "notifications": {
                        "description": "Notification targets for each rule case",
                        "items": {
                          "description": "Notification",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "status": {
                        "description": "Severity of the Security Signal.",
                        "enum": [
                          "info",
                          "low",
                          "medium",
                          "high",
                          "critical"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                          "INFO",
                          "LOW",
                          "MEDIUM",
                          "HIGH",
                          "CRITICAL"
                        ]
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "createdAt": {
                  "description": "When the rule was created, timestamp in milliseconds.",
                  "format": "int64",
                  "type": "integer"
                },
                "creationAuthorId": {
                  "description": "User ID of the user who created the rule.",
                  "format": "int64",
                  "type": "integer"
                },
                "id": {
                  "description": "The ID of the rule.",
                  "type": "string"
                },
                "isDefault": {
                  "description": "Whether the rule is included by default.",
                  "type": "boolean"
                },
                "isDeleted": {
                  "description": "Whether the rule has been deleted.",
                  "type": "boolean"
                },
                "isEnabled": {
                  "description": "Whether the rule is enabled.",
                  "type": "boolean"
                },
                "message": {
                  "description": "Message for generated signals.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the rule.",
                  "type": "string"
                },
                "options": {
                  "description": "Options on rules.",
                  "properties": {
                    "evaluationWindow": {
                      "description": "A time window is specified to match when at least one of the cases matches true. This is a sliding window\nand evaluates in real time.",
                      "enum": [
                        0,
                        60,
                        300,
                        600,
                        900,
                        1800,
                        3600,
                        7200
                      ],
                      "format": "int32",
                      "type": "integer",
                      "x-enum-varnames": [
                        "ZERO_MINUTES",
                        "ONE_MINUTE",
                        "FIVE_MINUTES",
                        "TEN_MINUTES",
                        "FIFTEEN_MINUTES",
                        "THIRTY_MINUTES",
                        "ONE_HOUR",
                        "TWO_HOURS"
                      ]
                    },
                    "keepAlive": {
                      "description": "Once a signal is generated, the signal will remain “open” if a case is matched at least once within\nthis keep alive window.",
                      "enum": [
                        0,
                        60,
                        300,
                        600,
                        900,
                        1800,
                        3600,
                        7200
                      ],
                      "format": "int32",
                      "type": "integer",
                      "x-enum-varnames": [
                        "ZERO_MINUTES",
                        "ONE_MINUTE",
                        "FIVE_MINUTES",
                        "TEN_MINUTES",
                        "FIFTEEN_MINUTES",
                        "THIRTY_MINUTES",
                        "ONE_HOUR",
                        "TWO_HOURS"
                      ]
                    },
                    "maxSignalDuration": {
                      "description": "A signal will “close” regardless of the query being matched once the time exceeds the maximum duration.\nThis time is calculated from the first seen timestamp.",
                      "enum": [
                        0,
                        60,
                        300,
                        600,
                        900,
                        1800,
                        3600,
                        7200,
                        10800,
                        21600,
                        43200,
                        86400
                      ],
                      "format": "int32",
                      "type": "integer",
                      "x-enum-varnames": [
                        "ZERO_MINUTES",
                        "ONE_MINUTE",
                        "FIVE_MINUTES",
                        "TEN_MINUTES",
                        "FIFTEEN_MINUTES",
                        "THIRTY_MINUTES",
                        "ONE_HOUR",
                        "TWO_HOURS",
                        "THREE_HOURS",
                        "SIX_HOURS",
                        "TWELVE_HOURS",
                        "ONE_DAY"
                      ]
                    }
                  },
                  "type": "object"
                },
                "queries": {
                  "description": "Queries for selecting logs which are part of the rule.",
                  "items": {
                    "description": "Query for matching rule.",
                    "properties": {
                      "groupByFields": {
                        "description": "Fields to group by.",
                        "items": {
                          "description": "Field",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "name": {
                        "description": "Name of the query",
                        "type": "string"
                      },
                      "query": {
                        "description": "Query to run on logs",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "tags": {
                  "description": "Tags for generated signals.",
                  "items": {
                    "description": "Tag",
                    "type": "string"
                  },
                  "type": "array"
                },
                "version": {
                  "description": "The version of the rule.",
                  "format": "int64",
                  "type": "integer"
                }
              }
            },
            "type": "array"
          },
          "meta": {
            "description": "Object describing meta attributes of response.",
            "properties": {
              "page": {
                "description": "Pagination object.",
                "properties": {
                  "total_count": {
                    "description": "Total count.",
                    "format": "int64",
                    "type": "integer"
                  },
                  "total_filtered_count": {
                    "description": "Total count of elements matched by the filter.",
                    "format": "int64",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "SecurityMonitoringRuleCase": {
        "description": "Case when signal is generated.",
        "properties": {
          "condition": {
            "description": "A rule case contains logical operations (>, >=, &&, ||) to determine if a signal should be generated\nbased on the event counts in the previously defined queries.",
            "type": "string"
          },
          "name": {
            "description": "Name of the case.",
            "type": "string"
          },
          "notifications": {
            "description": "Notification targets for each rule case",
            "items": {
              "description": "Notification",
              "type": "string"
            },
            "type": "array"
          },
          "status": {
            "description": "Severity of the Security Signal.",
            "enum": [
              "info",
              "low",
              "medium",
              "high",
              "critical"
            ],
            "type": "string",
            "x-enum-varnames": [
              "INFO",
              "LOW",
              "MEDIUM",
              "HIGH",
              "CRITICAL"
            ]
          }
        },
        "type": "object"
      },
      "SecurityMonitoringRuleCreatePayload": {
        "description": "Create a new rule.",
        "properties": {
          "cases": {
            "description": "Cases for generating signals.",
            "example": [],
            "items": {
              "description": "Case when signal is generated.",
              "properties": {
                "condition": {
                  "description": "A rule case contains logical operations (>, >=, &&, ||) to determine if a signal should be generated\nbased on the event counts in the previously defined queries.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the case.",
                  "type": "string"
                },
                "notifications": {
                  "description": "Notification targets for each rule case",
                  "items": {
                    "description": "Notification",
                    "type": "string"
                  },
                  "type": "array"
                },
                "status": {
                  "description": "Severity of the Security Signal.",
                  "enum": [
                    "info",
                    "low",
                    "medium",
                    "high",
                    "critical"
                  ],
                  "type": "string",
                  "x-enum-varnames": [
                    "INFO",
                    "LOW",
                    "MEDIUM",
                    "HIGH",
                    "CRITICAL"
                  ]
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "enabled": {
            "description": "Whether the rule is enabled.",
            "example": true,
            "type": "boolean"
          },
          "message": {
            "description": "Message for generated signals.",
            "example": "",
            "type": "string"
          },
          "name": {
            "description": "The name of the rule",
            "example": "",
            "type": "string"
          },
          "options": {
            "description": "Options on rules.",
            "properties": {
              "evaluationWindow": {
                "description": "A time window is specified to match when at least one of the cases matches true. This is a sliding window\nand evaluates in real time.",
                "enum": [
                  0,
                  60,
                  300,
                  600,
                  900,
                  1800,
                  3600,
                  7200
                ],
                "format": "int32",
                "type": "integer",
                "x-enum-varnames": [
                  "ZERO_MINUTES",
                  "ONE_MINUTE",
                  "FIVE_MINUTES",
                  "TEN_MINUTES",
                  "FIFTEEN_MINUTES",
                  "THIRTY_MINUTES",
                  "ONE_HOUR",
                  "TWO_HOURS"
                ]
              },
              "keepAlive": {
                "description": "Once a signal is generated, the signal will remain “open” if a case is matched at least once within\nthis keep alive window.",
                "enum": [
                  0,
                  60,
                  300,
                  600,
                  900,
                  1800,
                  3600,
                  7200
                ],
                "format": "int32",
                "type": "integer",
                "x-enum-varnames": [
                  "ZERO_MINUTES",
                  "ONE_MINUTE",
                  "FIVE_MINUTES",
                  "TEN_MINUTES",
                  "FIFTEEN_MINUTES",
                  "THIRTY_MINUTES",
                  "ONE_HOUR",
                  "TWO_HOURS"
                ]
              },
              "maxSignalDuration": {
                "description": "A signal will “close” regardless of the query being matched once the time exceeds the maximum duration.\nThis time is calculated from the first seen timestamp.",
                "enum": [
                  0,
                  60,
                  300,
                  600,
                  900,
                  1800,
                  3600,
                  7200,
                  10800,
                  21600,
                  43200,
                  86400
                ],
                "format": "int32",
                "type": "integer",
                "x-enum-varnames": [
                  "ZERO_MINUTES",
                  "ONE_MINUTE",
                  "FIVE_MINUTES",
                  "TEN_MINUTES",
                  "FIFTEEN_MINUTES",
                  "THIRTY_MINUTES",
                  "ONE_HOUR",
                  "TWO_HOURS",
                  "THREE_HOURS",
                  "SIX_HOURS",
                  "TWELVE_HOURS",
                  "ONE_DAY"
                ]
              }
            },
            "type": "object"
          },
          "queries": {
            "description": "Queries for selecting logs which are part of the rule.",
            "example": [],
            "items": {
              "description": "Query for matching rule.",
              "properties": {
                "groupByFields": {
                  "description": "Fields to group by.",
                  "items": {
                    "description": "Field",
                    "type": "string"
                  },
                  "type": "array"
                },
                "name": {
                  "description": "Name of the query",
                  "type": "string"
                },
                "query": {
                  "description": "Query to run on logs",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "tags": {
            "description": "Tags for generated signals.",
            "example": [
              "env:prod",
              "team:security"
            ],
            "items": {
              "description": "Tag",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "enabled",
          "queries",
          "options",
          "cases",
          "message",
          "tags"
        ],
        "type": "object"
      },
      "SecurityMonitoringRuleEvaluationWindow": {
        "description": "A time window is specified to match when at least one of the cases matches true. This is a sliding window\nand evaluates in real time.",
        "enum": [
          0,
          60,
          300,
          600,
          900,
          1800,
          3600,
          7200
        ],
        "format": "int32",
        "type": "integer",
        "x-enum-varnames": [
          "ZERO_MINUTES",
          "ONE_MINUTE",
          "FIVE_MINUTES",
          "TEN_MINUTES",
          "FIFTEEN_MINUTES",
          "THIRTY_MINUTES",
          "ONE_HOUR",
          "TWO_HOURS"
        ]
      },
      "SecurityMonitoringRuleKeepAlive": {
        "description": "Once a signal is generated, the signal will remain “open” if a case is matched at least once within\nthis keep alive window.",
        "enum": [
          0,
          60,
          300,
          600,
          900,
          1800,
          3600,
          7200
        ],
        "format": "int32",
        "type": "integer",
        "x-enum-varnames": [
          "ZERO_MINUTES",
          "ONE_MINUTE",
          "FIVE_MINUTES",
          "TEN_MINUTES",
          "FIFTEEN_MINUTES",
          "THIRTY_MINUTES",
          "ONE_HOUR",
          "TWO_HOURS"
        ]
      },
      "SecurityMonitoringRuleMaxSignalDuration": {
        "description": "A signal will “close” regardless of the query being matched once the time exceeds the maximum duration.\nThis time is calculated from the first seen timestamp.",
        "enum": [
          0,
          60,
          300,
          600,
          900,
          1800,
          3600,
          7200,
          10800,
          21600,
          43200,
          86400
        ],
        "format": "int32",
        "type": "integer",
        "x-enum-varnames": [
          "ZERO_MINUTES",
          "ONE_MINUTE",
          "FIVE_MINUTES",
          "TEN_MINUTES",
          "FIFTEEN_MINUTES",
          "THIRTY_MINUTES",
          "ONE_HOUR",
          "TWO_HOURS",
          "THREE_HOURS",
          "SIX_HOURS",
          "TWELVE_HOURS",
          "ONE_DAY"
        ]
      },
      "SecurityMonitoringRuleOptions": {
        "description": "Options on rules.",
        "properties": {
          "evaluationWindow": {
            "description": "A time window is specified to match when at least one of the cases matches true. This is a sliding window\nand evaluates in real time.",
            "enum": [
              0,
              60,
              300,
              600,
              900,
              1800,
              3600,
              7200
            ],
            "format": "int32",
            "type": "integer",
            "x-enum-varnames": [
              "ZERO_MINUTES",
              "ONE_MINUTE",
              "FIVE_MINUTES",
              "TEN_MINUTES",
              "FIFTEEN_MINUTES",
              "THIRTY_MINUTES",
              "ONE_HOUR",
              "TWO_HOURS"
            ]
          },
          "keepAlive": {
            "description": "Once a signal is generated, the signal will remain “open” if a case is matched at least once within\nthis keep alive window.",
            "enum": [
              0,
              60,
              300,
              600,
              900,
              1800,
              3600,
              7200
            ],
            "format": "int32",
            "type": "integer",
            "x-enum-varnames": [
              "ZERO_MINUTES",
              "ONE_MINUTE",
              "FIVE_MINUTES",
              "TEN_MINUTES",
              "FIFTEEN_MINUTES",
              "THIRTY_MINUTES",
              "ONE_HOUR",
              "TWO_HOURS"
            ]
          },
          "maxSignalDuration": {
            "description": "A signal will “close” regardless of the query being matched once the time exceeds the maximum duration.\nThis time is calculated from the first seen timestamp.",
            "enum": [
              0,
              60,
              300,
              600,
              900,
              1800,
              3600,
              7200,
              10800,
              21600,
              43200,
              86400
            ],
            "format": "int32",
            "type": "integer",
            "x-enum-varnames": [
              "ZERO_MINUTES",
              "ONE_MINUTE",
              "FIVE_MINUTES",
              "TEN_MINUTES",
              "FIFTEEN_MINUTES",
              "THIRTY_MINUTES",
              "ONE_HOUR",
              "TWO_HOURS",
              "THREE_HOURS",
              "SIX_HOURS",
              "TWELVE_HOURS",
              "ONE_DAY"
            ]
          }
        },
        "type": "object"
      },
      "SecurityMonitoringRuleQuery": {
        "description": "Query for matching rule.",
        "properties": {
          "groupByFields": {
            "description": "Fields to group by.",
            "items": {
              "description": "Field",
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the query",
            "type": "string"
          },
          "query": {
            "description": "Query to run on logs",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SecurityMonitoringRuleResponse": {
        "description": "Detection rule",
        "properties": {
          "cases": {
            "description": "Cases for generating signals.",
            "items": {
              "description": "Case when signal is generated.",
              "properties": {
                "condition": {
                  "description": "A rule case contains logical operations (>, >=, &&, ||) to determine if a signal should be generated\nbased on the event counts in the previously defined queries.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the case.",
                  "type": "string"
                },
                "notifications": {
                  "description": "Notification targets for each rule case",
                  "items": {
                    "description": "Notification",
                    "type": "string"
                  },
                  "type": "array"
                },
                "status": {
                  "description": "Severity of the Security Signal.",
                  "enum": [
                    "info",
                    "low",
                    "medium",
                    "high",
                    "critical"
                  ],
                  "type": "string",
                  "x-enum-varnames": [
                    "INFO",
                    "LOW",
                    "MEDIUM",
                    "HIGH",
                    "CRITICAL"
                  ]
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "createdAt": {
            "description": "When the rule was created, timestamp in milliseconds.",
            "format": "int64",
            "type": "integer"
          },
          "creationAuthorId": {
            "description": "User ID of the user who created the rule.",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "The ID of the rule.",
            "type": "string"
          },
          "isDefault": {
            "description": "Whether the rule is included by default.",
            "type": "boolean"
          },
          "isDeleted": {
            "description": "Whether the rule has been deleted.",
            "type": "boolean"
          },
          "isEnabled": {
            "description": "Whether the rule is enabled.",
            "type": "boolean"
          },
          "message": {
            "description": "Message for generated signals.",
            "type": "string"
          },
          "name": {
            "description": "The name of the rule.",
            "type": "string"
          },
          "options": {
            "description": "Options on rules.",
            "properties": {
              "evaluationWindow": {
                "description": "A time window is specified to match when at least one of the cases matches true. This is a sliding window\nand evaluates in real time.",
                "enum": [
                  0,
                  60,
                  300,
                  600,
                  900,
                  1800,
                  3600,
                  7200
                ],
                "format": "int32",
                "type": "integer",
                "x-enum-varnames": [
                  "ZERO_MINUTES",
                  "ONE_MINUTE",
                  "FIVE_MINUTES",
                  "TEN_MINUTES",
                  "FIFTEEN_MINUTES",
                  "THIRTY_MINUTES",
                  "ONE_HOUR",
                  "TWO_HOURS"
                ]
              },
              "keepAlive": {
                "description": "Once a signal is generated, the signal will remain “open” if a case is matched at least once within\nthis keep alive window.",
                "enum": [
                  0,
                  60,
                  300,
                  600,
                  900,
                  1800,
                  3600,
                  7200
                ],
                "format": "int32",
                "type": "integer",
                "x-enum-varnames": [
                  "ZERO_MINUTES",
                  "ONE_MINUTE",
                  "FIVE_MINUTES",
                  "TEN_MINUTES",
                  "FIFTEEN_MINUTES",
                  "THIRTY_MINUTES",
                  "ONE_HOUR",
                  "TWO_HOURS"
                ]
              },
              "maxSignalDuration": {
                "description": "A signal will “close” regardless of the query being matched once the time exceeds the maximum duration.\nThis time is calculated from the first seen timestamp.",
                "enum": [
                  0,
                  60,
                  300,
                  600,
                  900,
                  1800,
                  3600,
                  7200,
                  10800,
                  21600,
                  43200,
                  86400
                ],
                "format": "int32",
                "type": "integer",
                "x-enum-varnames": [
                  "ZERO_MINUTES",
                  "ONE_MINUTE",
                  "FIVE_MINUTES",
                  "TEN_MINUTES",
                  "FIFTEEN_MINUTES",
                  "THIRTY_MINUTES",
                  "ONE_HOUR",
                  "TWO_HOURS",
                  "THREE_HOURS",
                  "SIX_HOURS",
                  "TWELVE_HOURS",
                  "ONE_DAY"
                ]
              }
            },
            "type": "object"
          },
          "queries": {
            "description": "Queries for selecting logs which are part of the rule.",
            "items": {
              "description": "Query for matching rule.",
              "properties": {
                "groupByFields": {
                  "description": "Fields to group by.",
                  "items": {
                    "description": "Field",
                    "type": "string"
                  },
                  "type": "array"
                },
                "name": {
                  "description": "Name of the query",
                  "type": "string"
                },
                "query": {
                  "description": "Query to run on logs",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "tags": {
            "description": "Tags for generated signals.",
            "items": {
              "description": "Tag",
              "type": "string"
            },
            "type": "array"
          },
          "version": {
            "description": "The version of the rule.",
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "SecurityMonitoringRuleSeverity": {
        "description": "Severity of the Security Signal.",
        "enum": [
          "info",
          "low",
          "medium",
          "high",
          "critical"
        ],
        "type": "string",
        "x-enum-varnames": [
          "INFO",
          "LOW",
          "MEDIUM",
          "HIGH",
          "CRITICAL"
        ]
      },
      "SecurityMonitoringRuleUpdatePayload": {
        "description": "Update an existing rule.",
        "properties": {
          "cases": {
            "description": "Cases for generating signals.",
            "items": {
              "description": "Case when signal is generated.",
              "properties": {
                "condition": {
                  "description": "A rule case contains logical operations (>, >=, &&, ||) to determine if a signal should be generated\nbased on the event counts in the previously defined queries.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the case.",
                  "type": "string"
                },
                "notifications": {
                  "description": "Notification targets for each rule case",
                  "items": {
                    "description": "Notification",
                    "type": "string"
                  },
                  "type": "array"
                },
                "status": {
                  "description": "Severity of the Security Signal.",
                  "enum": [
                    "info",
                    "low",
                    "medium",
                    "high",
                    "critical"
                  ],
                  "type": "string",
                  "x-enum-varnames": [
                    "INFO",
                    "LOW",
                    "MEDIUM",
                    "HIGH",
                    "CRITICAL"
                  ]
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "enabled": {
            "description": "Whether the rule is enabled.",
            "type": "boolean"
          },
          "message": {
            "description": "Message for generated signals.",
            "type": "string"
          },
          "name": {
            "description": "Name of the rule.",
            "type": "string"
          },
          "options": {
            "description": "Options on rules.",
            "properties": {
              "evaluationWindow": {
                "description": "A time window is specified to match when at least one of the cases matches true. This is a sliding window\nand evaluates in real time.",
                "enum": [
                  0,
                  60,
                  300,
                  600,
                  900,
                  1800,
                  3600,
                  7200
                ],
                "format": "int32",
                "type": "integer",
                "x-enum-varnames": [
                  "ZERO_MINUTES",
                  "ONE_MINUTE",
                  "FIVE_MINUTES",
                  "TEN_MINUTES",
                  "FIFTEEN_MINUTES",
                  "THIRTY_MINUTES",
                  "ONE_HOUR",
                  "TWO_HOURS"
                ]
              },
              "keepAlive": {
                "description": "Once a signal is generated, the signal will remain “open” if a case is matched at least once within\nthis keep alive window.",
                "enum": [
                  0,
                  60,
                  300,
                  600,
                  900,
                  1800,
                  3600,
                  7200
                ],
                "format": "int32",
                "type": "integer",
                "x-enum-varnames": [
                  "ZERO_MINUTES",
                  "ONE_MINUTE",
                  "FIVE_MINUTES",
                  "TEN_MINUTES",
                  "FIFTEEN_MINUTES",
                  "THIRTY_MINUTES",
                  "ONE_HOUR",
                  "TWO_HOURS"
                ]
              },
              "maxSignalDuration": {
                "description": "A signal will “close” regardless of the query being matched once the time exceeds the maximum duration.\nThis time is calculated from the first seen timestamp.",
                "enum": [
                  0,
                  60,
                  300,
                  600,
                  900,
                  1800,
                  3600,
                  7200,
                  10800,
                  21600,
                  43200,
                  86400
                ],
                "format": "int32",
                "type": "integer",
                "x-enum-varnames": [
                  "ZERO_MINUTES",
                  "ONE_MINUTE",
                  "FIVE_MINUTES",
                  "TEN_MINUTES",
                  "FIFTEEN_MINUTES",
                  "THIRTY_MINUTES",
                  "ONE_HOUR",
                  "TWO_HOURS",
                  "THREE_HOURS",
                  "SIX_HOURS",
                  "TWELVE_HOURS",
                  "ONE_DAY"
                ]
              }
            },
            "type": "object"
          },
          "queries": {
            "description": "Queries for selecting logs which are part of the rule.",
            "items": {
              "description": "Query for matching rule.",
              "properties": {
                "groupByFields": {
                  "description": "Fields to group by.",
                  "items": {
                    "description": "Field",
                    "type": "string"
                  },
                  "type": "array"
                },
                "name": {
                  "description": "Name of the query",
                  "type": "string"
                },
                "query": {
                  "description": "Query to run on logs",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "tags": {
            "description": "Tags for generated signals.",
            "items": {
              "description": "Tag",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "User": {
        "description": "User object returned by the API.",
        "properties": {
          "attributes": {
            "description": "Attributes of user object returned by the API.",
            "properties": {
              "created_at": {
                "description": "Creation time of the user.",
                "format": "date-time",
                "type": "string"
              },
              "disabled": {
                "description": "Whether the user is disabled.",
                "type": "boolean"
              },
              "email": {
                "description": "Email of the user.",
                "type": "string"
              },
              "handle": {
                "description": "Handle of the user.",
                "type": "string"
              },
              "icon": {
                "description": "URL of the user's icon.",
                "type": "string"
              },
              "name": {
                "description": "Name of the user.",
                "type": "string"
              },
              "status": {
                "description": "Status of the user.",
                "type": "string"
              },
              "title": {
                "description": "Title of the user.",
                "type": "string"
              },
              "verified": {
                "description": "Whether the user is verified.",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "ID of the user.",
            "type": "string"
          },
          "relationships": {
            "description": "Relationships of the user object returned by the API.",
            "properties": {
              "org": {
                "description": "Relationship to an organization.",
                "properties": {
                  "data": {
                    "description": "Relationship to organization object.",
                    "properties": {
                      "id": {
                        "description": "ID of the organization.",
                        "type": "string"
                      },
                      "type": {
                        "default": "orgs",
                        "description": "Organizations resource type.",
                        "enum": [
                          "orgs"
                        ],
                        "example": "orgs",
                        "type": "string",
                        "x-enum-varnames": [
                          "ORGS"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "other_orgs": {
                "description": "Relationship to organizations.",
                "properties": {
                  "data": {
                    "description": "Relationships to organization objects.",
                    "items": {
                      "description": "Relationship to organization object.",
                      "properties": {
                        "id": {
                          "description": "ID of the organization.",
                          "type": "string"
                        },
                        "type": {
                          "default": "orgs",
                          "description": "Organizations resource type.",
                          "enum": [
                            "orgs"
                          ],
                          "example": "orgs",
                          "type": "string",
                          "x-enum-varnames": [
                            "ORGS"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "other_users": {
                "description": "Relationship to users.",
                "properties": {
                  "data": {
                    "description": "Relationships to user objects.",
                    "items": {
                      "description": "Relationship to user object.",
                      "properties": {
                        "id": {
                          "description": "ID of the user.",
                          "type": "string"
                        },
                        "type": {
                          "default": "users",
                          "description": "Users type.",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "roles": {
                "description": "Relationship to roles.",
                "properties": {
                  "data": {
                    "description": "An array containing type and ID of a role.",
                    "items": {
                      "description": "Relationship to role object.",
                      "properties": {
                        "id": {
                          "description": "ID of the role.",
                          "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                          "type": "string"
                        },
                        "type": {
                          "default": "roles",
                          "description": "Roles type.",
                          "enum": [
                            "roles"
                          ],
                          "example": "roles",
                          "type": "string",
                          "x-enum-varnames": [
                            "ROLES"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": {
            "default": "users",
            "description": "Users resource type.",
            "enum": [
              "users"
            ],
            "type": "string",
            "x-enum-varnames": [
              "USERS"
            ]
          }
        },
        "type": "object"
      },
      "UserAttributes": {
        "description": "Attributes of user object returned by the API.",
        "properties": {
          "created_at": {
            "description": "Creation time of the user.",
            "format": "date-time",
            "type": "string"
          },
          "disabled": {
            "description": "Whether the user is disabled.",
            "type": "boolean"
          },
          "email": {
            "description": "Email of the user.",
            "type": "string"
          },
          "handle": {
            "description": "Handle of the user.",
            "type": "string"
          },
          "icon": {
            "description": "URL of the user's icon.",
            "type": "string"
          },
          "name": {
            "description": "Name of the user.",
            "type": "string"
          },
          "status": {
            "description": "Status of the user.",
            "type": "string"
          },
          "title": {
            "description": "Title of the user.",
            "type": "string"
          },
          "verified": {
            "description": "Whether the user is verified.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "UserCreateAttributes": {
        "description": "Attributes of the created user.",
        "properties": {
          "email": {
            "description": "The email of the user.",
            "type": "string"
          },
          "name": {
            "description": "The name of the user.",
            "type": "string"
          },
          "title": {
            "description": "The title of the user.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserCreateData": {
        "description": "Object to create a user.",
        "properties": {
          "attributes": {
            "description": "Attributes of the created user.",
            "properties": {
              "email": {
                "description": "The email of the user.",
                "type": "string"
              },
              "name": {
                "description": "The name of the user.",
                "type": "string"
              },
              "title": {
                "description": "The title of the user.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "relationships": {
            "description": "Relationships of the user object.",
            "properties": {
              "roles": {
                "description": "Relationship to roles.",
                "properties": {
                  "data": {
                    "description": "An array containing type and ID of a role.",
                    "items": {
                      "description": "Relationship to role object.",
                      "properties": {
                        "id": {
                          "description": "ID of the role.",
                          "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                          "type": "string"
                        },
                        "type": {
                          "default": "roles",
                          "description": "Roles type.",
                          "enum": [
                            "roles"
                          ],
                          "example": "roles",
                          "type": "string",
                          "x-enum-varnames": [
                            "ROLES"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": {
            "default": "users",
            "description": "Users resource type.",
            "enum": [
              "users"
            ],
            "type": "string",
            "x-enum-varnames": [
              "USERS"
            ]
          }
        },
        "type": "object"
      },
      "UserCreateRequest": {
        "description": "Create a user.",
        "properties": {
          "data": {
            "description": "Object to create a user.",
            "properties": {
              "attributes": {
                "description": "Attributes of the created user.",
                "properties": {
                  "email": {
                    "description": "The email of the user.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the user.",
                    "type": "string"
                  },
                  "title": {
                    "description": "The title of the user.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "description": "Relationships of the user object.",
                "properties": {
                  "roles": {
                    "description": "Relationship to roles.",
                    "properties": {
                      "data": {
                        "description": "An array containing type and ID of a role.",
                        "items": {
                          "description": "Relationship to role object.",
                          "properties": {
                            "id": {
                              "description": "ID of the role.",
                              "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                              "type": "string"
                            },
                            "type": {
                              "default": "roles",
                              "description": "Roles type.",
                              "enum": [
                                "roles"
                              ],
                              "example": "roles",
                              "type": "string",
                              "x-enum-varnames": [
                                "ROLES"
                              ]
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "users",
                "description": "Users resource type.",
                "enum": [
                  "users"
                ],
                "type": "string",
                "x-enum-varnames": [
                  "USERS"
                ]
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UserInvitationData": {
        "description": "Object to create a user invitation.",
        "properties": {
          "relationships": {
            "description": "Relationships data for user invitation.",
            "properties": {
              "user": {
                "description": "Relationship to user.",
                "properties": {
                  "data": {
                    "description": "Relationship to user object.",
                    "properties": {
                      "id": {
                        "description": "ID of the user.",
                        "type": "string"
                      },
                      "type": {
                        "default": "users",
                        "description": "Users type.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": {
            "default": "user_invitations",
            "description": "User invitations type.",
            "enum": [
              "user_invitations"
            ],
            "type": "string",
            "x-enum-varnames": [
              "USER_INVITATIONS"
            ]
          }
        },
        "type": "object"
      },
      "UserInvitationDataAttributes": {
        "description": "Attributes of a user invitation.",
        "properties": {
          "created_at": {
            "description": "Creation time of the user invitation.",
            "format": "date-time",
            "type": "string"
          },
          "expires_at": {
            "description": "Time of invitation expiration.",
            "format": "date-time",
            "type": "string"
          },
          "invite_type": {
            "description": "Type of invitation.",
            "type": "string"
          },
          "uuid": {
            "description": "UUID of the user invitation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserInvitationRelationships": {
        "description": "Relationships data for user invitation.",
        "properties": {
          "user": {
            "description": "Relationship to user.",
            "properties": {
              "data": {
                "description": "Relationship to user object.",
                "properties": {
                  "id": {
                    "description": "ID of the user.",
                    "type": "string"
                  },
                  "type": {
                    "default": "users",
                    "description": "Users type.",
                    "readOnly": true,
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UserInvitationResponse": {
        "description": "User invitation as returned by the API.",
        "properties": {
          "data": {
            "description": "Object of a user invitation returned by the API.",
            "properties": {
              "attributes": {
                "description": "Attributes of a user invitation.",
                "properties": {
                  "created_at": {
                    "description": "Creation time of the user invitation.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "expires_at": {
                    "description": "Time of invitation expiration.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "invite_type": {
                    "description": "Type of invitation.",
                    "type": "string"
                  },
                  "uuid": {
                    "description": "UUID of the user invitation.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "ID of the user invitation.",
                "type": "string"
              },
              "type": {
                "default": "user_invitations",
                "description": "User invitations type.",
                "enum": [
                  "user_invitations"
                ],
                "type": "string",
                "x-enum-varnames": [
                  "USER_INVITATIONS"
                ]
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UserInvitationResponseData": {
        "description": "Object of a user invitation returned by the API.",
        "properties": {
          "attributes": {
            "description": "Attributes of a user invitation.",
            "properties": {
              "created_at": {
                "description": "Creation time of the user invitation.",
                "format": "date-time",
                "type": "string"
              },
              "expires_at": {
                "description": "Time of invitation expiration.",
                "format": "date-time",
                "type": "string"
              },
              "invite_type": {
                "description": "Type of invitation.",
                "type": "string"
              },
              "uuid": {
                "description": "UUID of the user invitation.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "ID of the user invitation.",
            "type": "string"
          },
          "type": {
            "default": "user_invitations",
            "description": "User invitations type.",
            "enum": [
              "user_invitations"
            ],
            "type": "string",
            "x-enum-varnames": [
              "USER_INVITATIONS"
            ]
          }
        },
        "type": "object"
      },
      "UserInvitationsRequest": {
        "description": "Object to invite users to join the organization.",
        "properties": {
          "data": {
            "description": "List of user invitations.",
            "items": {
              "description": "Object to create a user invitation.",
              "properties": {
                "relationships": {
                  "description": "Relationships data for user invitation.",
                  "properties": {
                    "user": {
                      "description": "Relationship to user.",
                      "properties": {
                        "data": {
                          "description": "Relationship to user object.",
                          "properties": {
                            "id": {
                              "description": "ID of the user.",
                              "type": "string"
                            },
                            "type": {
                              "default": "users",
                              "description": "Users type.",
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "user_invitations",
                  "description": "User invitations type.",
                  "enum": [
                    "user_invitations"
                  ],
                  "type": "string",
                  "x-enum-varnames": [
                    "USER_INVITATIONS"
                  ]
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UserInvitationsResponse": {
        "description": "User invitations as returned by the API.",
        "properties": {
          "data": {
            "description": "Array of user invitations.",
            "items": {
              "description": "Object of a user invitation returned by the API.",
              "properties": {
                "attributes": {
                  "description": "Attributes of a user invitation.",
                  "properties": {
                    "created_at": {
                      "description": "Creation time of the user invitation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "expires_at": {
                      "description": "Time of invitation expiration.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "invite_type": {
                      "description": "Type of invitation.",
                      "type": "string"
                    },
                    "uuid": {
                      "description": "UUID of the user invitation.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "description": "ID of the user invitation.",
                  "type": "string"
                },
                "type": {
                  "default": "user_invitations",
                  "description": "User invitations type.",
                  "enum": [
                    "user_invitations"
                  ],
                  "type": "string",
                  "x-enum-varnames": [
                    "USER_INVITATIONS"
                  ]
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UserInvitationsType": {
        "default": "user_invitations",
        "description": "User invitations type.",
        "enum": [
          "user_invitations"
        ],
        "type": "string",
        "x-enum-varnames": [
          "USER_INVITATIONS"
        ]
      },
      "UserRelationships": {
        "description": "Relationships of the user object.",
        "properties": {
          "roles": {
            "description": "Relationship to roles.",
            "properties": {
              "data": {
                "description": "An array containing type and ID of a role.",
                "items": {
                  "description": "Relationship to role object.",
                  "properties": {
                    "id": {
                      "description": "ID of the role.",
                      "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                      "type": "string"
                    },
                    "type": {
                      "default": "roles",
                      "description": "Roles type.",
                      "enum": [
                        "roles"
                      ],
                      "example": "roles",
                      "type": "string",
                      "x-enum-varnames": [
                        "ROLES"
                      ]
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UserResponse": {
        "description": "Response containing information about a single user.",
        "properties": {
          "data": {
            "description": "User object returned by the API.",
            "properties": {
              "attributes": {
                "description": "Attributes of user object returned by the API.",
                "properties": {
                  "created_at": {
                    "description": "Creation time of the user.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "disabled": {
                    "description": "Whether the user is disabled.",
                    "type": "boolean"
                  },
                  "email": {
                    "description": "Email of the user.",
                    "type": "string"
                  },
                  "handle": {
                    "description": "Handle of the user.",
                    "type": "string"
                  },
                  "icon": {
                    "description": "URL of the user's icon.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the user.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status of the user.",
                    "type": "string"
                  },
                  "title": {
                    "description": "Title of the user.",
                    "type": "string"
                  },
                  "verified": {
                    "description": "Whether the user is verified.",
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "ID of the user.",
                "type": "string"
              },
              "relationships": {
                "description": "Relationships of the user object returned by the API.",
                "properties": {
                  "org": {
                    "description": "Relationship to an organization.",
                    "properties": {
                      "data": {
                        "description": "Relationship to organization object.",
                        "properties": {
                          "id": {
                            "description": "ID of the organization.",
                            "type": "string"
                          },
                          "type": {
                            "default": "orgs",
                            "description": "Organizations resource type.",
                            "enum": [
                              "orgs"
                            ],
                            "example": "orgs",
                            "type": "string",
                            "x-enum-varnames": [
                              "ORGS"
                            ]
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "other_orgs": {
                    "description": "Relationship to organizations.",
                    "properties": {
                      "data": {
                        "description": "Relationships to organization objects.",
                        "items": {
                          "description": "Relationship to organization object.",
                          "properties": {
                            "id": {
                              "description": "ID of the organization.",
                              "type": "string"
                            },
                            "type": {
                              "default": "orgs",
                              "description": "Organizations resource type.",
                              "enum": [
                                "orgs"
                              ],
                              "example": "orgs",
                              "type": "string",
                              "x-enum-varnames": [
                                "ORGS"
                              ]
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "other_users": {
                    "description": "Relationship to users.",
                    "properties": {
                      "data": {
                        "description": "Relationships to user objects.",
                        "items": {
                          "description": "Relationship to user object.",
                          "properties": {
                            "id": {
                              "description": "ID of the user.",
                              "type": "string"
                            },
                            "type": {
                              "default": "users",
                              "description": "Users type.",
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "roles": {
                    "description": "Relationship to roles.",
                    "properties": {
                      "data": {
                        "description": "An array containing type and ID of a role.",
                        "items": {
                          "description": "Relationship to role object.",
                          "properties": {
                            "id": {
                              "description": "ID of the role.",
                              "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                              "type": "string"
                            },
                            "type": {
                              "default": "roles",
                              "description": "Roles type.",
                              "enum": [
                                "roles"
                              ],
                              "example": "roles",
                              "type": "string",
                              "x-enum-varnames": [
                                "ROLES"
                              ]
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "users",
                "description": "Users resource type.",
                "enum": [
                  "users"
                ],
                "type": "string",
                "x-enum-varnames": [
                  "USERS"
                ]
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Array of objects related to the user.",
            "items": {
              "description": "An object related to a user.",
              "oneOf": [
                {
                  "description": "Organization object.",
                  "properties": {
                    "attributes": {
                      "description": "Attributes of the organization.",
                      "properties": {
                        "created_at": {
                          "description": "Creation time of the organization.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "description": {
                          "description": "Description of the organization.",
                          "type": "string"
                        },
                        "disabled": {
                          "description": "Whether or not the organization is disabled.",
                          "type": "boolean"
                        },
                        "modified_at": {
                          "description": "Time of last organization modification.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the organization.",
                          "type": "string"
                        },
                        "public_id": {
                          "description": "Public ID of the organization.",
                          "type": "string"
                        },
                        "sharing": {
                          "description": "Sharing type of the organization.",
                          "type": "string"
                        },
                        "url": {
                          "description": "URL of the site that this organization exists at.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "ID of the organization.",
                      "type": "string"
                    },
                    "type": {
                      "default": "orgs",
                      "description": "Organizations resource type.",
                      "enum": [
                        "orgs"
                      ],
                      "example": "orgs",
                      "type": "string",
                      "x-enum-varnames": [
                        "ORGS"
                      ]
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object"
                },
                {
                  "description": "Permission object.",
                  "properties": {
                    "attributes": {
                      "description": "Attributes of a permission.",
                      "properties": {
                        "created": {
                          "description": "Creation time of the permission.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "description": {
                          "description": "Description of the permission.",
                          "type": "string"
                        },
                        "display_name": {
                          "description": "Displayed name for the permission.",
                          "type": "string"
                        },
                        "display_type": {
                          "description": "Display type.",
                          "type": "string"
                        },
                        "group_name": {
                          "description": "Name of the permission group.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the permission.",
                          "type": "string"
                        },
                        "restricted": {
                          "description": "Whether or not the permission is restricted.",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "ID of the permission.",
                      "type": "string"
                    },
                    "type": {
                      "default": "permissions",
                      "description": "Permissions resource type.",
                      "enum": [
                        "permissions"
                      ],
                      "example": "permissions",
                      "type": "string",
                      "x-enum-varnames": [
                        "PERMISSIONS"
                      ]
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object"
                },
                {
                  "description": "Role object returned by the API.",
                  "properties": {
                    "attributes": {
                      "description": "Attributes of the role.",
                      "properties": {
                        "created_at": {
                          "description": "Creation time of the role.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string"
                        },
                        "modified_at": {
                          "description": "Time of last role modification.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the role.",
                          "type": "string"
                        },
                        "user_count": {
                          "description": "Number of users with that role.",
                          "format": "int64",
                          "readOnly": true,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "ID of the role.",
                      "type": "string"
                    },
                    "relationships": {
                      "description": "Relationships of the role object returned by the API.",
                      "properties": {
                        "permissions": {
                          "description": "Relationship to multiple permissions objects.",
                          "properties": {
                            "data": {
                              "description": "Relationships to permission objects.",
                              "items": {
                                "description": "Relationship to permission object.",
                                "properties": {
                                  "id": {
                                    "description": "ID of the permission.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "default": "permissions",
                                    "description": "Permissions resource type.",
                                    "enum": [
                                      "permissions"
                                    ],
                                    "example": "permissions",
                                    "type": "string",
                                    "x-enum-varnames": [
                                      "PERMISSIONS"
                                    ]
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "default": "roles",
                      "description": "Roles type.",
                      "enum": [
                        "roles"
                      ],
                      "example": "roles",
                      "type": "string",
                      "x-enum-varnames": [
                        "ROLES"
                      ]
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object"
                }
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UserResponseIncludedItem": {
        "description": "An object related to a user.",
        "oneOf": [
          {
            "description": "Organization object.",
            "properties": {
              "attributes": {
                "description": "Attributes of the organization.",
                "properties": {
                  "created_at": {
                    "description": "Creation time of the organization.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description of the organization.",
                    "type": "string"
                  },
                  "disabled": {
                    "description": "Whether or not the organization is disabled.",
                    "type": "boolean"
                  },
                  "modified_at": {
                    "description": "Time of last organization modification.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the organization.",
                    "type": "string"
                  },
                  "public_id": {
                    "description": "Public ID of the organization.",
                    "type": "string"
                  },
                  "sharing": {
                    "description": "Sharing type of the organization.",
                    "type": "string"
                  },
                  "url": {
                    "description": "URL of the site that this organization exists at.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "ID of the organization.",
                "type": "string"
              },
              "type": {
                "default": "orgs",
                "description": "Organizations resource type.",
                "enum": [
                  "orgs"
                ],
                "example": "orgs",
                "type": "string",
                "x-enum-varnames": [
                  "ORGS"
                ]
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          },
          {
            "description": "Permission object.",
            "properties": {
              "attributes": {
                "description": "Attributes of a permission.",
                "properties": {
                  "created": {
                    "description": "Creation time of the permission.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description of the permission.",
                    "type": "string"
                  },
                  "display_name": {
                    "description": "Displayed name for the permission.",
                    "type": "string"
                  },
                  "display_type": {
                    "description": "Display type.",
                    "type": "string"
                  },
                  "group_name": {
                    "description": "Name of the permission group.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the permission.",
                    "type": "string"
                  },
                  "restricted": {
                    "description": "Whether or not the permission is restricted.",
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "ID of the permission.",
                "type": "string"
              },
              "type": {
                "default": "permissions",
                "description": "Permissions resource type.",
                "enum": [
                  "permissions"
                ],
                "example": "permissions",
                "type": "string",
                "x-enum-varnames": [
                  "PERMISSIONS"
                ]
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          },
          {
            "description": "Role object returned by the API.",
            "properties": {
              "attributes": {
                "description": "Attributes of the role.",
                "properties": {
                  "created_at": {
                    "description": "Creation time of the role.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "Time of last role modification.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the role.",
                    "type": "string"
                  },
                  "user_count": {
                    "description": "Number of users with that role.",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "ID of the role.",
                "type": "string"
              },
              "relationships": {
                "description": "Relationships of the role object returned by the API.",
                "properties": {
                  "permissions": {
                    "description": "Relationship to multiple permissions objects.",
                    "properties": {
                      "data": {
                        "description": "Relationships to permission objects.",
                        "items": {
                          "description": "Relationship to permission object.",
                          "properties": {
                            "id": {
                              "description": "ID of the permission.",
                              "type": "string"
                            },
                            "type": {
                              "default": "permissions",
                              "description": "Permissions resource type.",
                              "enum": [
                                "permissions"
                              ],
                              "example": "permissions",
                              "type": "string",
                              "x-enum-varnames": [
                                "PERMISSIONS"
                              ]
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "roles",
                "description": "Roles type.",
                "enum": [
                  "roles"
                ],
                "example": "roles",
                "type": "string",
                "x-enum-varnames": [
                  "ROLES"
                ]
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          }
        ],
        "type": "object"
      },
      "UserResponseRelationships": {
        "description": "Relationships of the user object returned by the API.",
        "properties": {
          "org": {
            "description": "Relationship to an organization.",
            "properties": {
              "data": {
                "description": "Relationship to organization object.",
                "properties": {
                  "id": {
                    "description": "ID of the organization.",
                    "type": "string"
                  },
                  "type": {
                    "default": "orgs",
                    "description": "Organizations resource type.",
                    "enum": [
                      "orgs"
                    ],
                    "example": "orgs",
                    "type": "string",
                    "x-enum-varnames": [
                      "ORGS"
                    ]
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "other_orgs": {
            "description": "Relationship to organizations.",
            "properties": {
              "data": {
                "description": "Relationships to organization objects.",
                "items": {
                  "description": "Relationship to organization object.",
                  "properties": {
                    "id": {
                      "description": "ID of the organization.",
                      "type": "string"
                    },
                    "type": {
                      "default": "orgs",
                      "description": "Organizations resource type.",
                      "enum": [
                        "orgs"
                      ],
                      "example": "orgs",
                      "type": "string",
                      "x-enum-varnames": [
                        "ORGS"
                      ]
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "other_users": {
            "description": "Relationship to users.",
            "properties": {
              "data": {
                "description": "Relationships to user objects.",
                "items": {
                  "description": "Relationship to user object.",
                  "properties": {
                    "id": {
                      "description": "ID of the user.",
                      "type": "string"
                    },
                    "type": {
                      "default": "users",
                      "description": "Users type.",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "roles": {
            "description": "Relationship to roles.",
            "properties": {
              "data": {
                "description": "An array containing type and ID of a role.",
                "items": {
                  "description": "Relationship to role object.",
                  "properties": {
                    "id": {
                      "description": "ID of the role.",
                      "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                      "type": "string"
                    },
                    "type": {
                      "default": "roles",
                      "description": "Roles type.",
                      "enum": [
                        "roles"
                      ],
                      "example": "roles",
                      "type": "string",
                      "x-enum-varnames": [
                        "ROLES"
                      ]
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UserUpdateAttributes": {
        "description": "Attributes of the edited user.",
        "properties": {
          "disabled": {
            "description": "If the user is enabled or disabled.",
            "type": "boolean"
          },
          "email": {
            "description": "The email of the user.",
            "type": "string"
          },
          "name": {
            "description": "The name of the user.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserUpdateData": {
        "description": "Object to update a user.",
        "properties": {
          "attributes": {
            "description": "Attributes of the edited user.",
            "properties": {
              "disabled": {
                "description": "If the user is enabled or disabled.",
                "type": "boolean"
              },
              "email": {
                "description": "The email of the user.",
                "type": "string"
              },
              "name": {
                "description": "The name of the user.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "ID of the user.",
            "type": "string"
          },
          "type": {
            "default": "users",
            "description": "Users resource type.",
            "enum": [
              "users"
            ],
            "type": "string",
            "x-enum-varnames": [
              "USERS"
            ]
          }
        },
        "type": "object"
      },
      "UserUpdateRequest": {
        "description": "Update a user.",
        "properties": {
          "data": {
            "description": "Object to update a user.",
            "properties": {
              "attributes": {
                "description": "Attributes of the edited user.",
                "properties": {
                  "disabled": {
                    "description": "If the user is enabled or disabled.",
                    "type": "boolean"
                  },
                  "email": {
                    "description": "The email of the user.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the user.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "ID of the user.",
                "type": "string"
              },
              "type": {
                "default": "users",
                "description": "Users resource type.",
                "enum": [
                  "users"
                ],
                "type": "string",
                "x-enum-varnames": [
                  "USERS"
                ]
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UsersResponse": {
        "description": "Response containing information about multiple users.",
        "properties": {
          "data": {
            "description": "Array of returned users.",
            "items": {
              "description": "User object returned by the API.",
              "properties": {
                "attributes": {
                  "description": "Attributes of user object returned by the API.",
                  "properties": {
                    "created_at": {
                      "description": "Creation time of the user.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "disabled": {
                      "description": "Whether the user is disabled.",
                      "type": "boolean"
                    },
                    "email": {
                      "description": "Email of the user.",
                      "type": "string"
                    },
                    "handle": {
                      "description": "Handle of the user.",
                      "type": "string"
                    },
                    "icon": {
                      "description": "URL of the user's icon.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the user.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the user.",
                      "type": "string"
                    },
                    "title": {
                      "description": "Title of the user.",
                      "type": "string"
                    },
                    "verified": {
                      "description": "Whether the user is verified.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "description": "ID of the user.",
                  "type": "string"
                },
                "relationships": {
                  "description": "Relationships of the user object returned by the API.",
                  "properties": {
                    "org": {
                      "description": "Relationship to an organization.",
                      "properties": {
                        "data": {
                          "description": "Relationship to organization object.",
                          "properties": {
                            "id": {
                              "description": "ID of the organization.",
                              "type": "string"
                            },
                            "type": {
                              "default": "orgs",
                              "description": "Organizations resource type.",
                              "enum": [
                                "orgs"
                              ],
                              "example": "orgs",
                              "type": "string",
                              "x-enum-varnames": [
                                "ORGS"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "other_orgs": {
                      "description": "Relationship to organizations.",
                      "properties": {
                        "data": {
                          "description": "Relationships to organization objects.",
                          "items": {
                            "description": "Relationship to organization object.",
                            "properties": {
                              "id": {
                                "description": "ID of the organization.",
                                "type": "string"
                              },
                              "type": {
                                "default": "orgs",
                                "description": "Organizations resource type.",
                                "enum": [
                                  "orgs"
                                ],
                                "example": "orgs",
                                "type": "string",
                                "x-enum-varnames": [
                                  "ORGS"
                                ]
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "other_users": {
                      "description": "Relationship to users.",
                      "properties": {
                        "data": {
                          "description": "Relationships to user objects.",
                          "items": {
                            "description": "Relationship to user object.",
                            "properties": {
                              "id": {
                                "description": "ID of the user.",
                                "type": "string"
                              },
                              "type": {
                                "default": "users",
                                "description": "Users type.",
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "roles": {
                      "description": "Relationship to roles.",
                      "properties": {
                        "data": {
                          "description": "An array containing type and ID of a role.",
                          "items": {
                            "description": "Relationship to role object.",
                            "properties": {
                              "id": {
                                "description": "ID of the role.",
                                "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                                "type": "string"
                              },
                              "type": {
                                "default": "roles",
                                "description": "Roles type.",
                                "enum": [
                                  "roles"
                                ],
                                "example": "roles",
                                "type": "string",
                                "x-enum-varnames": [
                                  "ROLES"
                                ]
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "users",
                  "description": "Users resource type.",
                  "enum": [
                    "users"
                  ],
                  "type": "string",
                  "x-enum-varnames": [
                    "USERS"
                  ]
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Array of objects related to the users.",
            "items": {
              "description": "An object related to a user.",
              "oneOf": [
                {
                  "description": "Organization object.",
                  "properties": {
                    "attributes": {
                      "description": "Attributes of the organization.",
                      "properties": {
                        "created_at": {
                          "description": "Creation time of the organization.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "description": {
                          "description": "Description of the organization.",
                          "type": "string"
                        },
                        "disabled": {
                          "description": "Whether or not the organization is disabled.",
                          "type": "boolean"
                        },
                        "modified_at": {
                          "description": "Time of last organization modification.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the organization.",
                          "type": "string"
                        },
                        "public_id": {
                          "description": "Public ID of the organization.",
                          "type": "string"
                        },
                        "sharing": {
                          "description": "Sharing type of the organization.",
                          "type": "string"
                        },
                        "url": {
                          "description": "URL of the site that this organization exists at.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "ID of the organization.",
                      "type": "string"
                    },
                    "type": {
                      "default": "orgs",
                      "description": "Organizations resource type.",
                      "enum": [
                        "orgs"
                      ],
                      "example": "orgs",
                      "type": "string",
                      "x-enum-varnames": [
                        "ORGS"
                      ]
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object"
                },
                {
                  "description": "Permission object.",
                  "properties": {
                    "attributes": {
                      "description": "Attributes of a permission.",
                      "properties": {
                        "created": {
                          "description": "Creation time of the permission.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "description": {
                          "description": "Description of the permission.",
                          "type": "string"
                        },
                        "display_name": {
                          "description": "Displayed name for the permission.",
                          "type": "string"
                        },
                        "display_type": {
                          "description": "Display type.",
                          "type": "string"
                        },
                        "group_name": {
                          "description": "Name of the permission group.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the permission.",
                          "type": "string"
                        },
                        "restricted": {
                          "description": "Whether or not the permission is restricted.",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "ID of the permission.",
                      "type": "string"
                    },
                    "type": {
                      "default": "permissions",
                      "description": "Permissions resource type.",
                      "enum": [
                        "permissions"
                      ],
                      "example": "permissions",
                      "type": "string",
                      "x-enum-varnames": [
                        "PERMISSIONS"
                      ]
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object"
                },
                {
                  "description": "Role object returned by the API.",
                  "properties": {
                    "attributes": {
                      "description": "Attributes of the role.",
                      "properties": {
                        "created_at": {
                          "description": "Creation time of the role.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string"
                        },
                        "modified_at": {
                          "description": "Time of last role modification.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the role.",
                          "type": "string"
                        },
                        "user_count": {
                          "description": "Number of users with that role.",
                          "format": "int64",
                          "readOnly": true,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "ID of the role.",
                      "type": "string"
                    },
                    "relationships": {
                      "description": "Relationships of the role object returned by the API.",
                      "properties": {
                        "permissions": {
                          "description": "Relationship to multiple permissions objects.",
                          "properties": {
                            "data": {
                              "description": "Relationships to permission objects.",
                              "items": {
                                "description": "Relationship to permission object.",
                                "properties": {
                                  "id": {
                                    "description": "ID of the permission.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "default": "permissions",
                                    "description": "Permissions resource type.",
                                    "enum": [
                                      "permissions"
                                    ],
                                    "example": "permissions",
                                    "type": "string",
                                    "x-enum-varnames": [
                                      "PERMISSIONS"
                                    ]
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "default": "roles",
                      "description": "Roles type.",
                      "enum": [
                        "roles"
                      ],
                      "example": "roles",
                      "type": "string",
                      "x-enum-varnames": [
                        "ROLES"
                      ]
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object"
                }
              ],
              "type": "object"
            },
            "type": "array"
          },
          "meta": {
            "description": "Object describing meta attributes of response.",
            "properties": {
              "page": {
                "description": "Pagination object.",
                "properties": {
                  "total_count": {
                    "description": "Total count.",
                    "format": "int64",
                    "type": "integer"
                  },
                  "total_filtered_count": {
                    "description": "Total count of elements matched by the filter.",
                    "format": "int64",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "UsersType": {
        "default": "users",
        "description": "Users resource type.",
        "enum": [
          "users"
        ],
        "type": "string",
        "x-enum-varnames": [
          "USERS"
        ]
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "description": "Your Datadog API Key.",
        "in": "header",
        "name": "DD-API-KEY",
        "type": "apiKey",
        "x-env-name": "DD_CLIENT_API_KEY"
      },
      "appKeyAuth": {
        "description": "Your Datadog APP Key.",
        "in": "header",
        "name": "DD-APPLICATION-KEY",
        "type": "apiKey",
        "x-env-name": "DD_CLIENT_APP_KEY"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@datadoghq.com",
      "name": "Datadog Support",
      "url": "https://www.datadoghq.com/support/"
    },
    "description": "Collection of all Datadog Public endpoints.",
    "title": "Datadog API Collection",
    "version": "1.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/api/v2/dashboard/lists/manual/{dashboard_list_id}/dashboards": {
      "delete": {
        "description": "Delete dashboards from an existing dashboard list.",
        "operationId": "DeleteDashboardListItems",
        "parameters": [
          {
            "description": "ID of the dashboard list to delete items from.",
            "in": "path",
            "name": "dashboard_list_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Request containing a list of dashboards to delete.",
                "properties": {
                  "dashboards": {
                    "description": "List of dashboards to delete from the dashboard list.",
                    "items": {
                      "description": "A dashboard within a list.",
                      "properties": {
                        "id": {
                          "description": "ID of the dashboard.",
                          "example": "q5j-nti-fv6",
                          "type": "string"
                        },
                        "type": {
                          "description": "The type of the dashboard.",
                          "enum": [
                            "custom_timeboard",
                            "custom_screenboard",
                            "integration_screenboard",
                            "integration_timeboard",
                            "host_timeboard"
                          ],
                          "type": "string",
                          "x-enum-varnames": [
                            "CUSTOM_TIMEBOARD",
                            "CUSTOM_SCREENBOARD",
                            "INTEGRATION_SCREENBOARD",
                            "INTEGRATION_TIMEBOARD",
                            "HOST_TIMEBOARD"
                          ]
                        }
                      },
                      "required": [
                        "type",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Dashboards to delete from the dashboard list.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing a list of deleted dashboards.",
                  "properties": {
                    "deleted_dashboards_from_list": {
                      "description": "List of dashboards deleted from the dashboard list.",
                      "items": {
                        "description": "A dashboard within a list.",
                        "properties": {
                          "id": {
                            "description": "ID of the dashboard.",
                            "example": "q5j-nti-fv6",
                            "readOnly": true,
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of the dashboard.",
                            "enum": [
                              "custom_timeboard",
                              "custom_screenboard",
                              "integration_screenboard",
                              "integration_timeboard",
                              "host_timeboard"
                            ],
                            "type": "string",
                            "x-enum-varnames": [
                              "CUSTOM_TIMEBOARD",
                              "CUSTOM_SCREENBOARD",
                              "INTEGRATION_SCREENBOARD",
                              "INTEGRATION_TIMEBOARD",
                              "HOST_TIMEBOARD"
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Delete items from a dashboard list",
        "tags": [
          "Dashboard Lists"
        ],
        "x-codegen-request-body-name": "body"
      },
      "get": {
        "description": "Fetch the dashboard list’s dashboard definitions.",
        "operationId": "GetDashboardListItems",
        "parameters": [
          {
            "description": "ID of the dashboard list to get items from.",
            "in": "path",
            "name": "dashboard_list_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Dashboards within a list.",
                  "properties": {
                    "dashboards": {
                      "description": "List of dashboards in the dashboard list.",
                      "example": [],
                      "items": {
                        "description": "A dashboard within a list.",
                        "properties": {
                          "author": {
                            "description": "Creator of the object.",
                            "properties": {
                              "email": {
                                "description": "Email of the creator.",
                                "type": "string"
                              },
                              "handle": {
                                "description": "Handle of the creator.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the creator.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "created": {
                            "description": "Date of creation of the dashboard.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "icon": {
                            "description": "URL to the icon of the dashboard.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "id": {
                            "description": "ID of the dashboard.",
                            "example": "q5j-nti-fv6",
                            "type": "string"
                          },
                          "is_favorite": {
                            "description": "Whether or not the dashboard is in the favorites.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "is_read_only": {
                            "description": "Whether or not the dashboard is read only.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "is_shared": {
                            "description": "Whether the dashboard is publicly shared or not.",
                            "readOnly": true,
                            "type": "boolean"
                          },
                          "modified": {
                            "description": "Date of last edition of the dashboard.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "popularity": {
                            "description": "Popularity of the dashboard.",
                            "format": "int32",
                            "maximum": 5,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "title": {
                            "description": "Title of the dashboard.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of the dashboard.",
                            "enum": [
                              "custom_timeboard",
                              "custom_screenboard",
                              "integration_screenboard",
                              "integration_timeboard",
                              "host_timeboard"
                            ],
                            "type": "string",
                            "x-enum-varnames": [
                              "CUSTOM_TIMEBOARD",
                              "CUSTOM_SCREENBOARD",
                              "INTEGRATION_SCREENBOARD",
                              "INTEGRATION_TIMEBOARD",
                              "HOST_TIMEBOARD"
                            ]
                          },
                          "url": {
                            "description": "URL path to the dashboard.",
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total": {
                      "description": "Number of dashboards in the dashboard list.",
                      "format": "int64",
                      "readOnly": true,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "dashboards"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Dashboard List",
        "tags": [
          "Dashboard Lists"
        ]
      },
      "post": {
        "description": "Add dashboards to an existing dashboard list.",
        "operationId": "CreateDashboardListItems",
        "parameters": [
          {
            "description": "ID of the dashboard list to add items to.",
            "in": "path",
            "name": "dashboard_list_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Request containing a list of dashboards to add.",
                "properties": {
                  "dashboards": {
                    "description": "List of dashboards to add the dashboard list.",
                    "items": {
                      "description": "A dashboard within a list.",
                      "properties": {
                        "id": {
                          "description": "ID of the dashboard.",
                          "example": "q5j-nti-fv6",
                          "type": "string"
                        },
                        "type": {
                          "description": "The type of the dashboard.",
                          "enum": [
                            "custom_timeboard",
                            "custom_screenboard",
                            "integration_screenboard",
                            "integration_timeboard",
                            "host_timeboard"
                          ],
                          "type": "string",
                          "x-enum-varnames": [
                            "CUSTOM_TIMEBOARD",
                            "CUSTOM_SCREENBOARD",
                            "INTEGRATION_SCREENBOARD",
                            "INTEGRATION_TIMEBOARD",
                            "HOST_TIMEBOARD"
                          ]
                        }
                      },
                      "required": [
                        "type",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Dashboards to add to the dashboard list.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing a list of added dashboards.",
                  "properties": {
                    "added_dashboards_to_list": {
                      "description": "List of dashboards added to the dashboard list.",
                      "items": {
                        "description": "A dashboard within a list.",
                        "properties": {
                          "id": {
                            "description": "ID of the dashboard.",
                            "example": "q5j-nti-fv6",
                            "readOnly": true,
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of the dashboard.",
                            "enum": [
                              "custom_timeboard",
                              "custom_screenboard",
                              "integration_screenboard",
                              "integration_timeboard",
                              "host_timeboard"
                            ],
                            "type": "string",
                            "x-enum-varnames": [
                              "CUSTOM_TIMEBOARD",
                              "CUSTOM_SCREENBOARD",
                              "INTEGRATION_SCREENBOARD",
                              "INTEGRATION_TIMEBOARD",
                              "HOST_TIMEBOARD"
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Add Items to a Dashboard List",
        "tags": [
          "Dashboard Lists"
        ],
        "x-codegen-request-body-name": "body"
      },
      "put": {
        "description": "Update dashboards of an existing dashboard list.",
        "operationId": "UpdateDashboardListItems",
        "parameters": [
          {
            "description": "ID of the dashboard list to update items from.",
            "in": "path",
            "name": "dashboard_list_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Request containing the list of dashboards to update to.",
                "properties": {
                  "dashboards": {
                    "description": "List of dashboards to update the dashboard list to.",
                    "items": {
                      "description": "A dashboard within a list.",
                      "properties": {
                        "id": {
                          "description": "ID of the dashboard.",
                          "example": "q5j-nti-fv6",
                          "type": "string"
                        },
                        "type": {
                          "description": "The type of the dashboard.",
                          "enum": [
                            "custom_timeboard",
                            "custom_screenboard",
                            "integration_screenboard",
                            "integration_timeboard",
                            "host_timeboard"
                          ],
                          "type": "string",
                          "x-enum-varnames": [
                            "CUSTOM_TIMEBOARD",
                            "CUSTOM_SCREENBOARD",
                            "INTEGRATION_SCREENBOARD",
                            "INTEGRATION_TIMEBOARD",
                            "HOST_TIMEBOARD"
                          ]
                        }
                      },
                      "required": [
                        "type",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "New dashboards of the dashboard list.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing a list of updated dashboards.",
                  "properties": {
                    "dashboards": {
                      "description": "List of dashboards in the dashboard list.",
                      "items": {
                        "description": "A dashboard within a list.",
                        "properties": {
                          "id": {
                            "description": "ID of the dashboard.",
                            "example": "q5j-nti-fv6",
                            "readOnly": true,
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of the dashboard.",
                            "enum": [
                              "custom_timeboard",
                              "custom_screenboard",
                              "integration_screenboard",
                              "integration_timeboard",
                              "host_timeboard"
                            ],
                            "type": "string",
                            "x-enum-varnames": [
                              "CUSTOM_TIMEBOARD",
                              "CUSTOM_SCREENBOARD",
                              "INTEGRATION_SCREENBOARD",
                              "INTEGRATION_TIMEBOARD",
                              "HOST_TIMEBOARD"
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Update items of a dashboard list",
        "tags": [
          "Dashboard Lists"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v2/logs/config/archives": {
      "get": {
        "description": "Get the list of configured logs archives with their definitions.",
        "operationId": "ListLogsArchives",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "The available archives.",
                  "properties": {
                    "data": {
                      "description": "A list of archives.",
                      "items": {
                        "description": "The definition of an archive.",
                        "properties": {
                          "attributes": {
                            "description": "The attributes associated with the archive.",
                            "properties": {
                              "destination": {
                                "description": "An archive's destination.",
                                "nullable": true,
                                "oneOf": [
                                  {
                                    "description": "The Azure archive destination.",
                                    "properties": {
                                      "container": {
                                        "description": "The container where the archive will be stored.",
                                        "example": "container-name",
                                        "type": "string"
                                      },
                                      "integration": {
                                        "description": "The Azure archive's integration destination.",
                                        "properties": {
                                          "client_id": {
                                            "description": "A client ID.",
                                            "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                                            "type": "string"
                                          },
                                          "tenant_id": {
                                            "description": "A tenant ID.",
                                            "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "tenant_id",
                                          "client_id"
                                        ],
                                        "type": "object"
                                      },
                                      "path": {
                                        "description": "The archive path.",
                                        "type": "string"
                                      },
                                      "region": {
                                        "description": "The region where the archive will be stored.",
                                        "type": "string"
                                      },
                                      "storage_account": {
                                        "description": "The associated storage account.",
                                        "example": "account-name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "azure",
                                        "description": "Type of the Azure archive destination.",
                                        "enum": [
                                          "azure"
                                        ],
                                        "example": "azure",
                                        "type": "string",
                                        "x-enum-varnames": [
                                          "AZURE"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "storage_account",
                                      "container",
                                      "integration",
                                      "type"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "description": "The GCS archive destination.",
                                    "properties": {
                                      "bucket": {
                                        "description": "The bucket where the archive will be stored.",
                                        "example": "bucket-name",
                                        "type": "string"
                                      },
                                      "integration": {
                                        "description": "The GCS archive's integration destination.",
                                        "properties": {
                                          "client_email": {
                                            "description": "A client email.",
                                            "example": "youremail@example.com",
                                            "type": "string"
                                          },
                                          "project_id": {
                                            "description": "A project ID.",
                                            "example": "project-id",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "project_id",
                                          "client_email"
                                        ],
                                        "type": "object"
                                      },
                                      "path": {
                                        "description": "The archive path.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "gcs",
                                        "description": "Type of the GCS archive destination.",
                                        "enum": [
                                          "gcs"
                                        ],
                                        "example": "gcs",
                                        "type": "string",
                                        "x-enum-varnames": [
                                          "GCS"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "bucket",
                                      "integration",
                                      "type"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "description": "The S3 archive destination.",
                                    "properties": {
                                      "bucket": {
                                        "description": "The bucket where the archive will be stored.",
                                        "example": "bucket-name",
                                        "type": "string"
                                      },
                                      "integration": {
                                        "description": "The S3 Archive's integration destination.",
                                        "properties": {
                                          "account_id": {
                                            "description": "The account ID for the integration.",
                                            "example": "123456789012",
                                            "type": "string"
                                          },
                                          "role_name": {
                                            "description": "The path of the integration.",
                                            "example": "role-name",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "role_name",
                                          "account_id"
                                        ],
                                        "type": "object"
                                      },
                                      "path": {
                                        "description": "The archive path.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "s3",
                                        "description": "Type of the S3 archive destination.",
                                        "enum": [
                                          "s3"
                                        ],
                                        "example": "s3",
                                        "type": "string",
                                        "x-enum-varnames": [
                                          "S3"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "bucket",
                                      "integration",
                                      "type"
                                    ],
                                    "type": "object"
                                  }
                                ],
                                "required": [
                                  "type",
                                  "integration"
                                ],
                                "type": "object"
                              },
                              "name": {
                                "description": "The archive name.",
                                "example": "Nginx Archive",
                                "type": "string"
                              },
                              "query": {
                                "description": "The archive query/filter. Logs matching this query are included in the archive.",
                                "example": "source:nginx",
                                "type": "string"
                              },
                              "state": {
                                "description": "The state of the archive.",
                                "enum": [
                                  "UNKNOWN",
                                  "WORKING",
                                  "FAILING",
                                  "WORKING_AUTH_LEGACY"
                                ],
                                "example": "WORKING",
                                "type": "string",
                                "x-enum-varnames": [
                                  "UNKNOWN",
                                  "WORKING",
                                  "FAILING",
                                  "WORKING_AUTH_LEGACY"
                                ]
                              }
                            },
                            "required": [
                              "name",
                              "query",
                              "destination"
                            ],
                            "type": "object"
                          },
                          "id": {
                            "description": "The archive ID.",
                            "example": "a2zcMylnM4OCHpYusxIi3g",
                            "readOnly": true,
                            "type": "string"
                          },
                          "type": {
                            "default": "archives",
                            "description": "The type of the resource. The value should always be archives.",
                            "example": "archives",
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          }
        },
        "summary": "Get all archives",
        "tags": [
          "Logs Archives"
        ]
      },
      "post": {
        "description": "Create an archive in your organization.",
        "operationId": "CreateLogsArchive",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The logs archive.",
                "properties": {
                  "data": {
                    "description": "The definition of an archive.",
                    "properties": {
                      "attributes": {
                        "description": "The attributes associated with the archive.",
                        "properties": {
                          "destination": {
                            "description": "An archive's destination.",
                            "oneOf": [
                              {
                                "description": "The Azure archive destination.",
                                "properties": {
                                  "container": {
                                    "description": "The container where the archive will be stored.",
                                    "example": "container-name",
                                    "type": "string"
                                  },
                                  "integration": {
                                    "description": "The Azure archive's integration destination.",
                                    "properties": {
                                      "client_id": {
                                        "description": "A client ID.",
                                        "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                                        "type": "string"
                                      },
                                      "tenant_id": {
                                        "description": "A tenant ID.",
                                        "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "tenant_id",
                                      "client_id"
                                    ],
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "The archive path.",
                                    "type": "string"
                                  },
                                  "region": {
                                    "description": "The region where the archive will be stored.",
                                    "type": "string"
                                  },
                                  "storage_account": {
                                    "description": "The associated storage account.",
                                    "example": "account-name",
                                    "type": "string"
                                  },
                                  "type": {
                                    "default": "azure",
                                    "description": "Type of the Azure archive destination.",
                                    "enum": [
                                      "azure"
                                    ],
                                    "example": "azure",
                                    "type": "string",
                                    "x-enum-varnames": [
                                      "AZURE"
                                    ]
                                  }
                                },
                                "required": [
                                  "storage_account",
                                  "container",
                                  "integration",
                                  "type"
                                ],
                                "type": "object"
                              },
                              {
                                "description": "The GCS archive destination.",
                                "properties": {
                                  "bucket": {
                                    "description": "The bucket where the archive will be stored.",
                                    "example": "bucket-name",
                                    "type": "string"
                                  },
                                  "integration": {
                                    "description": "The GCS archive's integration destination.",
                                    "properties": {
                                      "client_email": {
                                        "description": "A client email.",
                                        "example": "youremail@example.com",
                                        "type": "string"
                                      },
                                      "project_id": {
                                        "description": "A project ID.",
                                        "example": "project-id",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "project_id",
                                      "client_email"
                                    ],
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "The archive path.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "default": "gcs",
                                    "description": "Type of the GCS archive destination.",
                                    "enum": [
                                      "gcs"
                                    ],
                                    "example": "gcs",
                                    "type": "string",
                                    "x-enum-varnames": [
                                      "GCS"
                                    ]
                                  }
                                },
                                "required": [
                                  "bucket",
                                  "integration",
                                  "type"
                                ],
                                "type": "object"
                              },
                              {
                                "description": "The S3 archive destination.",
                                "properties": {
                                  "bucket": {
                                    "description": "The bucket where the archive will be stored.",
                                    "example": "bucket-name",
                                    "type": "string"
                                  },
                                  "integration": {
                                    "description": "The S3 Archive's integration destination.",
                                    "properties": {
                                      "account_id": {
                                        "description": "The account ID for the integration.",
                                        "example": "123456789012",
                                        "type": "string"
                                      },
                                      "role_name": {
                                        "description": "The path of the integration.",
                                        "example": "role-name",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "role_name",
                                      "account_id"
                                    ],
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "The archive path.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "default": "s3",
                                    "description": "Type of the S3 archive destination.",
                                    "enum": [
                                      "s3"
                                    ],
                                    "example": "s3",
                                    "type": "string",
                                    "x-enum-varnames": [
                                      "S3"
                                    ]
                                  }
                                },
                                "required": [
                                  "bucket",
                                  "integration",
                                  "type"
                                ],
                                "type": "object"
                              }
                            ],
                            "required": [
                              "type",
                              "integration"
                            ],
                            "type": "object"
                          },
                          "name": {
                            "description": "The archive name.",
                            "example": "Nginx Archive",
                            "type": "string"
                          },
                          "query": {
                            "description": "The archive query/filter. Logs matching this query are included in the archive.",
                            "example": "source:nginx",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "query",
                          "destination"
                        ],
                        "type": "object"
                      },
                      "type": {
                        "default": "archives",
                        "description": "The type of the resource. The value should always be archives.",
                        "example": "archives",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "The definition of the new archive.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "The logs archive.",
                  "properties": {
                    "data": {
                      "description": "The definition of an archive.",
                      "properties": {
                        "attributes": {
                          "description": "The attributes associated with the archive.",
                          "properties": {
                            "destination": {
                              "description": "An archive's destination.",
                              "nullable": true,
                              "oneOf": [
                                {
                                  "description": "The Azure archive destination.",
                                  "properties": {
                                    "container": {
                                      "description": "The container where the archive will be stored.",
                                      "example": "container-name",
                                      "type": "string"
                                    },
                                    "integration": {
                                      "description": "The Azure archive's integration destination.",
                                      "properties": {
                                        "client_id": {
                                          "description": "A client ID.",
                                          "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                                          "type": "string"
                                        },
                                        "tenant_id": {
                                          "description": "A tenant ID.",
                                          "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "tenant_id",
                                        "client_id"
                                      ],
                                      "type": "object"
                                    },
                                    "path": {
                                      "description": "The archive path.",
                                      "type": "string"
                                    },
                                    "region": {
                                      "description": "The region where the archive will be stored.",
                                      "type": "string"
                                    },
                                    "storage_account": {
                                      "description": "The associated storage account.",
                                      "example": "account-name",
                                      "type": "string"
                                    },
                                    "type": {
                                      "default": "azure",
                                      "description": "Type of the Azure archive destination.",
                                      "enum": [
                                        "azure"
                                      ],
                                      "example": "azure",
                                      "type": "string",
                                      "x-enum-varnames": [
                                        "AZURE"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "storage_account",
                                    "container",
                                    "integration",
                                    "type"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "description": "The GCS archive destination.",
                                  "properties": {
                                    "bucket": {
                                      "description": "The bucket where the archive will be stored.",
                                      "example": "bucket-name",
                                      "type": "string"
                                    },
                                    "integration": {
                                      "description": "The GCS archive's integration destination.",
                                      "properties": {
                                        "client_email": {
                                          "description": "A client email.",
                                          "example": "youremail@example.com",
                                          "type": "string"
                                        },
                                        "project_id": {
                                          "description": "A project ID.",
                                          "example": "project-id",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "project_id",
                                        "client_email"
                                      ],
                                      "type": "object"
                                    },
                                    "path": {
                                      "description": "The archive path.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "default": "gcs",
                                      "description": "Type of the GCS archive destination.",
                                      "enum": [
                                        "gcs"
                                      ],
                                      "example": "gcs",
                                      "type": "string",
                                      "x-enum-varnames": [
                                        "GCS"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "bucket",
                                    "integration",
                                    "type"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "description": "The S3 archive destination.",
                                  "properties": {
                                    "bucket": {
                                      "description": "The bucket where the archive will be stored.",
                                      "example": "bucket-name",
                                      "type": "string"
                                    },
                                    "integration": {
                                      "description": "The S3 Archive's integration destination.",
                                      "properties": {
                                        "account_id": {
                                          "description": "The account ID for the integration.",
                                          "example": "123456789012",
                                          "type": "string"
                                        },
                                        "role_name": {
                                          "description": "The path of the integration.",
                                          "example": "role-name",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "role_name",
                                        "account_id"
                                      ],
                                      "type": "object"
                                    },
                                    "path": {
                                      "description": "The archive path.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "default": "s3",
                                      "description": "Type of the S3 archive destination.",
                                      "enum": [
                                        "s3"
                                      ],
                                      "example": "s3",
                                      "type": "string",
                                      "x-enum-varnames": [
                                        "S3"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "bucket",
                                    "integration",
                                    "type"
                                  ],
                                  "type": "object"
                                }
                              ],
                              "required": [
                                "type",
                                "integration"
                              ],
                              "type": "object"
                            },
                            "name": {
                              "description": "The archive name.",
                              "example": "Nginx Archive",
                              "type": "string"
                            },
                            "query": {
                              "description": "The archive query/filter. Logs matching this query are included in the archive.",
                              "example": "source:nginx",
                              "type": "string"
                            },
                            "state": {
                              "description": "The state of the archive.",
                              "enum": [
                                "UNKNOWN",
                                "WORKING",
                                "FAILING",
                                "WORKING_AUTH_LEGACY"
                              ],
                              "example": "WORKING",
                              "type": "string",
                              "x-enum-varnames": [
                                "UNKNOWN",
                                "WORKING",
                                "FAILING",
                                "WORKING_AUTH_LEGACY"
                              ]
                            }
                          },
                          "required": [
                            "name",
                            "query",
                            "destination"
                          ],
                          "type": "object"
                        },
                        "id": {
                          "description": "The archive ID.",
                          "example": "a2zcMylnM4OCHpYusxIi3g",
                          "readOnly": true,
                          "type": "string"
                        },
                        "type": {
                          "default": "archives",
                          "description": "The type of the resource. The value should always be archives.",
                          "example": "archives",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          }
        },
        "summary": "Create an archive",
        "tags": [
          "Logs Archives"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v2/logs/config/archives/{archive_id}": {
      "delete": {
        "description": "Delete a given archive from your organization.",
        "operationId": "DeleteLogsArchive",
        "parameters": [
          {
            "description": "The ID of the archive.",
            "in": "path",
            "name": "archive_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete an archive",
        "tags": [
          "Logs Archives"
        ]
      },
      "get": {
        "description": "Get a specific archive from your organization.",
        "operationId": "GetLogsArchive",
        "parameters": [
          {
            "description": "The ID of the archive.",
            "in": "path",
            "name": "archive_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "The logs archive.",
                  "properties": {
                    "data": {
                      "description": "The definition of an archive.",
                      "properties": {
                        "attributes": {
                          "description": "The attributes associated with the archive.",
                          "properties": {
                            "destination": {
                              "description": "An archive's destination.",
                              "nullable": true,
                              "oneOf": [
                                {
                                  "description": "The Azure archive destination.",
                                  "properties": {
                                    "container": {
                                      "description": "The container where the archive will be stored.",
                                      "example": "container-name",
                                      "type": "string"
                                    },
                                    "integration": {
                                      "description": "The Azure archive's integration destination.",
                                      "properties": {
                                        "client_id": {
                                          "description": "A client ID.",
                                          "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                                          "type": "string"
                                        },
                                        "tenant_id": {
                                          "description": "A tenant ID.",
                                          "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "tenant_id",
                                        "client_id"
                                      ],
                                      "type": "object"
                                    },
                                    "path": {
                                      "description": "The archive path.",
                                      "type": "string"
                                    },
                                    "region": {
                                      "description": "The region where the archive will be stored.",
                                      "type": "string"
                                    },
                                    "storage_account": {
                                      "description": "The associated storage account.",
                                      "example": "account-name",
                                      "type": "string"
                                    },
                                    "type": {
                                      "default": "azure",
                                      "description": "Type of the Azure archive destination.",
                                      "enum": [
                                        "azure"
                                      ],
                                      "example": "azure",
                                      "type": "string",
                                      "x-enum-varnames": [
                                        "AZURE"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "storage_account",
                                    "container",
                                    "integration",
                                    "type"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "description": "The GCS archive destination.",
                                  "properties": {
                                    "bucket": {
                                      "description": "The bucket where the archive will be stored.",
                                      "example": "bucket-name",
                                      "type": "string"
                                    },
                                    "integration": {
                                      "description": "The GCS archive's integration destination.",
                                      "properties": {
                                        "client_email": {
                                          "description": "A client email.",
                                          "example": "youremail@example.com",
                                          "type": "string"
                                        },
                                        "project_id": {
                                          "description": "A project ID.",
                                          "example": "project-id",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "project_id",
                                        "client_email"
                                      ],
                                      "type": "object"
                                    },
                                    "path": {
                                      "description": "The archive path.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "default": "gcs",
                                      "description": "Type of the GCS archive destination.",
                                      "enum": [
                                        "gcs"
                                      ],
                                      "example": "gcs",
                                      "type": "string",
                                      "x-enum-varnames": [
                                        "GCS"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "bucket",
                                    "integration",
                                    "type"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "description": "The S3 archive destination.",
                                  "properties": {
                                    "bucket": {
                                      "description": "The bucket where the archive will be stored.",
                                      "example": "bucket-name",
                                      "type": "string"
                                    },
                                    "integration": {
                                      "description": "The S3 Archive's integration destination.",
                                      "properties": {
                                        "account_id": {
                                          "description": "The account ID for the integration.",
                                          "example": "123456789012",
                                          "type": "string"
                                        },
                                        "role_name": {
                                          "description": "The path of the integration.",
                                          "example": "role-name",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "role_name",
                                        "account_id"
                                      ],
                                      "type": "object"
                                    },
                                    "path": {
                                      "description": "The archive path.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "default": "s3",
                                      "description": "Type of the S3 archive destination.",
                                      "enum": [
                                        "s3"
                                      ],
                                      "example": "s3",
                                      "type": "string",
                                      "x-enum-varnames": [
                                        "S3"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "bucket",
                                    "integration",
                                    "type"
                                  ],
                                  "type": "object"
                                }
                              ],
                              "required": [
                                "type",
                                "integration"
                              ],
                              "type": "object"
                            },
                            "name": {
                              "description": "The archive name.",
                              "example": "Nginx Archive",
                              "type": "string"
                            },
                            "query": {
                              "description": "The archive query/filter. Logs matching this query are included in the archive.",
                              "example": "source:nginx",
                              "type": "string"
                            },
                            "state": {
                              "description": "The state of the archive.",
                              "enum": [
                                "UNKNOWN",
                                "WORKING",
                                "FAILING",
                                "WORKING_AUTH_LEGACY"
                              ],
                              "example": "WORKING",
                              "type": "string",
                              "x-enum-varnames": [
                                "UNKNOWN",
                                "WORKING",
                                "FAILING",
                                "WORKING_AUTH_LEGACY"
                              ]
                            }
                          },
                          "required": [
                            "name",
                            "query",
                            "destination"
                          ],
                          "type": "object"
                        },
                        "id": {
                          "description": "The archive ID.",
                          "example": "a2zcMylnM4OCHpYusxIi3g",
                          "readOnly": true,
                          "type": "string"
                        },
                        "type": {
                          "default": "archives",
                          "description": "The type of the resource. The value should always be archives.",
                          "example": "archives",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get an archive",
        "tags": [
          "Logs Archives"
        ]
      },
      "put": {
        "description": "Update a given archive configuration.\n\n**Note**: Using this method updates your archive configuration by **replacing**\nyour current configuration with the new one sent to your Datadog organization.",
        "operationId": "UpdateLogsArchive",
        "parameters": [
          {
            "description": "The ID of the archive.",
            "in": "path",
            "name": "archive_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The logs archive.",
                "properties": {
                  "data": {
                    "description": "The definition of an archive.",
                    "properties": {
                      "attributes": {
                        "description": "The attributes associated with the archive.",
                        "properties": {
                          "destination": {
                            "description": "An archive's destination.",
                            "oneOf": [
                              {
                                "description": "The Azure archive destination.",
                                "properties": {
                                  "container": {
                                    "description": "The container where the archive will be stored.",
                                    "example": "container-name",
                                    "type": "string"
                                  },
                                  "integration": {
                                    "description": "The Azure archive's integration destination.",
                                    "properties": {
                                      "client_id": {
                                        "description": "A client ID.",
                                        "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                                        "type": "string"
                                      },
                                      "tenant_id": {
                                        "description": "A tenant ID.",
                                        "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "tenant_id",
                                      "client_id"
                                    ],
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "The archive path.",
                                    "type": "string"
                                  },
                                  "region": {
                                    "description": "The region where the archive will be stored.",
                                    "type": "string"
                                  },
                                  "storage_account": {
                                    "description": "The associated storage account.",
                                    "example": "account-name",
                                    "type": "string"
                                  },
                                  "type": {
                                    "default": "azure",
                                    "description": "Type of the Azure archive destination.",
                                    "enum": [
                                      "azure"
                                    ],
                                    "example": "azure",
                                    "type": "string",
                                    "x-enum-varnames": [
                                      "AZURE"
                                    ]
                                  }
                                },
                                "required": [
                                  "storage_account",
                                  "container",
                                  "integration",
                                  "type"
                                ],
                                "type": "object"
                              },
                              {
                                "description": "The GCS archive destination.",
                                "properties": {
                                  "bucket": {
                                    "description": "The bucket where the archive will be stored.",
                                    "example": "bucket-name",
                                    "type": "string"
                                  },
                                  "integration": {
                                    "description": "The GCS archive's integration destination.",
                                    "properties": {
                                      "client_email": {
                                        "description": "A client email.",
                                        "example": "youremail@example.com",
                                        "type": "string"
                                      },
                                      "project_id": {
                                        "description": "A project ID.",
                                        "example": "project-id",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "project_id",
                                      "client_email"
                                    ],
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "The archive path.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "default": "gcs",
                                    "description": "Type of the GCS archive destination.",
                                    "enum": [
                                      "gcs"
                                    ],
                                    "example": "gcs",
                                    "type": "string",
                                    "x-enum-varnames": [
                                      "GCS"
                                    ]
                                  }
                                },
                                "required": [
                                  "bucket",
                                  "integration",
                                  "type"
                                ],
                                "type": "object"
                              },
                              {
                                "description": "The S3 archive destination.",
                                "properties": {
                                  "bucket": {
                                    "description": "The bucket where the archive will be stored.",
                                    "example": "bucket-name",
                                    "type": "string"
                                  },
                                  "integration": {
                                    "description": "The S3 Archive's integration destination.",
                                    "properties": {
                                      "account_id": {
                                        "description": "The account ID for the integration.",
                                        "example": "123456789012",
                                        "type": "string"
                                      },
                                      "role_name": {
                                        "description": "The path of the integration.",
                                        "example": "role-name",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "role_name",
                                      "account_id"
                                    ],
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "The archive path.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "default": "s3",
                                    "description": "Type of the S3 archive destination.",
                                    "enum": [
                                      "s3"
                                    ],
                                    "example": "s3",
                                    "type": "string",
                                    "x-enum-varnames": [
                                      "S3"
                                    ]
                                  }
                                },
                                "required": [
                                  "bucket",
                                  "integration",
                                  "type"
                                ],
                                "type": "object"
                              }
                            ],
                            "required": [
                              "type",
                              "integration"
                            ],
                            "type": "object"
                          },
                          "name": {
                            "description": "The archive name.",
                            "example": "Nginx Archive",
                            "type": "string"
                          },
                          "query": {
                            "description": "The archive query/filter. Logs matching this query are included in the archive.",
                            "example": "source:nginx",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "query",
                          "destination"
                        ],
                        "type": "object"
                      },
                      "type": {
                        "default": "archives",
                        "description": "The type of the resource. The value should always be archives.",
                        "example": "archives",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "New definition of the archive.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "The logs archive.",
                  "properties": {
                    "data": {
                      "description": "The definition of an archive.",
                      "properties": {
                        "attributes": {
                          "description": "The attributes associated with the archive.",
                          "properties": {
                            "destination": {
                              "description": "An archive's destination.",
                              "nullable": true,
                              "oneOf": [
                                {
                                  "description": "The Azure archive destination.",
                                  "properties": {
                                    "container": {
                                      "description": "The container where the archive will be stored.",
                                      "example": "container-name",
                                      "type": "string"
                                    },
                                    "integration": {
                                      "description": "The Azure archive's integration destination.",
                                      "properties": {
                                        "client_id": {
                                          "description": "A client ID.",
                                          "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                                          "type": "string"
                                        },
                                        "tenant_id": {
                                          "description": "A tenant ID.",
                                          "example": "aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "tenant_id",
                                        "client_id"
                                      ],
                                      "type": "object"
                                    },
                                    "path": {
                                      "description": "The archive path.",
                                      "type": "string"
                                    },
                                    "region": {
                                      "description": "The region where the archive will be stored.",
                                      "type": "string"
                                    },
                                    "storage_account": {
                                      "description": "The associated storage account.",
                                      "example": "account-name",
                                      "type": "string"
                                    },
                                    "type": {
                                      "default": "azure",
                                      "description": "Type of the Azure archive destination.",
                                      "enum": [
                                        "azure"
                                      ],
                                      "example": "azure",
                                      "type": "string",
                                      "x-enum-varnames": [
                                        "AZURE"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "storage_account",
                                    "container",
                                    "integration",
                                    "type"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "description": "The GCS archive destination.",
                                  "properties": {
                                    "bucket": {
                                      "description": "The bucket where the archive will be stored.",
                                      "example": "bucket-name",
                                      "type": "string"
                                    },
                                    "integration": {
                                      "description": "The GCS archive's integration destination.",
                                      "properties": {
                                        "client_email": {
                                          "description": "A client email.",
                                          "example": "youremail@example.com",
                                          "type": "string"
                                        },
                                        "project_id": {
                                          "description": "A project ID.",
                                          "example": "project-id",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "project_id",
                                        "client_email"
                                      ],
                                      "type": "object"
                                    },
                                    "path": {
                                      "description": "The archive path.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "default": "gcs",
                                      "description": "Type of the GCS archive destination.",
                                      "enum": [
                                        "gcs"
                                      ],
                                      "example": "gcs",
                                      "type": "string",
                                      "x-enum-varnames": [
                                        "GCS"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "bucket",
                                    "integration",
                                    "type"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "description": "The S3 archive destination.",
                                  "properties": {
                                    "bucket": {
                                      "description": "The bucket where the archive will be stored.",
                                      "example": "bucket-name",
                                      "type": "string"
                                    },
                                    "integration": {
                                      "description": "The S3 Archive's integration destination.",
                                      "properties": {
                                        "account_id": {
                                          "description": "The account ID for the integration.",
                                          "example": "123456789012",
                                          "type": "string"
                                        },
                                        "role_name": {
                                          "description": "The path of the integration.",
                                          "example": "role-name",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "role_name",
                                        "account_id"
                                      ],
                                      "type": "object"
                                    },
                                    "path": {
                                      "description": "The archive path.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "default": "s3",
                                      "description": "Type of the S3 archive destination.",
                                      "enum": [
                                        "s3"
                                      ],
                                      "example": "s3",
                                      "type": "string",
                                      "x-enum-varnames": [
                                        "S3"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "bucket",
                                    "integration",
                                    "type"
                                  ],
                                  "type": "object"
                                }
                              ],
                              "required": [
                                "type",
                                "integration"
                              ],
                              "type": "object"
                            },
                            "name": {
                              "description": "The archive name.",
                              "example": "Nginx Archive",
                              "type": "string"
                            },
                            "query": {
                              "description": "The archive query/filter. Logs matching this query are included in the archive.",
                              "example": "source:nginx",
                              "type": "string"
                            },
                            "state": {
                              "description": "The state of the archive.",
                              "enum": [
                                "UNKNOWN",
                                "WORKING",
                                "FAILING",
                                "WORKING_AUTH_LEGACY"
                              ],
                              "example": "WORKING",
                              "type": "string",
                              "x-enum-varnames": [
                                "UNKNOWN",
                                "WORKING",
                                "FAILING",
                                "WORKING_AUTH_LEGACY"
                              ]
                            }
                          },
                          "required": [
                            "name",
                            "query",
                            "destination"
                          ],
                          "type": "object"
                        },
                        "id": {
                          "description": "The archive ID.",
                          "example": "a2zcMylnM4OCHpYusxIi3g",
                          "readOnly": true,
                          "type": "string"
                        },
                        "type": {
                          "default": "archives",
                          "description": "The type of the resource. The value should always be archives.",
                          "example": "archives",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Update an archive",
        "tags": [
          "Logs Archives"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v2/logs/config/archives/{archive_id}/readers": {
      "delete": {
        "description": "Removes a role from an archive. ([Roles API](https://docs.datadoghq.com/api/v2/roles/))",
        "operationId": "RemoveRoleFromArchive",
        "parameters": [
          {
            "description": "The ID of the archive.",
            "in": "path",
            "name": "archive_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Relationship to role.",
                "properties": {
                  "data": {
                    "description": "Relationship to role object.",
                    "properties": {
                      "id": {
                        "description": "ID of the role.",
                        "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                        "type": "string"
                      },
                      "type": {
                        "default": "roles",
                        "description": "Roles type.",
                        "enum": [
                          "roles"
                        ],
                        "example": "roles",
                        "type": "string",
                        "x-enum-varnames": [
                          "ROLES"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Revoke role from an archive",
        "tags": [
          "Logs Archives"
        ],
        "x-codegen-request-body-name": "body",
        "x-unstable": "**Note**: This endpoint is in public beta.\nIf you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/)."
      },
      "get": {
        "description": "Returns all read roles a given archive is restricted to.",
        "operationId": "ListArchiveReadRoles",
        "parameters": [
          {
            "description": "The ID of the archive.",
            "in": "path",
            "name": "archive_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about multiple roles.",
                  "properties": {
                    "data": {
                      "description": "Array of returned roles.",
                      "items": {
                        "description": "Role object returned by the API.",
                        "properties": {
                          "attributes": {
                            "description": "Attributes of the role.",
                            "properties": {
                              "created_at": {
                                "description": "Creation time of the role.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string"
                              },
                              "modified_at": {
                                "description": "Time of last role modification.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the role.",
                                "type": "string"
                              },
                              "user_count": {
                                "description": "Number of users with that role.",
                                "format": "int64",
                                "readOnly": true,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "ID of the role.",
                            "type": "string"
                          },
                          "relationships": {
                            "description": "Relationships of the role object returned by the API.",
                            "properties": {
                              "permissions": {
                                "description": "Relationship to multiple permissions objects.",
                                "properties": {
                                  "data": {
                                    "description": "Relationships to permission objects.",
                                    "items": {
                                      "description": "Relationship to permission object.",
                                      "properties": {
                                        "id": {
                                          "description": "ID of the permission.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "permissions",
                                          "description": "Permissions resource type.",
                                          "enum": [
                                            "permissions"
                                          ],
                                          "example": "permissions",
                                          "type": "string",
                                          "x-enum-varnames": [
                                            "PERMISSIONS"
                                          ]
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "default": "roles",
                            "description": "Roles type.",
                            "enum": [
                              "roles"
                            ],
                            "example": "roles",
                            "type": "string",
                            "x-enum-varnames": [
                              "ROLES"
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "description": "Object describing meta attributes of response.",
                      "properties": {
                        "page": {
                          "description": "Pagination object.",
                          "properties": {
                            "total_count": {
                              "description": "Total count.",
                              "format": "int64",
                              "type": "integer"
                            },
                            "total_filtered_count": {
                              "description": "Total count of elements matched by the filter.",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "List read roles for an archive",
        "tags": [
          "Logs Archives"
        ],
        "x-codegen-request-body-name": "body",
        "x-unstable": "**Note**: This endpoint is in public beta.\nIf you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/)."
      },
      "post": {
        "description": "Adds a read role to an archive. ([Roles API](https://docs.datadoghq.com/api/v2/roles/))",
        "operationId": "AddReadRoleToArchive",
        "parameters": [
          {
            "description": "The ID of the archive.",
            "in": "path",
            "name": "archive_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Relationship to role.",
                "properties": {
                  "data": {
                    "description": "Relationship to role object.",
                    "properties": {
                      "id": {
                        "description": "ID of the role.",
                        "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                        "type": "string"
                      },
                      "type": {
                        "default": "roles",
                        "description": "Roles type.",
                        "enum": [
                          "roles"
                        ],
                        "example": "roles",
                        "type": "string",
                        "x-enum-varnames": [
                          "ROLES"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Grant role to an archive",
        "tags": [
          "Logs Archives"
        ],
        "x-codegen-request-body-name": "body",
        "x-unstable": "**Note**: This endpoint is in public beta.\nIf you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/)."
      }
    },
    "/api/v2/logs/config/restriction_queries": {
      "get": {
        "description": "Returns all restriction queries, including their names and IDs.",
        "operationId": "ListRestrictionQueries",
        "parameters": [
          {
            "description": "Size for a given page.",
            "in": "query",
            "name": "page[size]",
            "required": false,
            "schema": {
              "default": 10,
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Specific page number to return.",
            "in": "query",
            "name": "page[number]",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about multiple restriction queries.",
                  "properties": {
                    "data": {
                      "description": "Array of returned restriction queries.",
                      "items": {
                        "description": "Restriction query object returned by the API.",
                        "properties": {
                          "attributes": {
                            "description": "Attributes of the restriction query.",
                            "properties": {
                              "created_at": {
                                "description": "Creation time of the restriction query.",
                                "example": "2020-03-17T21:06:44Z",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string"
                              },
                              "modified_at": {
                                "description": "Time of last restriction query modification.",
                                "example": "2020-03-17T21:15:15Z",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string"
                              },
                              "restriction_query": {
                                "description": "The query that defines the restriction. Only the content matching the query can be returned.",
                                "example": "env:sandbox",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "ID of the restriction query.",
                            "example": "79a0e60a-644a-11ea-ad29-43329f7f58b5",
                            "type": "string"
                          },
                          "type": {
                            "default": "logs_restriction_queries",
                            "description": "Restriction queries type.",
                            "example": "logs_restriction_queries",
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "content": {
              "applcation/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "summary": "List restriction queries",
        "tags": [
          "Logs Restriction Queries"
        ],
        "x-unstable": "**Note**: This endpoint is in public beta.\nIf you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/)."
      },
      "post": {
        "description": "Create a new restriction query for your organization.",
        "operationId": "CreateRestrictionQuery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Create a restriction query.",
                "properties": {
                  "data": {
                    "description": "Data related to the creation of a restriction query.",
                    "properties": {
                      "attributes": {
                        "description": "Attributes of the created restriction query.",
                        "properties": {
                          "restriction_query": {
                            "description": "The restriction query.",
                            "example": "env:sandbox",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": {
                        "default": "logs_restriction_queries",
                        "description": "Restriction query resource type.",
                        "enum": [
                          "logs_restriction_queries"
                        ],
                        "example": "logs_restriction_queries",
                        "type": "string",
                        "x-enum-varnames": [
                          "LOGS_RESTRICTION_QUERIES"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about a single restriction query.",
                  "properties": {
                    "data": {
                      "description": "Restriction query object returned by the API.",
                      "properties": {
                        "attributes": {
                          "description": "Attributes of the restriction query.",
                          "properties": {
                            "created_at": {
                              "description": "Creation time of the restriction query.",
                              "example": "2020-03-17T21:06:44Z",
                              "format": "date-time",
                              "readOnly": true,
                              "type": "string"
                            },
                            "modified_at": {
                              "description": "Time of last restriction query modification.",
                              "example": "2020-03-17T21:15:15Z",
                              "format": "date-time",
                              "readOnly": true,
                              "type": "string"
                            },
                            "restriction_query": {
                              "description": "The query that defines the restriction. Only the content matching the query can be returned.",
                              "example": "env:sandbox",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "ID of the restriction query.",
                          "example": "79a0e60a-644a-11ea-ad29-43329f7f58b5",
                          "type": "string"
                        },
                        "type": {
                          "default": "logs_restriction_queries",
                          "description": "Restriction queries type.",
                          "example": "logs_restriction_queries",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "summary": "Create a restriction query",
        "tags": [
          "Logs Restriction Queries"
        ],
        "x-codegen-request-body-name": "body",
        "x-unstable": "**Note**: This endpoint is in public beta.\nIf you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/)."
      }
    },
    "/api/v2/logs/config/restriction_queries/role/{role_id}": {
      "get": {
        "description": "Get restriction query for a given role.",
        "operationId": "GetRoleRestrictionQuery",
        "parameters": [
          {
            "description": "The ID of the role.",
            "in": "path",
            "name": "role_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about multiple restriction queries.",
                  "properties": {
                    "data": {
                      "description": "Array of returned restriction queries.",
                      "items": {
                        "description": "Restriction query object returned by the API.",
                        "properties": {
                          "attributes": {
                            "description": "Attributes of the restriction query.",
                            "properties": {
                              "created_at": {
                                "description": "Creation time of the restriction query.",
                                "example": "2020-03-17T21:06:44Z",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string"
                              },
                              "modified_at": {
                                "description": "Time of last restriction query modification.",
                                "example": "2020-03-17T21:15:15Z",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string"
                              },
                              "restriction_query": {
                                "description": "The query that defines the restriction. Only the content matching the query can be returned.",
                                "example": "env:sandbox",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "ID of the restriction query.",
                            "example": "79a0e60a-644a-11ea-ad29-43329f7f58b5",
                            "type": "string"
                          },
                          "type": {
                            "default": "logs_restriction_queries",
                            "description": "Restriction queries type.",
                            "example": "logs_restriction_queries",
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "summary": "Get restriction query for a given role",
        "tags": [
          "Logs Restriction Queries"
        ],
        "x-unstable": "**Note**: This endpoint is in public beta.\nIf you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/)."
      }
    },
    "/api/v2/logs/config/restriction_queries/user/{user_id}": {
      "get": {
        "description": "Get all restriction queries for a given user.",
        "operationId": "ListUserRestrictionQueries",
        "parameters": [
          {
            "description": "The ID of the user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about multiple restriction queries.",
                  "properties": {
                    "data": {
                      "description": "Array of returned restriction queries.",
                      "items": {
                        "description": "Restriction query object returned by the API.",
                        "properties": {
                          "attributes": {
                            "description": "Attributes of the restriction query.",
                            "properties": {
                              "created_at": {
                                "description": "Creation time of the restriction query.",
                                "example": "2020-03-17T21:06:44Z",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string"
                              },
                              "modified_at": {
                                "description": "Time of last restriction query modification.",
                                "example": "2020-03-17T21:15:15Z",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string"
                              },
                              "restriction_query": {
                                "description": "The query that defines the restriction. Only the content matching the query can be returned.",
                                "example": "env:sandbox",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "ID of the restriction query.",
                            "example": "79a0e60a-644a-11ea-ad29-43329f7f58b5",
                            "type": "string"
                          },
                          "type": {
                            "default": "logs_restriction_queries",
                            "description": "Restriction queries type.",
                            "example": "logs_restriction_queries",
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "summary": "Get all restriction queries for a given user",
        "tags": [
          "Logs Restriction Queries"
        ],
        "x-unstable": "**Note**: This endpoint is in public beta.\nIf you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/)."
      }
    },
    "/api/v2/logs/config/restriction_queries/{restriction_query_id}": {
      "delete": {
        "description": "Deletes a restriction query.",
        "operationId": "DeleteRestrictionQuery",
        "parameters": [
          {
            "description": "The ID of the restriction query.",
            "in": "path",
            "name": "restriction_query_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete a restriction query",
        "tags": [
          "Logs Restriction Queries"
        ],
        "x-codegen-request-body-name": "body",
        "x-unstable": "**Note**: This endpoint is in public beta.\nIf you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/)."
      },
      "get": {
        "description": "Get a restriction query in the organization specified by the restriction query's `restriction_query_id`.",
        "operationId": "GetRestrictionQuery",
        "parameters": [
          {
            "description": "The ID of the restriction query.",
            "in": "path",
            "name": "restriction_query_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about a single restriction query.",
                  "properties": {
                    "data": {
                      "description": "Restriction query object returned by the API.",
                      "properties": {
                        "attributes": {
                          "description": "Attributes of the restriction query.",
                          "properties": {
                            "created_at": {
                              "description": "Creation time of the restriction query.",
                              "example": "2020-03-17T21:06:44Z",
                              "format": "date-time",
                              "readOnly": true,
                              "type": "string"
                            },
                            "modified_at": {
                              "description": "Time of last restriction query modification.",
                              "example": "2020-03-17T21:15:15Z",
                              "format": "date-time",
                              "readOnly": true,
                              "type": "string"
                            },
                            "restriction_query": {
                              "description": "The query that defines the restriction. Only the content matching the query can be returned.",
                              "example": "env:sandbox",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "ID of the restriction query.",
                          "example": "79a0e60a-644a-11ea-ad29-43329f7f58b5",
                          "type": "string"
                        },
                        "relationships": {
                          "description": "Relationships of the restriction query object.",
                          "properties": {
                            "roles": {
                              "description": "Relationship to roles.",
                              "properties": {
                                "data": {
                                  "description": "An array containing type and ID of a role.",
                                  "items": {
                                    "description": "Relationship to role object.",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the role.",
                                        "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "roles",
                                        "description": "Roles type.",
                                        "enum": [
                                          "roles"
                                        ],
                                        "example": "roles",
                                        "type": "string",
                                        "x-enum-varnames": [
                                          "ROLES"
                                        ]
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "default": "logs_restriction_queries",
                          "description": "Restriction query resource type.",
                          "enum": [
                            "logs_restriction_queries"
                          ],
                          "example": "logs_restriction_queries",
                          "type": "string",
                          "x-enum-varnames": [
                            "LOGS_RESTRICTION_QUERIES"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "included": {
                      "description": "Array of objects related to the restriction query.",
                      "items": {
                        "description": "An object related to a restriction query.",
                        "discriminator": {
                          "mapping": {
                            "roles": "#/components/schemas/RestrictionQueryRole"
                          },
                          "propertyName": "type"
                        },
                        "oneOf": [
                          {
                            "description": "Partial role object.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of the role for a restriction query.",
                                "properties": {
                                  "name": {
                                    "description": "The role name.",
                                    "example": "Datadog Admin Role",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the role.",
                                "example": "<ROLE_ID>",
                                "type": "string"
                              },
                              "type": {
                                "default": "roles",
                                "description": "Role resource type.",
                                "example": "roles",
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get a restriction query",
        "tags": [
          "Logs Restriction Queries"
        ],
        "x-codegen-request-body-name": "body",
        "x-unstable": "**Note**: This endpoint is in public beta.\nIf you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/)."
      },
      "patch": {
        "description": "Edit a restriction query.",
        "operationId": "UpdateRestrictionQuery",
        "parameters": [
          {
            "description": "The ID of the restriction query.",
            "in": "path",
            "name": "restriction_query_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Update a restriction query.",
                "properties": {
                  "data": {
                    "description": "Data related to the update of a restriction query.",
                    "properties": {
                      "attributes": {
                        "description": "Attributes of the edited restriction query.",
                        "properties": {
                          "restriction_query": {
                            "description": "The restriction query.",
                            "example": "env:sandbox",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": {
                        "default": "logs_restriction_queries",
                        "description": "Restriction query resource type.",
                        "enum": [
                          "logs_restriction_queries"
                        ],
                        "example": "logs_restriction_queries",
                        "type": "string",
                        "x-enum-varnames": [
                          "LOGS_RESTRICTION_QUERIES"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about a single restriction query.",
                  "properties": {
                    "data": {
                      "description": "Restriction query object returned by the API.",
                      "properties": {
                        "attributes": {
                          "description": "Attributes of the restriction query.",
                          "properties": {
                            "created_at": {
                              "description": "Creation time of the restriction query.",
                              "example": "2020-03-17T21:06:44Z",
                              "format": "date-time",
                              "readOnly": true,
                              "type": "string"
                            },
                            "modified_at": {
                              "description": "Time of last restriction query modification.",
                              "example": "2020-03-17T21:15:15Z",
                              "format": "date-time",
                              "readOnly": true,
                              "type": "string"
                            },
                            "restriction_query": {
                              "description": "The query that defines the restriction. Only the content matching the query can be returned.",
                              "example": "env:sandbox",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "ID of the restriction query.",
                          "example": "79a0e60a-644a-11ea-ad29-43329f7f58b5",
                          "type": "string"
                        },
                        "type": {
                          "default": "logs_restriction_queries",
                          "description": "Restriction queries type.",
                          "example": "logs_restriction_queries",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Update a restriction query",
        "tags": [
          "Logs Restriction Queries"
        ],
        "x-codegen-request-body-name": "body",
        "x-unstable": "**Note**: This endpoint is in public beta.\nIf you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/)."
      }
    },
    "/api/v2/logs/config/restriction_queries/{restriction_query_id}/roles": {
      "delete": {
        "description": "Removes a role from a restriction query.",
        "operationId": "RemoveRoleFromRestrictionQuery",
        "parameters": [
          {
            "description": "The ID of the restriction query.",
            "in": "path",
            "name": "restriction_query_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Relationship to role.",
                "properties": {
                  "data": {
                    "description": "Relationship to role object.",
                    "properties": {
                      "id": {
                        "description": "ID of the role.",
                        "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                        "type": "string"
                      },
                      "type": {
                        "default": "roles",
                        "description": "Roles type.",
                        "enum": [
                          "roles"
                        ],
                        "example": "roles",
                        "type": "string",
                        "x-enum-varnames": [
                          "ROLES"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Revoke role from a restriction query",
        "tags": [
          "Logs Restriction Queries"
        ],
        "x-codegen-request-body-name": "body",
        "x-unstable": "**Note**: This endpoint is in public beta.\nIf you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/)."
      },
      "get": {
        "description": "Returns all roles that have a given restriction query.",
        "operationId": "ListRestrictionQueryRoles",
        "parameters": [
          {
            "description": "The ID of the restriction query.",
            "in": "path",
            "name": "restriction_query_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Size for a given page.",
            "in": "query",
            "name": "page[size]",
            "required": false,
            "schema": {
              "default": 10,
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Specific page number to return.",
            "in": "query",
            "name": "page[number]",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about roles attached to a restriction query.",
                  "properties": {
                    "data": {
                      "description": "Array of roles.",
                      "items": {
                        "description": "Partial role object.",
                        "properties": {
                          "attributes": {
                            "description": "Attributes of the role for a restriction query.",
                            "properties": {
                              "name": {
                                "description": "The role name.",
                                "example": "Datadog Admin Role",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "ID of the role.",
                            "example": "<ROLE_ID>",
                            "type": "string"
                          },
                          "type": {
                            "default": "roles",
                            "description": "Role resource type.",
                            "example": "roles",
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "List roles for a restriction query",
        "tags": [
          "Logs Restriction Queries"
        ],
        "x-codegen-request-body-name": "body",
        "x-unstable": "**Note**: This endpoint is in public beta.\nIf you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/)."
      },
      "post": {
        "description": "Adds a role to a restriction query.",
        "operationId": "AddRoleToRestrictionQuery",
        "parameters": [
          {
            "description": "The ID of the restriction query.",
            "in": "path",
            "name": "restriction_query_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Relationship to role.",
                "properties": {
                  "data": {
                    "description": "Relationship to role object.",
                    "properties": {
                      "id": {
                        "description": "ID of the role.",
                        "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                        "type": "string"
                      },
                      "type": {
                        "default": "roles",
                        "description": "Roles type.",
                        "enum": [
                          "roles"
                        ],
                        "example": "roles",
                        "type": "string",
                        "x-enum-varnames": [
                          "ROLES"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Grant role to a restriction query",
        "tags": [
          "Logs Restriction Queries"
        ],
        "x-codegen-request-body-name": "body",
        "x-unstable": "**Note**: This endpoint is in public beta.\nIf you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/)."
      }
    },
    "/api/v2/permissions": {
      "get": {
        "description": "Returns a list of all permissions, including name, description, and ID.",
        "operationId": "ListPermissions",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Payload with API-returned permissions.",
                  "properties": {
                    "data": {
                      "description": "Array of permissions.",
                      "items": {
                        "description": "Permission object.",
                        "properties": {
                          "attributes": {
                            "description": "Attributes of a permission.",
                            "properties": {
                              "created": {
                                "description": "Creation time of the permission.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description of the permission.",
                                "type": "string"
                              },
                              "display_name": {
                                "description": "Displayed name for the permission.",
                                "type": "string"
                              },
                              "display_type": {
                                "description": "Display type.",
                                "type": "string"
                              },
                              "group_name": {
                                "description": "Name of the permission group.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the permission.",
                                "type": "string"
                              },
                              "restricted": {
                                "description": "Whether or not the permission is restricted.",
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "ID of the permission.",
                            "type": "string"
                          },
                          "type": {
                            "default": "permissions",
                            "description": "Permissions resource type.",
                            "enum": [
                              "permissions"
                            ],
                            "example": "permissions",
                            "type": "string",
                            "x-enum-varnames": [
                              "PERMISSIONS"
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "applcation/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "applcation/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "summary": "List permissions",
        "tags": [
          "Roles"
        ]
      }
    },
    "/api/v2/roles": {
      "get": {
        "description": "Returns all roles, including their names and IDs.",
        "operationId": "ListRoles",
        "parameters": [
          {
            "description": "Size for a given page.",
            "in": "query",
            "name": "page[size]",
            "required": false,
            "schema": {
              "default": 10,
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Specific page number to return.",
            "in": "query",
            "name": "page[number]",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Sort roles depending on the given field. Sort order is **ascending** by default.\nSort order is **descending** if the field is prefixed by a negative sign, for example:\n`sort=-name`.",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "default": "name",
              "description": "Sorting options for roles.",
              "enum": [
                "name",
                "-name",
                "modified_at",
                "-modified_at",
                "user_count",
                "-user_count"
              ],
              "type": "string",
              "x-enum-varnames": [
                "NAME_ASCENDING",
                "NAME_DESCENDING",
                "MODIFIED_AT_ASCENDING",
                "MODIFIED_AT_DESCENDING",
                "USER_COUNT_ASCENDING",
                "USER_COUNT_DESCENDING"
              ]
            }
          },
          {
            "description": "Filter all roles by the given string.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about multiple roles.",
                  "properties": {
                    "data": {
                      "description": "Array of returned roles.",
                      "items": {
                        "description": "Role object returned by the API.",
                        "properties": {
                          "attributes": {
                            "description": "Attributes of the role.",
                            "properties": {
                              "created_at": {
                                "description": "Creation time of the role.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string"
                              },
                              "modified_at": {
                                "description": "Time of last role modification.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the role.",
                                "type": "string"
                              },
                              "user_count": {
                                "description": "Number of users with that role.",
                                "format": "int64",
                                "readOnly": true,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "ID of the role.",
                            "type": "string"
                          },
                          "relationships": {
                            "description": "Relationships of the role object returned by the API.",
                            "properties": {
                              "permissions": {
                                "description": "Relationship to multiple permissions objects.",
                                "properties": {
                                  "data": {
                                    "description": "Relationships to permission objects.",
                                    "items": {
                                      "description": "Relationship to permission object.",
                                      "properties": {
                                        "id": {
                                          "description": "ID of the permission.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "permissions",
                                          "description": "Permissions resource type.",
                                          "enum": [
                                            "permissions"
                                          ],
                                          "example": "permissions",
                                          "type": "string",
                                          "x-enum-varnames": [
                                            "PERMISSIONS"
                                          ]
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "default": "roles",
                            "description": "Roles type.",
                            "enum": [
                              "roles"
                            ],
                            "example": "roles",
                            "type": "string",
                            "x-enum-varnames": [
                              "ROLES"
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "description": "Object describing meta attributes of response.",
                      "properties": {
                        "page": {
                          "description": "Pagination object.",
                          "properties": {
                            "total_count": {
                              "description": "Total count.",
                              "format": "int64",
                              "type": "integer"
                            },
                            "total_filtered_count": {
                              "description": "Total count of elements matched by the filter.",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "content": {
              "applcation/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "summary": "List roles",
        "tags": [
          "Roles"
        ]
      },
      "post": {
        "description": "Create a new role for your organization.",
        "operationId": "CreateRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Create a role.",
                "properties": {
                  "data": {
                    "description": "Data related to the creation of a role.",
                    "properties": {
                      "attributes": {
                        "description": "Attributes of the created role.",
                        "properties": {
                          "created_at": {
                            "description": "Creation time of the role.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "modified_at": {
                            "description": "Time of last role modification.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the role.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "relationships": {
                        "description": "Relationships of the role object.",
                        "properties": {
                          "permissions": {
                            "description": "Relationship to multiple permissions objects.",
                            "properties": {
                              "data": {
                                "description": "Relationships to permission objects.",
                                "items": {
                                  "description": "Relationship to permission object.",
                                  "properties": {
                                    "id": {
                                      "description": "ID of the permission.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "default": "permissions",
                                      "description": "Permissions resource type.",
                                      "enum": [
                                        "permissions"
                                      ],
                                      "example": "permissions",
                                      "type": "string",
                                      "x-enum-varnames": [
                                        "PERMISSIONS"
                                      ]
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "users": {
                            "description": "Relationship to users.",
                            "properties": {
                              "data": {
                                "description": "Relationships to user objects.",
                                "items": {
                                  "description": "Relationship to user object.",
                                  "properties": {
                                    "id": {
                                      "description": "ID of the user.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "default": "users",
                                      "description": "Users type.",
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "type": {
                        "default": "roles",
                        "description": "Roles type.",
                        "enum": [
                          "roles"
                        ],
                        "example": "roles",
                        "type": "string",
                        "x-enum-varnames": [
                          "ROLES"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about a created role.",
                  "properties": {
                    "data": {
                      "description": "Role object returned by the API.",
                      "properties": {
                        "attributes": {
                          "description": "Attributes of the created role.",
                          "properties": {
                            "created_at": {
                              "description": "Creation time of the role.",
                              "format": "date-time",
                              "readOnly": true,
                              "type": "string"
                            },
                            "modified_at": {
                              "description": "Time of last role modification.",
                              "format": "date-time",
                              "readOnly": true,
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the role.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "ID of the role.",
                          "type": "string"
                        },
                        "relationships": {
                          "description": "Relationships of the role object returned by the API.",
                          "properties": {
                            "permissions": {
                              "description": "Relationship to multiple permissions objects.",
                              "properties": {
                                "data": {
                                  "description": "Relationships to permission objects.",
                                  "items": {
                                    "description": "Relationship to permission object.",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the permission.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "permissions",
                                        "description": "Permissions resource type.",
                                        "enum": [
                                          "permissions"
                                        ],
                                        "example": "permissions",
                                        "type": "string",
                                        "x-enum-varnames": [
                                          "PERMISSIONS"
                                        ]
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "default": "roles",
                          "description": "Roles type.",
                          "enum": [
                            "roles"
                          ],
                          "example": "roles",
                          "type": "string",
                          "x-enum-varnames": [
                            "ROLES"
                          ]
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "summary": "Create role",
        "tags": [
          "Roles"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v2/roles/{role_id}": {
      "delete": {
        "description": "Disables a role.",
        "operationId": "DeleteRole",
        "parameters": [
          {
            "description": "The ID of the role.",
            "in": "path",
            "name": "role_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete role",
        "tags": [
          "Roles"
        ],
        "x-codegen-request-body-name": "body"
      },
      "get": {
        "description": "Get a role in the organization specified by the role’s `role_id`.",
        "operationId": "GetRole",
        "parameters": [
          {
            "description": "The ID of the role.",
            "in": "path",
            "name": "role_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about a single role.",
                  "properties": {
                    "data": {
                      "description": "Role object returned by the API.",
                      "properties": {
                        "attributes": {
                          "description": "Attributes of the role.",
                          "properties": {
                            "created_at": {
                              "description": "Creation time of the role.",
                              "format": "date-time",
                              "readOnly": true,
                              "type": "string"
                            },
                            "modified_at": {
                              "description": "Time of last role modification.",
                              "format": "date-time",
                              "readOnly": true,
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the role.",
                              "type": "string"
                            },
                            "user_count": {
                              "description": "Number of users with that role.",
                              "format": "int64",
                              "readOnly": true,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "ID of the role.",
                          "type": "string"
                        },
                        "relationships": {
                          "description": "Relationships of the role object returned by the API.",
                          "properties": {
                            "permissions": {
                              "description": "Relationship to multiple permissions objects.",
                              "properties": {
                                "data": {
                                  "description": "Relationships to permission objects.",
                                  "items": {
                                    "description": "Relationship to permission object.",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the permission.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "permissions",
                                        "description": "Permissions resource type.",
                                        "enum": [
                                          "permissions"
                                        ],
                                        "example": "permissions",
                                        "type": "string",
                                        "x-enum-varnames": [
                                          "PERMISSIONS"
                                        ]
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "default": "roles",
                          "description": "Roles type.",
                          "enum": [
                            "roles"
                          ],
                          "example": "roles",
                          "type": "string",
                          "x-enum-varnames": [
                            "ROLES"
                          ]
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK for get role"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get a role",
        "tags": [
          "Roles"
        ],
        "x-codegen-request-body-name": "body"
      },
      "patch": {
        "description": "Edit a role. Can only be used with application keys belonging to administrators.",
        "operationId": "UpdateRole",
        "parameters": [
          {
            "description": "The ID of the role.",
            "in": "path",
            "name": "role_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Update a role.",
                "properties": {
                  "data": {
                    "description": "Data related to the update of a role.",
                    "properties": {
                      "attributes": {
                        "description": "Attributes of the role.",
                        "properties": {
                          "created_at": {
                            "description": "Creation time of the role.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "modified_at": {
                            "description": "Time of last role modification.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the role.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "description": "ID of the role.",
                        "type": "string"
                      },
                      "type": {
                        "default": "roles",
                        "description": "Roles type.",
                        "enum": [
                          "roles"
                        ],
                        "example": "roles",
                        "type": "string",
                        "x-enum-varnames": [
                          "ROLES"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about an updated role.",
                  "properties": {
                    "data": {
                      "description": "Role object returned by the API.",
                      "properties": {
                        "attributes": {
                          "description": "Attributes of the role.",
                          "properties": {
                            "created_at": {
                              "description": "Creation time of the role.",
                              "format": "date-time",
                              "readOnly": true,
                              "type": "string"
                            },
                            "modified_at": {
                              "description": "Time of last role modification.",
                              "format": "date-time",
                              "readOnly": true,
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the role.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "ID of the role.",
                          "type": "string"
                        },
                        "relationships": {
                          "description": "Relationships of the role object returned by the API.",
                          "properties": {
                            "permissions": {
                              "description": "Relationship to multiple permissions objects.",
                              "properties": {
                                "data": {
                                  "description": "Relationships to permission objects.",
                                  "items": {
                                    "description": "Relationship to permission object.",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the permission.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "permissions",
                                        "description": "Permissions resource type.",
                                        "enum": [
                                          "permissions"
                                        ],
                                        "example": "permissions",
                                        "type": "string",
                                        "x-enum-varnames": [
                                          "PERMISSIONS"
                                        ]
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "default": "roles",
                          "description": "Roles type.",
                          "enum": [
                            "roles"
                          ],
                          "example": "roles",
                          "type": "string",
                          "x-enum-varnames": [
                            "ROLES"
                          ]
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "Update a role",
        "tags": [
          "Roles"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v2/roles/{role_id}/permissions": {
      "delete": {
        "description": "Removes a permission from a role.",
        "operationId": "RemovePermissionFromRole",
        "parameters": [
          {
            "description": "The ID of the role.",
            "in": "path",
            "name": "role_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Relationship to a permissions object.",
                "properties": {
                  "data": {
                    "description": "Relationship to permission object.",
                    "properties": {
                      "id": {
                        "description": "ID of the permission.",
                        "type": "string"
                      },
                      "type": {
                        "default": "permissions",
                        "description": "Permissions resource type.",
                        "enum": [
                          "permissions"
                        ],
                        "example": "permissions",
                        "type": "string",
                        "x-enum-varnames": [
                          "PERMISSIONS"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Payload with API-returned permissions.",
                  "properties": {
                    "data": {
                      "description": "Array of permissions.",
                      "items": {
                        "description": "Permission object.",
                        "properties": {
                          "attributes": {
                            "description": "Attributes of a permission.",
                            "properties": {
                              "created": {
                                "description": "Creation time of the permission.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description of the permission.",
                                "type": "string"
                              },
                              "display_name": {
                                "description": "Displayed name for the permission.",
                                "type": "string"
                              },
                              "display_type": {
                                "description": "Display type.",
                                "type": "string"
                              },
                              "group_name": {
                                "description": "Name of the permission group.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the permission.",
                                "type": "string"
                              },
                              "restricted": {
                                "description": "Whether or not the permission is restricted.",
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "ID of the permission.",
                            "type": "string"
                          },
                          "type": {
                            "default": "permissions",
                            "description": "Permissions resource type.",
                            "enum": [
                              "permissions"
                            ],
                            "example": "permissions",
                            "type": "string",
                            "x-enum-varnames": [
                              "PERMISSIONS"
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Revoke permission",
        "tags": [
          "Roles"
        ],
        "x-codegen-request-body-name": "body"
      },
      "get": {
        "description": "Returns a list of all permissions for a single role.",
        "operationId": "ListRolePermissions",
        "parameters": [
          {
            "description": "The ID of the role.",
            "in": "path",
            "name": "role_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Payload with API-returned permissions.",
                  "properties": {
                    "data": {
                      "description": "Array of permissions.",
                      "items": {
                        "description": "Permission object.",
                        "properties": {
                          "attributes": {
                            "description": "Attributes of a permission.",
                            "properties": {
                              "created": {
                                "description": "Creation time of the permission.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description of the permission.",
                                "type": "string"
                              },
                              "display_name": {
                                "description": "Displayed name for the permission.",
                                "type": "string"
                              },
                              "display_type": {
                                "description": "Display type.",
                                "type": "string"
                              },
                              "group_name": {
                                "description": "Name of the permission group.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the permission.",
                                "type": "string"
                              },
                              "restricted": {
                                "description": "Whether or not the permission is restricted.",
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "ID of the permission.",
                            "type": "string"
                          },
                          "type": {
                            "default": "permissions",
                            "description": "Permissions resource type.",
                            "enum": [
                              "permissions"
                            ],
                            "example": "permissions",
                            "type": "string",
                            "x-enum-varnames": [
                              "PERMISSIONS"
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "List permissions for a role",
        "tags": [
          "Roles"
        ],
        "x-codegen-request-body-name": "body"
      },
      "post": {
        "description": "Adds a permission to a role.",
        "operationId": "AddPermissionToRole",
        "parameters": [
          {
            "description": "The ID of the role.",
            "in": "path",
            "name": "role_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Relationship to a permissions object.",
                "properties": {
                  "data": {
                    "description": "Relationship to permission object.",
                    "properties": {
                      "id": {
                        "description": "ID of the permission.",
                        "type": "string"
                      },
                      "type": {
                        "default": "permissions",
                        "description": "Permissions resource type.",
                        "enum": [
                          "permissions"
                        ],
                        "example": "permissions",
                        "type": "string",
                        "x-enum-varnames": [
                          "PERMISSIONS"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Payload with API-returned permissions.",
                  "properties": {
                    "data": {
                      "description": "Array of permissions.",
                      "items": {
                        "description": "Permission object.",
                        "properties": {
                          "attributes": {
                            "description": "Attributes of a permission.",
                            "properties": {
                              "created": {
                                "description": "Creation time of the permission.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description of the permission.",
                                "type": "string"
                              },
                              "display_name": {
                                "description": "Displayed name for the permission.",
                                "type": "string"
                              },
                              "display_type": {
                                "description": "Display type.",
                                "type": "string"
                              },
                              "group_name": {
                                "description": "Name of the permission group.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the permission.",
                                "type": "string"
                              },
                              "restricted": {
                                "description": "Whether or not the permission is restricted.",
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "ID of the permission.",
                            "type": "string"
                          },
                          "type": {
                            "default": "permissions",
                            "description": "Permissions resource type.",
                            "enum": [
                              "permissions"
                            ],
                            "example": "permissions",
                            "type": "string",
                            "x-enum-varnames": [
                              "PERMISSIONS"
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Grant permission to a role",
        "tags": [
          "Roles"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v2/roles/{role_id}/users": {
      "delete": {
        "description": "Removes a user from a role.",
        "operationId": "RemoveUserFromRole",
        "parameters": [
          {
            "description": "The ID of the role.",
            "in": "path",
            "name": "role_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Relationship to user.",
                "properties": {
                  "data": {
                    "description": "Relationship to user object.",
                    "properties": {
                      "id": {
                        "description": "ID of the user.",
                        "type": "string"
                      },
                      "type": {
                        "default": "users",
                        "description": "Users type.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about multiple users.",
                  "properties": {
                    "data": {
                      "description": "Array of returned users.",
                      "items": {
                        "description": "User object returned by the API.",
                        "properties": {
                          "attributes": {
                            "description": "Attributes of user object returned by the API.",
                            "properties": {
                              "created_at": {
                                "description": "Creation time of the user.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "disabled": {
                                "description": "Whether the user is disabled.",
                                "type": "boolean"
                              },
                              "email": {
                                "description": "Email of the user.",
                                "type": "string"
                              },
                              "handle": {
                                "description": "Handle of the user.",
                                "type": "string"
                              },
                              "icon": {
                                "description": "URL of the user's icon.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the user.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Status of the user.",
                                "type": "string"
                              },
                              "title": {
                                "description": "Title of the user.",
                                "type": "string"
                              },
                              "verified": {
                                "description": "Whether the user is verified.",
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "ID of the user.",
                            "type": "string"
                          },
                          "relationships": {
                            "description": "Relationships of the user object returned by the API.",
                            "properties": {
                              "org": {
                                "description": "Relationship to an organization.",
                                "properties": {
                                  "data": {
                                    "description": "Relationship to organization object.",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the organization.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "orgs",
                                        "description": "Organizations resource type.",
                                        "enum": [
                                          "orgs"
                                        ],
                                        "example": "orgs",
                                        "type": "string",
                                        "x-enum-varnames": [
                                          "ORGS"
                                        ]
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "other_orgs": {
                                "description": "Relationship to organizations.",
                                "properties": {
                                  "data": {
                                    "description": "Relationships to organization objects.",
                                    "items": {
                                      "description": "Relationship to organization object.",
                                      "properties": {
                                        "id": {
                                          "description": "ID of the organization.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "orgs",
                                          "description": "Organizations resource type.",
                                          "enum": [
                                            "orgs"
                                          ],
                                          "example": "orgs",
                                          "type": "string",
                                          "x-enum-varnames": [
                                            "ORGS"
                                          ]
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              "other_users": {
                                "description": "Relationship to users.",
                                "properties": {
                                  "data": {
                                    "description": "Relationships to user objects.",
                                    "items": {
                                      "description": "Relationship to user object.",
                                      "properties": {
                                        "id": {
                                          "description": "ID of the user.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "users",
                                          "description": "Users type.",
                                          "readOnly": true,
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              "roles": {
                                "description": "Relationship to roles.",
                                "properties": {
                                  "data": {
                                    "description": "An array containing type and ID of a role.",
                                    "items": {
                                      "description": "Relationship to role object.",
                                      "properties": {
                                        "id": {
                                          "description": "ID of the role.",
                                          "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "roles",
                                          "description": "Roles type.",
                                          "enum": [
                                            "roles"
                                          ],
                                          "example": "roles",
                                          "type": "string",
                                          "x-enum-varnames": [
                                            "ROLES"
                                          ]
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "default": "users",
                            "description": "Users resource type.",
                            "enum": [
                              "users"
                            ],
                            "type": "string",
                            "x-enum-varnames": [
                              "USERS"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "included": {
                      "description": "Array of objects related to the users.",
                      "items": {
                        "description": "An object related to a user.",
                        "oneOf": [
                          {
                            "description": "Organization object.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of the organization.",
                                "properties": {
                                  "created_at": {
                                    "description": "Creation time of the organization.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Description of the organization.",
                                    "type": "string"
                                  },
                                  "disabled": {
                                    "description": "Whether or not the organization is disabled.",
                                    "type": "boolean"
                                  },
                                  "modified_at": {
                                    "description": "Time of last organization modification.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the organization.",
                                    "type": "string"
                                  },
                                  "public_id": {
                                    "description": "Public ID of the organization.",
                                    "type": "string"
                                  },
                                  "sharing": {
                                    "description": "Sharing type of the organization.",
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "URL of the site that this organization exists at.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the organization.",
                                "type": "string"
                              },
                              "type": {
                                "default": "orgs",
                                "description": "Organizations resource type.",
                                "enum": [
                                  "orgs"
                                ],
                                "example": "orgs",
                                "type": "string",
                                "x-enum-varnames": [
                                  "ORGS"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Permission object.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of a permission.",
                                "properties": {
                                  "created": {
                                    "description": "Creation time of the permission.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Description of the permission.",
                                    "type": "string"
                                  },
                                  "display_name": {
                                    "description": "Displayed name for the permission.",
                                    "type": "string"
                                  },
                                  "display_type": {
                                    "description": "Display type.",
                                    "type": "string"
                                  },
                                  "group_name": {
                                    "description": "Name of the permission group.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the permission.",
                                    "type": "string"
                                  },
                                  "restricted": {
                                    "description": "Whether or not the permission is restricted.",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the permission.",
                                "type": "string"
                              },
                              "type": {
                                "default": "permissions",
                                "description": "Permissions resource type.",
                                "enum": [
                                  "permissions"
                                ],
                                "example": "permissions",
                                "type": "string",
                                "x-enum-varnames": [
                                  "PERMISSIONS"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Role object returned by the API.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of the role.",
                                "properties": {
                                  "created_at": {
                                    "description": "Creation time of the role.",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "modified_at": {
                                    "description": "Time of last role modification.",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the role.",
                                    "type": "string"
                                  },
                                  "user_count": {
                                    "description": "Number of users with that role.",
                                    "format": "int64",
                                    "readOnly": true,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the role.",
                                "type": "string"
                              },
                              "relationships": {
                                "description": "Relationships of the role object returned by the API.",
                                "properties": {
                                  "permissions": {
                                    "description": "Relationship to multiple permissions objects.",
                                    "properties": {
                                      "data": {
                                        "description": "Relationships to permission objects.",
                                        "items": {
                                          "description": "Relationship to permission object.",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the permission.",
                                              "type": "string"
                                            },
                                            "type": {
                                              "default": "permissions",
                                              "description": "Permissions resource type.",
                                              "enum": [
                                                "permissions"
                                              ],
                                              "example": "permissions",
                                              "type": "string",
                                              "x-enum-varnames": [
                                                "PERMISSIONS"
                                              ]
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "default": "roles",
                                "description": "Roles type.",
                                "enum": [
                                  "roles"
                                ],
                                "example": "roles",
                                "type": "string",
                                "x-enum-varnames": [
                                  "ROLES"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          }
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "description": "Object describing meta attributes of response.",
                      "properties": {
                        "page": {
                          "description": "Pagination object.",
                          "properties": {
                            "total_count": {
                              "description": "Total count.",
                              "format": "int64",
                              "type": "integer"
                            },
                            "total_filtered_count": {
                              "description": "Total count of elements matched by the filter.",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Remove a user from a role",
        "tags": [
          "Roles"
        ],
        "x-codegen-request-body-name": "body"
      },
      "get": {
        "description": "Gets all users of a role.",
        "operationId": "ListRoleUsers",
        "parameters": [
          {
            "description": "The ID of the role.",
            "in": "path",
            "name": "role_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Size for a given page.",
            "in": "query",
            "name": "page[size]",
            "required": false,
            "schema": {
              "default": 10,
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Specific page number to return.",
            "in": "query",
            "name": "page[number]",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "User attribute to order results by. Sort order is **ascending** by default.\nSort order is **descending** if the field is prefixed by a negative sign,\nfor example `sort=-name`. Options: `name`, `email`, `status`.",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "default": "name",
              "type": "string"
            }
          },
          {
            "description": "Filter all users by the given string. Defaults to no filtering.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about multiple users.",
                  "properties": {
                    "data": {
                      "description": "Array of returned users.",
                      "items": {
                        "description": "User object returned by the API.",
                        "properties": {
                          "attributes": {
                            "description": "Attributes of user object returned by the API.",
                            "properties": {
                              "created_at": {
                                "description": "Creation time of the user.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "disabled": {
                                "description": "Whether the user is disabled.",
                                "type": "boolean"
                              },
                              "email": {
                                "description": "Email of the user.",
                                "type": "string"
                              },
                              "handle": {
                                "description": "Handle of the user.",
                                "type": "string"
                              },
                              "icon": {
                                "description": "URL of the user's icon.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the user.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Status of the user.",
                                "type": "string"
                              },
                              "title": {
                                "description": "Title of the user.",
                                "type": "string"
                              },
                              "verified": {
                                "description": "Whether the user is verified.",
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "ID of the user.",
                            "type": "string"
                          },
                          "relationships": {
                            "description": "Relationships of the user object returned by the API.",
                            "properties": {
                              "org": {
                                "description": "Relationship to an organization.",
                                "properties": {
                                  "data": {
                                    "description": "Relationship to organization object.",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the organization.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "orgs",
                                        "description": "Organizations resource type.",
                                        "enum": [
                                          "orgs"
                                        ],
                                        "example": "orgs",
                                        "type": "string",
                                        "x-enum-varnames": [
                                          "ORGS"
                                        ]
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "other_orgs": {
                                "description": "Relationship to organizations.",
                                "properties": {
                                  "data": {
                                    "description": "Relationships to organization objects.",
                                    "items": {
                                      "description": "Relationship to organization object.",
                                      "properties": {
                                        "id": {
                                          "description": "ID of the organization.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "orgs",
                                          "description": "Organizations resource type.",
                                          "enum": [
                                            "orgs"
                                          ],
                                          "example": "orgs",
                                          "type": "string",
                                          "x-enum-varnames": [
                                            "ORGS"
                                          ]
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              "other_users": {
                                "description": "Relationship to users.",
                                "properties": {
                                  "data": {
                                    "description": "Relationships to user objects.",
                                    "items": {
                                      "description": "Relationship to user object.",
                                      "properties": {
                                        "id": {
                                          "description": "ID of the user.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "users",
                                          "description": "Users type.",
                                          "readOnly": true,
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              "roles": {
                                "description": "Relationship to roles.",
                                "properties": {
                                  "data": {
                                    "description": "An array containing type and ID of a role.",
                                    "items": {
                                      "description": "Relationship to role object.",
                                      "properties": {
                                        "id": {
                                          "description": "ID of the role.",
                                          "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "roles",
                                          "description": "Roles type.",
                                          "enum": [
                                            "roles"
                                          ],
                                          "example": "roles",
                                          "type": "string",
                                          "x-enum-varnames": [
                                            "ROLES"
                                          ]
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "default": "users",
                            "description": "Users resource type.",
                            "enum": [
                              "users"
                            ],
                            "type": "string",
                            "x-enum-varnames": [
                              "USERS"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "included": {
                      "description": "Array of objects related to the users.",
                      "items": {
                        "description": "An object related to a user.",
                        "oneOf": [
                          {
                            "description": "Organization object.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of the organization.",
                                "properties": {
                                  "created_at": {
                                    "description": "Creation time of the organization.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Description of the organization.",
                                    "type": "string"
                                  },
                                  "disabled": {
                                    "description": "Whether or not the organization is disabled.",
                                    "type": "boolean"
                                  },
                                  "modified_at": {
                                    "description": "Time of last organization modification.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the organization.",
                                    "type": "string"
                                  },
                                  "public_id": {
                                    "description": "Public ID of the organization.",
                                    "type": "string"
                                  },
                                  "sharing": {
                                    "description": "Sharing type of the organization.",
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "URL of the site that this organization exists at.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the organization.",
                                "type": "string"
                              },
                              "type": {
                                "default": "orgs",
                                "description": "Organizations resource type.",
                                "enum": [
                                  "orgs"
                                ],
                                "example": "orgs",
                                "type": "string",
                                "x-enum-varnames": [
                                  "ORGS"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Permission object.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of a permission.",
                                "properties": {
                                  "created": {
                                    "description": "Creation time of the permission.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Description of the permission.",
                                    "type": "string"
                                  },
                                  "display_name": {
                                    "description": "Displayed name for the permission.",
                                    "type": "string"
                                  },
                                  "display_type": {
                                    "description": "Display type.",
                                    "type": "string"
                                  },
                                  "group_name": {
                                    "description": "Name of the permission group.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the permission.",
                                    "type": "string"
                                  },
                                  "restricted": {
                                    "description": "Whether or not the permission is restricted.",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the permission.",
                                "type": "string"
                              },
                              "type": {
                                "default": "permissions",
                                "description": "Permissions resource type.",
                                "enum": [
                                  "permissions"
                                ],
                                "example": "permissions",
                                "type": "string",
                                "x-enum-varnames": [
                                  "PERMISSIONS"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Role object returned by the API.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of the role.",
                                "properties": {
                                  "created_at": {
                                    "description": "Creation time of the role.",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "modified_at": {
                                    "description": "Time of last role modification.",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the role.",
                                    "type": "string"
                                  },
                                  "user_count": {
                                    "description": "Number of users with that role.",
                                    "format": "int64",
                                    "readOnly": true,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the role.",
                                "type": "string"
                              },
                              "relationships": {
                                "description": "Relationships of the role object returned by the API.",
                                "properties": {
                                  "permissions": {
                                    "description": "Relationship to multiple permissions objects.",
                                    "properties": {
                                      "data": {
                                        "description": "Relationships to permission objects.",
                                        "items": {
                                          "description": "Relationship to permission object.",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the permission.",
                                              "type": "string"
                                            },
                                            "type": {
                                              "default": "permissions",
                                              "description": "Permissions resource type.",
                                              "enum": [
                                                "permissions"
                                              ],
                                              "example": "permissions",
                                              "type": "string",
                                              "x-enum-varnames": [
                                                "PERMISSIONS"
                                              ]
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "default": "roles",
                                "description": "Roles type.",
                                "enum": [
                                  "roles"
                                ],
                                "example": "roles",
                                "type": "string",
                                "x-enum-varnames": [
                                  "ROLES"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          }
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "description": "Object describing meta attributes of response.",
                      "properties": {
                        "page": {
                          "description": "Pagination object.",
                          "properties": {
                            "total_count": {
                              "description": "Total count.",
                              "format": "int64",
                              "type": "integer"
                            },
                            "total_filtered_count": {
                              "description": "Total count of elements matched by the filter.",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get all users of a role",
        "tags": [
          "Roles"
        ]
      },
      "post": {
        "description": "Adds a user to a role.",
        "operationId": "AddUserToRole",
        "parameters": [
          {
            "description": "The ID of the role.",
            "in": "path",
            "name": "role_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Relationship to user.",
                "properties": {
                  "data": {
                    "description": "Relationship to user object.",
                    "properties": {
                      "id": {
                        "description": "ID of the user.",
                        "type": "string"
                      },
                      "type": {
                        "default": "users",
                        "description": "Users type.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about multiple users.",
                  "properties": {
                    "data": {
                      "description": "Array of returned users.",
                      "items": {
                        "description": "User object returned by the API.",
                        "properties": {
                          "attributes": {
                            "description": "Attributes of user object returned by the API.",
                            "properties": {
                              "created_at": {
                                "description": "Creation time of the user.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "disabled": {
                                "description": "Whether the user is disabled.",
                                "type": "boolean"
                              },
                              "email": {
                                "description": "Email of the user.",
                                "type": "string"
                              },
                              "handle": {
                                "description": "Handle of the user.",
                                "type": "string"
                              },
                              "icon": {
                                "description": "URL of the user's icon.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the user.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Status of the user.",
                                "type": "string"
                              },
                              "title": {
                                "description": "Title of the user.",
                                "type": "string"
                              },
                              "verified": {
                                "description": "Whether the user is verified.",
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "ID of the user.",
                            "type": "string"
                          },
                          "relationships": {
                            "description": "Relationships of the user object returned by the API.",
                            "properties": {
                              "org": {
                                "description": "Relationship to an organization.",
                                "properties": {
                                  "data": {
                                    "description": "Relationship to organization object.",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the organization.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "orgs",
                                        "description": "Organizations resource type.",
                                        "enum": [
                                          "orgs"
                                        ],
                                        "example": "orgs",
                                        "type": "string",
                                        "x-enum-varnames": [
                                          "ORGS"
                                        ]
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "other_orgs": {
                                "description": "Relationship to organizations.",
                                "properties": {
                                  "data": {
                                    "description": "Relationships to organization objects.",
                                    "items": {
                                      "description": "Relationship to organization object.",
                                      "properties": {
                                        "id": {
                                          "description": "ID of the organization.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "orgs",
                                          "description": "Organizations resource type.",
                                          "enum": [
                                            "orgs"
                                          ],
                                          "example": "orgs",
                                          "type": "string",
                                          "x-enum-varnames": [
                                            "ORGS"
                                          ]
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              "other_users": {
                                "description": "Relationship to users.",
                                "properties": {
                                  "data": {
                                    "description": "Relationships to user objects.",
                                    "items": {
                                      "description": "Relationship to user object.",
                                      "properties": {
                                        "id": {
                                          "description": "ID of the user.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "users",
                                          "description": "Users type.",
                                          "readOnly": true,
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              "roles": {
                                "description": "Relationship to roles.",
                                "properties": {
                                  "data": {
                                    "description": "An array containing type and ID of a role.",
                                    "items": {
                                      "description": "Relationship to role object.",
                                      "properties": {
                                        "id": {
                                          "description": "ID of the role.",
                                          "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "roles",
                                          "description": "Roles type.",
                                          "enum": [
                                            "roles"
                                          ],
                                          "example": "roles",
                                          "type": "string",
                                          "x-enum-varnames": [
                                            "ROLES"
                                          ]
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "default": "users",
                            "description": "Users resource type.",
                            "enum": [
                              "users"
                            ],
                            "type": "string",
                            "x-enum-varnames": [
                              "USERS"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "included": {
                      "description": "Array of objects related to the users.",
                      "items": {
                        "description": "An object related to a user.",
                        "oneOf": [
                          {
                            "description": "Organization object.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of the organization.",
                                "properties": {
                                  "created_at": {
                                    "description": "Creation time of the organization.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Description of the organization.",
                                    "type": "string"
                                  },
                                  "disabled": {
                                    "description": "Whether or not the organization is disabled.",
                                    "type": "boolean"
                                  },
                                  "modified_at": {
                                    "description": "Time of last organization modification.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the organization.",
                                    "type": "string"
                                  },
                                  "public_id": {
                                    "description": "Public ID of the organization.",
                                    "type": "string"
                                  },
                                  "sharing": {
                                    "description": "Sharing type of the organization.",
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "URL of the site that this organization exists at.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the organization.",
                                "type": "string"
                              },
                              "type": {
                                "default": "orgs",
                                "description": "Organizations resource type.",
                                "enum": [
                                  "orgs"
                                ],
                                "example": "orgs",
                                "type": "string",
                                "x-enum-varnames": [
                                  "ORGS"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Permission object.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of a permission.",
                                "properties": {
                                  "created": {
                                    "description": "Creation time of the permission.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Description of the permission.",
                                    "type": "string"
                                  },
                                  "display_name": {
                                    "description": "Displayed name for the permission.",
                                    "type": "string"
                                  },
                                  "display_type": {
                                    "description": "Display type.",
                                    "type": "string"
                                  },
                                  "group_name": {
                                    "description": "Name of the permission group.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the permission.",
                                    "type": "string"
                                  },
                                  "restricted": {
                                    "description": "Whether or not the permission is restricted.",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the permission.",
                                "type": "string"
                              },
                              "type": {
                                "default": "permissions",
                                "description": "Permissions resource type.",
                                "enum": [
                                  "permissions"
                                ],
                                "example": "permissions",
                                "type": "string",
                                "x-enum-varnames": [
                                  "PERMISSIONS"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Role object returned by the API.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of the role.",
                                "properties": {
                                  "created_at": {
                                    "description": "Creation time of the role.",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "modified_at": {
                                    "description": "Time of last role modification.",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the role.",
                                    "type": "string"
                                  },
                                  "user_count": {
                                    "description": "Number of users with that role.",
                                    "format": "int64",
                                    "readOnly": true,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the role.",
                                "type": "string"
                              },
                              "relationships": {
                                "description": "Relationships of the role object returned by the API.",
                                "properties": {
                                  "permissions": {
                                    "description": "Relationship to multiple permissions objects.",
                                    "properties": {
                                      "data": {
                                        "description": "Relationships to permission objects.",
                                        "items": {
                                          "description": "Relationship to permission object.",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the permission.",
                                              "type": "string"
                                            },
                                            "type": {
                                              "default": "permissions",
                                              "description": "Permissions resource type.",
                                              "enum": [
                                                "permissions"
                                              ],
                                              "example": "permissions",
                                              "type": "string",
                                              "x-enum-varnames": [
                                                "PERMISSIONS"
                                              ]
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "default": "roles",
                                "description": "Roles type.",
                                "enum": [
                                  "roles"
                                ],
                                "example": "roles",
                                "type": "string",
                                "x-enum-varnames": [
                                  "ROLES"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          }
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "description": "Object describing meta attributes of response.",
                      "properties": {
                        "page": {
                          "description": "Pagination object.",
                          "properties": {
                            "total_count": {
                              "description": "Total count.",
                              "format": "int64",
                              "type": "integer"
                            },
                            "total_filtered_count": {
                              "description": "Total count of elements matched by the filter.",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Add a user to a role",
        "tags": [
          "Roles"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v2/security_monitoring/rules": {
      "get": {
        "description": "List rules.",
        "operationId": "ListSecurityMonitoringRules",
        "parameters": [
          {
            "description": "Size for a given page.",
            "in": "query",
            "name": "page[size]",
            "required": false,
            "schema": {
              "default": 10,
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Specific page number to return.",
            "in": "query",
            "name": "page[number]",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "List of rules",
                  "properties": {
                    "data": {
                      "description": "TODO.",
                      "items": {
                        "description": "Detection rule",
                        "properties": {
                          "cases": {
                            "description": "Cases for generating signals.",
                            "items": {
                              "description": "Case when signal is generated.",
                              "properties": {
                                "condition": {
                                  "description": "A rule case contains logical operations (>, >=, &&, ||) to determine if a signal should be generated\nbased on the event counts in the previously defined queries.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the case.",
                                  "type": "string"
                                },
                                "notifications": {
                                  "description": "Notification targets for each rule case",
                                  "items": {
                                    "description": "Notification",
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "status": {
                                  "description": "Severity of the Security Signal.",
                                  "enum": [
                                    "info",
                                    "low",
                                    "medium",
                                    "high",
                                    "critical"
                                  ],
                                  "type": "string",
                                  "x-enum-varnames": [
                                    "INFO",
                                    "LOW",
                                    "MEDIUM",
                                    "HIGH",
                                    "CRITICAL"
                                  ]
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "createdAt": {
                            "description": "When the rule was created, timestamp in milliseconds.",
                            "format": "int64",
                            "type": "integer"
                          },
                          "creationAuthorId": {
                            "description": "User ID of the user who created the rule.",
                            "format": "int64",
                            "type": "integer"
                          },
                          "id": {
                            "description": "The ID of the rule.",
                            "type": "string"
                          },
                          "isDefault": {
                            "description": "Whether the rule is included by default.",
                            "type": "boolean"
                          },
                          "isDeleted": {
                            "description": "Whether the rule has been deleted.",
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "description": "Whether the rule is enabled.",
                            "type": "boolean"
                          },
                          "message": {
                            "description": "Message for generated signals.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the rule.",
                            "type": "string"
                          },
                          "options": {
                            "description": "Options on rules.",
                            "properties": {
                              "evaluationWindow": {
                                "description": "A time window is specified to match when at least one of the cases matches true. This is a sliding window\nand evaluates in real time.",
                                "enum": [
                                  0,
                                  60,
                                  300,
                                  600,
                                  900,
                                  1800,
                                  3600,
                                  7200
                                ],
                                "format": "int32",
                                "type": "integer",
                                "x-enum-varnames": [
                                  "ZERO_MINUTES",
                                  "ONE_MINUTE",
                                  "FIVE_MINUTES",
                                  "TEN_MINUTES",
                                  "FIFTEEN_MINUTES",
                                  "THIRTY_MINUTES",
                                  "ONE_HOUR",
                                  "TWO_HOURS"
                                ]
                              },
                              "keepAlive": {
                                "description": "Once a signal is generated, the signal will remain “open” if a case is matched at least once within\nthis keep alive window.",
                                "enum": [
                                  0,
                                  60,
                                  300,
                                  600,
                                  900,
                                  1800,
                                  3600,
                                  7200
                                ],
                                "format": "int32",
                                "type": "integer",
                                "x-enum-varnames": [
                                  "ZERO_MINUTES",
                                  "ONE_MINUTE",
                                  "FIVE_MINUTES",
                                  "TEN_MINUTES",
                                  "FIFTEEN_MINUTES",
                                  "THIRTY_MINUTES",
                                  "ONE_HOUR",
                                  "TWO_HOURS"
                                ]
                              },
                              "maxSignalDuration": {
                                "description": "A signal will “close” regardless of the query being matched once the time exceeds the maximum duration.\nThis time is calculated from the first seen timestamp.",
                                "enum": [
                                  0,
                                  60,
                                  300,
                                  600,
                                  900,
                                  1800,
                                  3600,
                                  7200,
                                  10800,
                                  21600,
                                  43200,
                                  86400
                                ],
                                "format": "int32",
                                "type": "integer",
                                "x-enum-varnames": [
                                  "ZERO_MINUTES",
                                  "ONE_MINUTE",
                                  "FIVE_MINUTES",
                                  "TEN_MINUTES",
                                  "FIFTEEN_MINUTES",
                                  "THIRTY_MINUTES",
                                  "ONE_HOUR",
                                  "TWO_HOURS",
                                  "THREE_HOURS",
                                  "SIX_HOURS",
                                  "TWELVE_HOURS",
                                  "ONE_DAY"
                                ]
                              }
                            },
                            "type": "object"
                          },
                          "queries": {
                            "description": "Queries for selecting logs which are part of the rule.",
                            "items": {
                              "description": "Query for matching rule.",
                              "properties": {
                                "groupByFields": {
                                  "description": "Fields to group by.",
                                  "items": {
                                    "description": "Field",
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "name": {
                                  "description": "Name of the query",
                                  "type": "string"
                                },
                                "query": {
                                  "description": "Query to run on logs",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "tags": {
                            "description": "Tags for generated signals.",
                            "items": {
                              "description": "Tag",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "version": {
                            "description": "The version of the rule.",
                            "format": "int64",
                            "type": "integer"
                          }
                        }
                      },
                      "type": "array"
                    },
                    "meta": {
                      "description": "Object describing meta attributes of response.",
                      "properties": {
                        "page": {
                          "description": "Pagination object.",
                          "properties": {
                            "total_count": {
                              "description": "Total count.",
                              "format": "int64",
                              "type": "integer"
                            },
                            "total_filtered_count": {
                              "description": "Total count of elements matched by the filter.",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List rules",
        "tags": [
          "Security Monitoring"
        ]
      },
      "post": {
        "description": "Create a detection rule.",
        "operationId": "CreateSecurityMonitoringRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Create a new rule.",
                "properties": {
                  "cases": {
                    "description": "Cases for generating signals.",
                    "example": [],
                    "items": {
                      "description": "Case when signal is generated.",
                      "properties": {
                        "condition": {
                          "description": "A rule case contains logical operations (>, >=, &&, ||) to determine if a signal should be generated\nbased on the event counts in the previously defined queries.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the case.",
                          "type": "string"
                        },
                        "notifications": {
                          "description": "Notification targets for each rule case",
                          "items": {
                            "description": "Notification",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "status": {
                          "description": "Severity of the Security Signal.",
                          "enum": [
                            "info",
                            "low",
                            "medium",
                            "high",
                            "critical"
                          ],
                          "type": "string",
                          "x-enum-varnames": [
                            "INFO",
                            "LOW",
                            "MEDIUM",
                            "HIGH",
                            "CRITICAL"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "enabled": {
                    "description": "Whether the rule is enabled.",
                    "example": true,
                    "type": "boolean"
                  },
                  "message": {
                    "description": "Message for generated signals.",
                    "example": "",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the rule",
                    "example": "",
                    "type": "string"
                  },
                  "options": {
                    "description": "Options on rules.",
                    "properties": {
                      "evaluationWindow": {
                        "description": "A time window is specified to match when at least one of the cases matches true. This is a sliding window\nand evaluates in real time.",
                        "enum": [
                          0,
                          60,
                          300,
                          600,
                          900,
                          1800,
                          3600,
                          7200
                        ],
                        "format": "int32",
                        "type": "integer",
                        "x-enum-varnames": [
                          "ZERO_MINUTES",
                          "ONE_MINUTE",
                          "FIVE_MINUTES",
                          "TEN_MINUTES",
                          "FIFTEEN_MINUTES",
                          "THIRTY_MINUTES",
                          "ONE_HOUR",
                          "TWO_HOURS"
                        ]
                      },
                      "keepAlive": {
                        "description": "Once a signal is generated, the signal will remain “open” if a case is matched at least once within\nthis keep alive window.",
                        "enum": [
                          0,
                          60,
                          300,
                          600,
                          900,
                          1800,
                          3600,
                          7200
                        ],
                        "format": "int32",
                        "type": "integer",
                        "x-enum-varnames": [
                          "ZERO_MINUTES",
                          "ONE_MINUTE",
                          "FIVE_MINUTES",
                          "TEN_MINUTES",
                          "FIFTEEN_MINUTES",
                          "THIRTY_MINUTES",
                          "ONE_HOUR",
                          "TWO_HOURS"
                        ]
                      },
                      "maxSignalDuration": {
                        "description": "A signal will “close” regardless of the query being matched once the time exceeds the maximum duration.\nThis time is calculated from the first seen timestamp.",
                        "enum": [
                          0,
                          60,
                          300,
                          600,
                          900,
                          1800,
                          3600,
                          7200,
                          10800,
                          21600,
                          43200,
                          86400
                        ],
                        "format": "int32",
                        "type": "integer",
                        "x-enum-varnames": [
                          "ZERO_MINUTES",
                          "ONE_MINUTE",
                          "FIVE_MINUTES",
                          "TEN_MINUTES",
                          "FIFTEEN_MINUTES",
                          "THIRTY_MINUTES",
                          "ONE_HOUR",
                          "TWO_HOURS",
                          "THREE_HOURS",
                          "SIX_HOURS",
                          "TWELVE_HOURS",
                          "ONE_DAY"
                        ]
                      }
                    },
                    "type": "object"
                  },
                  "queries": {
                    "description": "Queries for selecting logs which are part of the rule.",
                    "example": [],
                    "items": {
                      "description": "Query for matching rule.",
                      "properties": {
                        "groupByFields": {
                          "description": "Fields to group by.",
                          "items": {
                            "description": "Field",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "name": {
                          "description": "Name of the query",
                          "type": "string"
                        },
                        "query": {
                          "description": "Query to run on logs",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "tags": {
                    "description": "Tags for generated signals.",
                    "example": [
                      "env:prod",
                      "team:security"
                    ],
                    "items": {
                      "description": "Tag",
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "name",
                  "enabled",
                  "queries",
                  "options",
                  "cases",
                  "message",
                  "tags"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detection rule",
                  "properties": {
                    "cases": {
                      "description": "Cases for generating signals.",
                      "items": {
                        "description": "Case when signal is generated.",
                        "properties": {
                          "condition": {
                            "description": "A rule case contains logical operations (>, >=, &&, ||) to determine if a signal should be generated\nbased on the event counts in the previously defined queries.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the case.",
                            "type": "string"
                          },
                          "notifications": {
                            "description": "Notification targets for each rule case",
                            "items": {
                              "description": "Notification",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "status": {
                            "description": "Severity of the Security Signal.",
                            "enum": [
                              "info",
                              "low",
                              "medium",
                              "high",
                              "critical"
                            ],
                            "type": "string",
                            "x-enum-varnames": [
                              "INFO",
                              "LOW",
                              "MEDIUM",
                              "HIGH",
                              "CRITICAL"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "createdAt": {
                      "description": "When the rule was created, timestamp in milliseconds.",
                      "format": "int64",
                      "type": "integer"
                    },
                    "creationAuthorId": {
                      "description": "User ID of the user who created the rule.",
                      "format": "int64",
                      "type": "integer"
                    },
                    "id": {
                      "description": "The ID of the rule.",
                      "type": "string"
                    },
                    "isDefault": {
                      "description": "Whether the rule is included by default.",
                      "type": "boolean"
                    },
                    "isDeleted": {
                      "description": "Whether the rule has been deleted.",
                      "type": "boolean"
                    },
                    "isEnabled": {
                      "description": "Whether the rule is enabled.",
                      "type": "boolean"
                    },
                    "message": {
                      "description": "Message for generated signals.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the rule.",
                      "type": "string"
                    },
                    "options": {
                      "description": "Options on rules.",
                      "properties": {
                        "evaluationWindow": {
                          "description": "A time window is specified to match when at least one of the cases matches true. This is a sliding window\nand evaluates in real time.",
                          "enum": [
                            0,
                            60,
                            300,
                            600,
                            900,
                            1800,
                            3600,
                            7200
                          ],
                          "format": "int32",
                          "type": "integer",
                          "x-enum-varnames": [
                            "ZERO_MINUTES",
                            "ONE_MINUTE",
                            "FIVE_MINUTES",
                            "TEN_MINUTES",
                            "FIFTEEN_MINUTES",
                            "THIRTY_MINUTES",
                            "ONE_HOUR",
                            "TWO_HOURS"
                          ]
                        },
                        "keepAlive": {
                          "description": "Once a signal is generated, the signal will remain “open” if a case is matched at least once within\nthis keep alive window.",
                          "enum": [
                            0,
                            60,
                            300,
                            600,
                            900,
                            1800,
                            3600,
                            7200
                          ],
                          "format": "int32",
                          "type": "integer",
                          "x-enum-varnames": [
                            "ZERO_MINUTES",
                            "ONE_MINUTE",
                            "FIVE_MINUTES",
                            "TEN_MINUTES",
                            "FIFTEEN_MINUTES",
                            "THIRTY_MINUTES",
                            "ONE_HOUR",
                            "TWO_HOURS"
                          ]
                        },
                        "maxSignalDuration": {
                          "description": "A signal will “close” regardless of the query being matched once the time exceeds the maximum duration.\nThis time is calculated from the first seen timestamp.",
                          "enum": [
                            0,
                            60,
                            300,
                            600,
                            900,
                            1800,
                            3600,
                            7200,
                            10800,
                            21600,
                            43200,
                            86400
                          ],
                          "format": "int32",
                          "type": "integer",
                          "x-enum-varnames": [
                            "ZERO_MINUTES",
                            "ONE_MINUTE",
                            "FIVE_MINUTES",
                            "TEN_MINUTES",
                            "FIFTEEN_MINUTES",
                            "THIRTY_MINUTES",
                            "ONE_HOUR",
                            "TWO_HOURS",
                            "THREE_HOURS",
                            "SIX_HOURS",
                            "TWELVE_HOURS",
                            "ONE_DAY"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "queries": {
                      "description": "Queries for selecting logs which are part of the rule.",
                      "items": {
                        "description": "Query for matching rule.",
                        "properties": {
                          "groupByFields": {
                            "description": "Fields to group by.",
                            "items": {
                              "description": "Field",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "name": {
                            "description": "Name of the query",
                            "type": "string"
                          },
                          "query": {
                            "description": "Query to run on logs",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "tags": {
                      "description": "Tags for generated signals.",
                      "items": {
                        "description": "Tag",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "version": {
                      "description": "The version of the rule.",
                      "format": "int64",
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not Authorized"
          }
        },
        "summary": "Create a detection rule",
        "tags": [
          "Security Monitoring"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v2/security_monitoring/rules/{rule_id}": {
      "delete": {
        "description": "Delete an existing rule. Default rules cannot be deleted.",
        "operationId": "DeleteSecurityMonitoringRule",
        "parameters": [
          {
            "description": "The ID of the rule.",
            "in": "path",
            "name": "rule_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not Authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Delete an existing rule",
        "tags": [
          "Security Monitoring"
        ]
      },
      "get": {
        "description": "Get a rule's details.",
        "operationId": "GetSecurityMonitoringRule",
        "parameters": [
          {
            "description": "The ID of the rule.",
            "in": "path",
            "name": "rule_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detection rule",
                  "properties": {
                    "cases": {
                      "description": "Cases for generating signals.",
                      "items": {
                        "description": "Case when signal is generated.",
                        "properties": {
                          "condition": {
                            "description": "A rule case contains logical operations (>, >=, &&, ||) to determine if a signal should be generated\nbased on the event counts in the previously defined queries.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the case.",
                            "type": "string"
                          },
                          "notifications": {
                            "description": "Notification targets for each rule case",
                            "items": {
                              "description": "Notification",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "status": {
                            "description": "Severity of the Security Signal.",
                            "enum": [
                              "info",
                              "low",
                              "medium",
                              "high",
                              "critical"
                            ],
                            "type": "string",
                            "x-enum-varnames": [
                              "INFO",
                              "LOW",
                              "MEDIUM",
                              "HIGH",
                              "CRITICAL"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "createdAt": {
                      "description": "When the rule was created, timestamp in milliseconds.",
                      "format": "int64",
                      "type": "integer"
                    },
                    "creationAuthorId": {
                      "description": "User ID of the user who created the rule.",
                      "format": "int64",
                      "type": "integer"
                    },
                    "id": {
                      "description": "The ID of the rule.",
                      "type": "string"
                    },
                    "isDefault": {
                      "description": "Whether the rule is included by default.",
                      "type": "boolean"
                    },
                    "isDeleted": {
                      "description": "Whether the rule has been deleted.",
                      "type": "boolean"
                    },
                    "isEnabled": {
                      "description": "Whether the rule is enabled.",
                      "type": "boolean"
                    },
                    "message": {
                      "description": "Message for generated signals.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the rule.",
                      "type": "string"
                    },
                    "options": {
                      "description": "Options on rules.",
                      "properties": {
                        "evaluationWindow": {
                          "description": "A time window is specified to match when at least one of the cases matches true. This is a sliding window\nand evaluates in real time.",
                          "enum": [
                            0,
                            60,
                            300,
                            600,
                            900,
                            1800,
                            3600,
                            7200
                          ],
                          "format": "int32",
                          "type": "integer",
                          "x-enum-varnames": [
                            "ZERO_MINUTES",
                            "ONE_MINUTE",
                            "FIVE_MINUTES",
                            "TEN_MINUTES",
                            "FIFTEEN_MINUTES",
                            "THIRTY_MINUTES",
                            "ONE_HOUR",
                            "TWO_HOURS"
                          ]
                        },
                        "keepAlive": {
                          "description": "Once a signal is generated, the signal will remain “open” if a case is matched at least once within\nthis keep alive window.",
                          "enum": [
                            0,
                            60,
                            300,
                            600,
                            900,
                            1800,
                            3600,
                            7200
                          ],
                          "format": "int32",
                          "type": "integer",
                          "x-enum-varnames": [
                            "ZERO_MINUTES",
                            "ONE_MINUTE",
                            "FIVE_MINUTES",
                            "TEN_MINUTES",
                            "FIFTEEN_MINUTES",
                            "THIRTY_MINUTES",
                            "ONE_HOUR",
                            "TWO_HOURS"
                          ]
                        },
                        "maxSignalDuration": {
                          "description": "A signal will “close” regardless of the query being matched once the time exceeds the maximum duration.\nThis time is calculated from the first seen timestamp.",
                          "enum": [
                            0,
                            60,
                            300,
                            600,
                            900,
                            1800,
                            3600,
                            7200,
                            10800,
                            21600,
                            43200,
                            86400
                          ],
                          "format": "int32",
                          "type": "integer",
                          "x-enum-varnames": [
                            "ZERO_MINUTES",
                            "ONE_MINUTE",
                            "FIVE_MINUTES",
                            "TEN_MINUTES",
                            "FIFTEEN_MINUTES",
                            "THIRTY_MINUTES",
                            "ONE_HOUR",
                            "TWO_HOURS",
                            "THREE_HOURS",
                            "SIX_HOURS",
                            "TWELVE_HOURS",
                            "ONE_DAY"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "queries": {
                      "description": "Queries for selecting logs which are part of the rule.",
                      "items": {
                        "description": "Query for matching rule.",
                        "properties": {
                          "groupByFields": {
                            "description": "Fields to group by.",
                            "items": {
                              "description": "Field",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "name": {
                            "description": "Name of the query",
                            "type": "string"
                          },
                          "query": {
                            "description": "Query to run on logs",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "tags": {
                      "description": "Tags for generated signals.",
                      "items": {
                        "description": "Tag",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "version": {
                      "description": "The version of the rule.",
                      "format": "int64",
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a rule's details",
        "tags": [
          "Security Monitoring"
        ]
      },
      "put": {
        "description": "Update an existing rule. When updating `cases`, `queries` or `options`, the whole field\nmust be included. For example, when modifying a query all queries must be included.\nDefault rules can only be updated to be enabled and to change notifications.",
        "operationId": "UpdateSecurityMonitoringRule",
        "parameters": [
          {
            "description": "The ID of the rule.",
            "in": "path",
            "name": "rule_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Update an existing rule.",
                "properties": {
                  "cases": {
                    "description": "Cases for generating signals.",
                    "items": {
                      "description": "Case when signal is generated.",
                      "properties": {
                        "condition": {
                          "description": "A rule case contains logical operations (>, >=, &&, ||) to determine if a signal should be generated\nbased on the event counts in the previously defined queries.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the case.",
                          "type": "string"
                        },
                        "notifications": {
                          "description": "Notification targets for each rule case",
                          "items": {
                            "description": "Notification",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "status": {
                          "description": "Severity of the Security Signal.",
                          "enum": [
                            "info",
                            "low",
                            "medium",
                            "high",
                            "critical"
                          ],
                          "type": "string",
                          "x-enum-varnames": [
                            "INFO",
                            "LOW",
                            "MEDIUM",
                            "HIGH",
                            "CRITICAL"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "enabled": {
                    "description": "Whether the rule is enabled.",
                    "type": "boolean"
                  },
                  "message": {
                    "description": "Message for generated signals.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the rule.",
                    "type": "string"
                  },
                  "options": {
                    "description": "Options on rules.",
                    "properties": {
                      "evaluationWindow": {
                        "description": "A time window is specified to match when at least one of the cases matches true. This is a sliding window\nand evaluates in real time.",
                        "enum": [
                          0,
                          60,
                          300,
                          600,
                          900,
                          1800,
                          3600,
                          7200
                        ],
                        "format": "int32",
                        "type": "integer",
                        "x-enum-varnames": [
                          "ZERO_MINUTES",
                          "ONE_MINUTE",
                          "FIVE_MINUTES",
                          "TEN_MINUTES",
                          "FIFTEEN_MINUTES",
                          "THIRTY_MINUTES",
                          "ONE_HOUR",
                          "TWO_HOURS"
                        ]
                      },
                      "keepAlive": {
                        "description": "Once a signal is generated, the signal will remain “open” if a case is matched at least once within\nthis keep alive window.",
                        "enum": [
                          0,
                          60,
                          300,
                          600,
                          900,
                          1800,
                          3600,
                          7200
                        ],
                        "format": "int32",
                        "type": "integer",
                        "x-enum-varnames": [
                          "ZERO_MINUTES",
                          "ONE_MINUTE",
                          "FIVE_MINUTES",
                          "TEN_MINUTES",
                          "FIFTEEN_MINUTES",
                          "THIRTY_MINUTES",
                          "ONE_HOUR",
                          "TWO_HOURS"
                        ]
                      },
                      "maxSignalDuration": {
                        "description": "A signal will “close” regardless of the query being matched once the time exceeds the maximum duration.\nThis time is calculated from the first seen timestamp.",
                        "enum": [
                          0,
                          60,
                          300,
                          600,
                          900,
                          1800,
                          3600,
                          7200,
                          10800,
                          21600,
                          43200,
                          86400
                        ],
                        "format": "int32",
                        "type": "integer",
                        "x-enum-varnames": [
                          "ZERO_MINUTES",
                          "ONE_MINUTE",
                          "FIVE_MINUTES",
                          "TEN_MINUTES",
                          "FIFTEEN_MINUTES",
                          "THIRTY_MINUTES",
                          "ONE_HOUR",
                          "TWO_HOURS",
                          "THREE_HOURS",
                          "SIX_HOURS",
                          "TWELVE_HOURS",
                          "ONE_DAY"
                        ]
                      }
                    },
                    "type": "object"
                  },
                  "queries": {
                    "description": "Queries for selecting logs which are part of the rule.",
                    "items": {
                      "description": "Query for matching rule.",
                      "properties": {
                        "groupByFields": {
                          "description": "Fields to group by.",
                          "items": {
                            "description": "Field",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "name": {
                          "description": "Name of the query",
                          "type": "string"
                        },
                        "query": {
                          "description": "Query to run on logs",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "tags": {
                    "description": "Tags for generated signals.",
                    "items": {
                      "description": "Tag",
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detection rule",
                  "properties": {
                    "cases": {
                      "description": "Cases for generating signals.",
                      "items": {
                        "description": "Case when signal is generated.",
                        "properties": {
                          "condition": {
                            "description": "A rule case contains logical operations (>, >=, &&, ||) to determine if a signal should be generated\nbased on the event counts in the previously defined queries.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the case.",
                            "type": "string"
                          },
                          "notifications": {
                            "description": "Notification targets for each rule case",
                            "items": {
                              "description": "Notification",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "status": {
                            "description": "Severity of the Security Signal.",
                            "enum": [
                              "info",
                              "low",
                              "medium",
                              "high",
                              "critical"
                            ],
                            "type": "string",
                            "x-enum-varnames": [
                              "INFO",
                              "LOW",
                              "MEDIUM",
                              "HIGH",
                              "CRITICAL"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "createdAt": {
                      "description": "When the rule was created, timestamp in milliseconds.",
                      "format": "int64",
                      "type": "integer"
                    },
                    "creationAuthorId": {
                      "description": "User ID of the user who created the rule.",
                      "format": "int64",
                      "type": "integer"
                    },
                    "id": {
                      "description": "The ID of the rule.",
                      "type": "string"
                    },
                    "isDefault": {
                      "description": "Whether the rule is included by default.",
                      "type": "boolean"
                    },
                    "isDeleted": {
                      "description": "Whether the rule has been deleted.",
                      "type": "boolean"
                    },
                    "isEnabled": {
                      "description": "Whether the rule is enabled.",
                      "type": "boolean"
                    },
                    "message": {
                      "description": "Message for generated signals.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the rule.",
                      "type": "string"
                    },
                    "options": {
                      "description": "Options on rules.",
                      "properties": {
                        "evaluationWindow": {
                          "description": "A time window is specified to match when at least one of the cases matches true. This is a sliding window\nand evaluates in real time.",
                          "enum": [
                            0,
                            60,
                            300,
                            600,
                            900,
                            1800,
                            3600,
                            7200
                          ],
                          "format": "int32",
                          "type": "integer",
                          "x-enum-varnames": [
                            "ZERO_MINUTES",
                            "ONE_MINUTE",
                            "FIVE_MINUTES",
                            "TEN_MINUTES",
                            "FIFTEEN_MINUTES",
                            "THIRTY_MINUTES",
                            "ONE_HOUR",
                            "TWO_HOURS"
                          ]
                        },
                        "keepAlive": {
                          "description": "Once a signal is generated, the signal will remain “open” if a case is matched at least once within\nthis keep alive window.",
                          "enum": [
                            0,
                            60,
                            300,
                            600,
                            900,
                            1800,
                            3600,
                            7200
                          ],
                          "format": "int32",
                          "type": "integer",
                          "x-enum-varnames": [
                            "ZERO_MINUTES",
                            "ONE_MINUTE",
                            "FIVE_MINUTES",
                            "TEN_MINUTES",
                            "FIFTEEN_MINUTES",
                            "THIRTY_MINUTES",
                            "ONE_HOUR",
                            "TWO_HOURS"
                          ]
                        },
                        "maxSignalDuration": {
                          "description": "A signal will “close” regardless of the query being matched once the time exceeds the maximum duration.\nThis time is calculated from the first seen timestamp.",
                          "enum": [
                            0,
                            60,
                            300,
                            600,
                            900,
                            1800,
                            3600,
                            7200,
                            10800,
                            21600,
                            43200,
                            86400
                          ],
                          "format": "int32",
                          "type": "integer",
                          "x-enum-varnames": [
                            "ZERO_MINUTES",
                            "ONE_MINUTE",
                            "FIVE_MINUTES",
                            "TEN_MINUTES",
                            "FIFTEEN_MINUTES",
                            "THIRTY_MINUTES",
                            "ONE_HOUR",
                            "TWO_HOURS",
                            "THREE_HOURS",
                            "SIX_HOURS",
                            "TWELVE_HOURS",
                            "ONE_DAY"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "queries": {
                      "description": "Queries for selecting logs which are part of the rule.",
                      "items": {
                        "description": "Query for matching rule.",
                        "properties": {
                          "groupByFields": {
                            "description": "Fields to group by.",
                            "items": {
                              "description": "Field",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "name": {
                            "description": "Name of the query",
                            "type": "string"
                          },
                          "query": {
                            "description": "Query to run on logs",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "tags": {
                      "description": "Tags for generated signals.",
                      "items": {
                        "description": "Tag",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "version": {
                      "description": "The version of the rule.",
                      "format": "int64",
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Concurrent Modification"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not Authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Update an existing rule",
        "tags": [
          "Security Monitoring"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v2/user_invitations": {
      "post": {
        "description": "Sends emails to one or more users inviting them to join the organization.",
        "operationId": "SendInvitations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Object to invite users to join the organization.",
                "properties": {
                  "data": {
                    "description": "List of user invitations.",
                    "items": {
                      "description": "Object to create a user invitation.",
                      "properties": {
                        "relationships": {
                          "description": "Relationships data for user invitation.",
                          "properties": {
                            "user": {
                              "description": "Relationship to user.",
                              "properties": {
                                "data": {
                                  "description": "Relationship to user object.",
                                  "properties": {
                                    "id": {
                                      "description": "ID of the user.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "default": "users",
                                      "description": "Users type.",
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "default": "user_invitations",
                          "description": "User invitations type.",
                          "enum": [
                            "user_invitations"
                          ],
                          "type": "string",
                          "x-enum-varnames": [
                            "USER_INVITATIONS"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "User invitations as returned by the API.",
                  "properties": {
                    "data": {
                      "description": "Array of user invitations.",
                      "items": {
                        "description": "Object of a user invitation returned by the API.",
                        "properties": {
                          "attributes": {
                            "description": "Attributes of a user invitation.",
                            "properties": {
                              "created_at": {
                                "description": "Creation time of the user invitation.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "expires_at": {
                                "description": "Time of invitation expiration.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "invite_type": {
                                "description": "Type of invitation.",
                                "type": "string"
                              },
                              "uuid": {
                                "description": "UUID of the user invitation.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "ID of the user invitation.",
                            "type": "string"
                          },
                          "type": {
                            "default": "user_invitations",
                            "description": "User invitations type.",
                            "enum": [
                              "user_invitations"
                            ],
                            "type": "string",
                            "x-enum-varnames": [
                              "USER_INVITATIONS"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "summary": "Send invitation emails",
        "tags": [
          "Users"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v2/user_invitations/{user_invitation_uuid}": {
      "get": {
        "description": "Returns a single user invitation by its UUID.",
        "operationId": "GetInvitation",
        "parameters": [
          {
            "description": "The UUID of the user invitation.",
            "in": "path",
            "name": "user_invitation_uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "User invitation as returned by the API.",
                  "properties": {
                    "data": {
                      "description": "Object of a user invitation returned by the API.",
                      "properties": {
                        "attributes": {
                          "description": "Attributes of a user invitation.",
                          "properties": {
                            "created_at": {
                              "description": "Creation time of the user invitation.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "expires_at": {
                              "description": "Time of invitation expiration.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "invite_type": {
                              "description": "Type of invitation.",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "UUID of the user invitation.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "ID of the user invitation.",
                          "type": "string"
                        },
                        "type": {
                          "default": "user_invitations",
                          "description": "User invitations type.",
                          "enum": [
                            "user_invitations"
                          ],
                          "type": "string",
                          "x-enum-varnames": [
                            "USER_INVITATIONS"
                          ]
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get a user invitation",
        "tags": [
          "Users"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v2/users": {
      "get": {
        "description": "Get the list of all users in the organization. This list includes all users even if they are disabled or unverified.",
        "operationId": "ListUsers",
        "parameters": [
          {
            "description": "Size for a given page.",
            "in": "query",
            "name": "page[size]",
            "required": false,
            "schema": {
              "default": 10,
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Specific page number to return.",
            "in": "query",
            "name": "page[number]",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "User attribute to order results by. Sort order is ascending by default. Sort order is descending if the field is prefixed by a negative sign, for example `sort=-name`. Options: `name`, `modified_at`, `user_count`.",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "default": "name",
              "type": "string"
            }
          },
          {
            "description": "Direction of sort. Options: `asc`, `desc`.",
            "in": "query",
            "name": "sort_dir",
            "required": false,
            "schema": {
              "default": "desc",
              "description": "Direction of sort.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string",
              "x-enum-varnames": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "description": "Filter all users by the given string. Defaults to no filtering.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter on status attribute.\nComma separated list, with possible values `Active`, `Pending`, and `Disabled`.\nDefaults to no filtering.",
            "in": "query",
            "name": "filter[status]",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about multiple users.",
                  "properties": {
                    "data": {
                      "description": "Array of returned users.",
                      "items": {
                        "description": "User object returned by the API.",
                        "properties": {
                          "attributes": {
                            "description": "Attributes of user object returned by the API.",
                            "properties": {
                              "created_at": {
                                "description": "Creation time of the user.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "disabled": {
                                "description": "Whether the user is disabled.",
                                "type": "boolean"
                              },
                              "email": {
                                "description": "Email of the user.",
                                "type": "string"
                              },
                              "handle": {
                                "description": "Handle of the user.",
                                "type": "string"
                              },
                              "icon": {
                                "description": "URL of the user's icon.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the user.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Status of the user.",
                                "type": "string"
                              },
                              "title": {
                                "description": "Title of the user.",
                                "type": "string"
                              },
                              "verified": {
                                "description": "Whether the user is verified.",
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "ID of the user.",
                            "type": "string"
                          },
                          "relationships": {
                            "description": "Relationships of the user object returned by the API.",
                            "properties": {
                              "org": {
                                "description": "Relationship to an organization.",
                                "properties": {
                                  "data": {
                                    "description": "Relationship to organization object.",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the organization.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "orgs",
                                        "description": "Organizations resource type.",
                                        "enum": [
                                          "orgs"
                                        ],
                                        "example": "orgs",
                                        "type": "string",
                                        "x-enum-varnames": [
                                          "ORGS"
                                        ]
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "other_orgs": {
                                "description": "Relationship to organizations.",
                                "properties": {
                                  "data": {
                                    "description": "Relationships to organization objects.",
                                    "items": {
                                      "description": "Relationship to organization object.",
                                      "properties": {
                                        "id": {
                                          "description": "ID of the organization.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "orgs",
                                          "description": "Organizations resource type.",
                                          "enum": [
                                            "orgs"
                                          ],
                                          "example": "orgs",
                                          "type": "string",
                                          "x-enum-varnames": [
                                            "ORGS"
                                          ]
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              "other_users": {
                                "description": "Relationship to users.",
                                "properties": {
                                  "data": {
                                    "description": "Relationships to user objects.",
                                    "items": {
                                      "description": "Relationship to user object.",
                                      "properties": {
                                        "id": {
                                          "description": "ID of the user.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "users",
                                          "description": "Users type.",
                                          "readOnly": true,
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              "roles": {
                                "description": "Relationship to roles.",
                                "properties": {
                                  "data": {
                                    "description": "An array containing type and ID of a role.",
                                    "items": {
                                      "description": "Relationship to role object.",
                                      "properties": {
                                        "id": {
                                          "description": "ID of the role.",
                                          "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "roles",
                                          "description": "Roles type.",
                                          "enum": [
                                            "roles"
                                          ],
                                          "example": "roles",
                                          "type": "string",
                                          "x-enum-varnames": [
                                            "ROLES"
                                          ]
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "default": "users",
                            "description": "Users resource type.",
                            "enum": [
                              "users"
                            ],
                            "type": "string",
                            "x-enum-varnames": [
                              "USERS"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "included": {
                      "description": "Array of objects related to the users.",
                      "items": {
                        "description": "An object related to a user.",
                        "oneOf": [
                          {
                            "description": "Organization object.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of the organization.",
                                "properties": {
                                  "created_at": {
                                    "description": "Creation time of the organization.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Description of the organization.",
                                    "type": "string"
                                  },
                                  "disabled": {
                                    "description": "Whether or not the organization is disabled.",
                                    "type": "boolean"
                                  },
                                  "modified_at": {
                                    "description": "Time of last organization modification.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the organization.",
                                    "type": "string"
                                  },
                                  "public_id": {
                                    "description": "Public ID of the organization.",
                                    "type": "string"
                                  },
                                  "sharing": {
                                    "description": "Sharing type of the organization.",
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "URL of the site that this organization exists at.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the organization.",
                                "type": "string"
                              },
                              "type": {
                                "default": "orgs",
                                "description": "Organizations resource type.",
                                "enum": [
                                  "orgs"
                                ],
                                "example": "orgs",
                                "type": "string",
                                "x-enum-varnames": [
                                  "ORGS"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Permission object.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of a permission.",
                                "properties": {
                                  "created": {
                                    "description": "Creation time of the permission.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Description of the permission.",
                                    "type": "string"
                                  },
                                  "display_name": {
                                    "description": "Displayed name for the permission.",
                                    "type": "string"
                                  },
                                  "display_type": {
                                    "description": "Display type.",
                                    "type": "string"
                                  },
                                  "group_name": {
                                    "description": "Name of the permission group.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the permission.",
                                    "type": "string"
                                  },
                                  "restricted": {
                                    "description": "Whether or not the permission is restricted.",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the permission.",
                                "type": "string"
                              },
                              "type": {
                                "default": "permissions",
                                "description": "Permissions resource type.",
                                "enum": [
                                  "permissions"
                                ],
                                "example": "permissions",
                                "type": "string",
                                "x-enum-varnames": [
                                  "PERMISSIONS"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Role object returned by the API.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of the role.",
                                "properties": {
                                  "created_at": {
                                    "description": "Creation time of the role.",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "modified_at": {
                                    "description": "Time of last role modification.",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the role.",
                                    "type": "string"
                                  },
                                  "user_count": {
                                    "description": "Number of users with that role.",
                                    "format": "int64",
                                    "readOnly": true,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the role.",
                                "type": "string"
                              },
                              "relationships": {
                                "description": "Relationships of the role object returned by the API.",
                                "properties": {
                                  "permissions": {
                                    "description": "Relationship to multiple permissions objects.",
                                    "properties": {
                                      "data": {
                                        "description": "Relationships to permission objects.",
                                        "items": {
                                          "description": "Relationship to permission object.",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the permission.",
                                              "type": "string"
                                            },
                                            "type": {
                                              "default": "permissions",
                                              "description": "Permissions resource type.",
                                              "enum": [
                                                "permissions"
                                              ],
                                              "example": "permissions",
                                              "type": "string",
                                              "x-enum-varnames": [
                                                "PERMISSIONS"
                                              ]
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "default": "roles",
                                "description": "Roles type.",
                                "enum": [
                                  "roles"
                                ],
                                "example": "roles",
                                "type": "string",
                                "x-enum-varnames": [
                                  "ROLES"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          }
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "description": "Object describing meta attributes of response.",
                      "properties": {
                        "page": {
                          "description": "Pagination object.",
                          "properties": {
                            "total_count": {
                              "description": "Total count.",
                              "format": "int64",
                              "type": "integer"
                            },
                            "total_filtered_count": {
                              "description": "Total count of elements matched by the filter.",
                              "format": "int64",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "applcation/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "applcation/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "summary": "List all users",
        "tags": [
          "Users"
        ],
        "x-codegen-request-body-name": "body"
      },
      "post": {
        "description": "Create a user for your organization.",
        "operationId": "CreateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Create a user.",
                "properties": {
                  "data": {
                    "description": "Object to create a user.",
                    "properties": {
                      "attributes": {
                        "description": "Attributes of the created user.",
                        "properties": {
                          "email": {
                            "description": "The email of the user.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the user.",
                            "type": "string"
                          },
                          "title": {
                            "description": "The title of the user.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "relationships": {
                        "description": "Relationships of the user object.",
                        "properties": {
                          "roles": {
                            "description": "Relationship to roles.",
                            "properties": {
                              "data": {
                                "description": "An array containing type and ID of a role.",
                                "items": {
                                  "description": "Relationship to role object.",
                                  "properties": {
                                    "id": {
                                      "description": "ID of the role.",
                                      "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                                      "type": "string"
                                    },
                                    "type": {
                                      "default": "roles",
                                      "description": "Roles type.",
                                      "enum": [
                                        "roles"
                                      ],
                                      "example": "roles",
                                      "type": "string",
                                      "x-enum-varnames": [
                                        "ROLES"
                                      ]
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "type": {
                        "default": "users",
                        "description": "Users resource type.",
                        "enum": [
                          "users"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                          "USERS"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about a single user.",
                  "properties": {
                    "data": {
                      "description": "User object returned by the API.",
                      "properties": {
                        "attributes": {
                          "description": "Attributes of user object returned by the API.",
                          "properties": {
                            "created_at": {
                              "description": "Creation time of the user.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "disabled": {
                              "description": "Whether the user is disabled.",
                              "type": "boolean"
                            },
                            "email": {
                              "description": "Email of the user.",
                              "type": "string"
                            },
                            "handle": {
                              "description": "Handle of the user.",
                              "type": "string"
                            },
                            "icon": {
                              "description": "URL of the user's icon.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the user.",
                              "type": "string"
                            },
                            "status": {
                              "description": "Status of the user.",
                              "type": "string"
                            },
                            "title": {
                              "description": "Title of the user.",
                              "type": "string"
                            },
                            "verified": {
                              "description": "Whether the user is verified.",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "ID of the user.",
                          "type": "string"
                        },
                        "relationships": {
                          "description": "Relationships of the user object returned by the API.",
                          "properties": {
                            "org": {
                              "description": "Relationship to an organization.",
                              "properties": {
                                "data": {
                                  "description": "Relationship to organization object.",
                                  "properties": {
                                    "id": {
                                      "description": "ID of the organization.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "default": "orgs",
                                      "description": "Organizations resource type.",
                                      "enum": [
                                        "orgs"
                                      ],
                                      "example": "orgs",
                                      "type": "string",
                                      "x-enum-varnames": [
                                        "ORGS"
                                      ]
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "other_orgs": {
                              "description": "Relationship to organizations.",
                              "properties": {
                                "data": {
                                  "description": "Relationships to organization objects.",
                                  "items": {
                                    "description": "Relationship to organization object.",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the organization.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "orgs",
                                        "description": "Organizations resource type.",
                                        "enum": [
                                          "orgs"
                                        ],
                                        "example": "orgs",
                                        "type": "string",
                                        "x-enum-varnames": [
                                          "ORGS"
                                        ]
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "other_users": {
                              "description": "Relationship to users.",
                              "properties": {
                                "data": {
                                  "description": "Relationships to user objects.",
                                  "items": {
                                    "description": "Relationship to user object.",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the user.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "users",
                                        "description": "Users type.",
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "roles": {
                              "description": "Relationship to roles.",
                              "properties": {
                                "data": {
                                  "description": "An array containing type and ID of a role.",
                                  "items": {
                                    "description": "Relationship to role object.",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the role.",
                                        "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "roles",
                                        "description": "Roles type.",
                                        "enum": [
                                          "roles"
                                        ],
                                        "example": "roles",
                                        "type": "string",
                                        "x-enum-varnames": [
                                          "ROLES"
                                        ]
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "default": "users",
                          "description": "Users resource type.",
                          "enum": [
                            "users"
                          ],
                          "type": "string",
                          "x-enum-varnames": [
                            "USERS"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "included": {
                      "description": "Array of objects related to the user.",
                      "items": {
                        "description": "An object related to a user.",
                        "oneOf": [
                          {
                            "description": "Organization object.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of the organization.",
                                "properties": {
                                  "created_at": {
                                    "description": "Creation time of the organization.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Description of the organization.",
                                    "type": "string"
                                  },
                                  "disabled": {
                                    "description": "Whether or not the organization is disabled.",
                                    "type": "boolean"
                                  },
                                  "modified_at": {
                                    "description": "Time of last organization modification.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the organization.",
                                    "type": "string"
                                  },
                                  "public_id": {
                                    "description": "Public ID of the organization.",
                                    "type": "string"
                                  },
                                  "sharing": {
                                    "description": "Sharing type of the organization.",
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "URL of the site that this organization exists at.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the organization.",
                                "type": "string"
                              },
                              "type": {
                                "default": "orgs",
                                "description": "Organizations resource type.",
                                "enum": [
                                  "orgs"
                                ],
                                "example": "orgs",
                                "type": "string",
                                "x-enum-varnames": [
                                  "ORGS"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Permission object.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of a permission.",
                                "properties": {
                                  "created": {
                                    "description": "Creation time of the permission.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Description of the permission.",
                                    "type": "string"
                                  },
                                  "display_name": {
                                    "description": "Displayed name for the permission.",
                                    "type": "string"
                                  },
                                  "display_type": {
                                    "description": "Display type.",
                                    "type": "string"
                                  },
                                  "group_name": {
                                    "description": "Name of the permission group.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the permission.",
                                    "type": "string"
                                  },
                                  "restricted": {
                                    "description": "Whether or not the permission is restricted.",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the permission.",
                                "type": "string"
                              },
                              "type": {
                                "default": "permissions",
                                "description": "Permissions resource type.",
                                "enum": [
                                  "permissions"
                                ],
                                "example": "permissions",
                                "type": "string",
                                "x-enum-varnames": [
                                  "PERMISSIONS"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Role object returned by the API.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of the role.",
                                "properties": {
                                  "created_at": {
                                    "description": "Creation time of the role.",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "modified_at": {
                                    "description": "Time of last role modification.",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the role.",
                                    "type": "string"
                                  },
                                  "user_count": {
                                    "description": "Number of users with that role.",
                                    "format": "int64",
                                    "readOnly": true,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the role.",
                                "type": "string"
                              },
                              "relationships": {
                                "description": "Relationships of the role object returned by the API.",
                                "properties": {
                                  "permissions": {
                                    "description": "Relationship to multiple permissions objects.",
                                    "properties": {
                                      "data": {
                                        "description": "Relationships to permission objects.",
                                        "items": {
                                          "description": "Relationship to permission object.",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the permission.",
                                              "type": "string"
                                            },
                                            "type": {
                                              "default": "permissions",
                                              "description": "Permissions resource type.",
                                              "enum": [
                                                "permissions"
                                              ],
                                              "example": "permissions",
                                              "type": "string",
                                              "x-enum-varnames": [
                                                "PERMISSIONS"
                                              ]
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "default": "roles",
                                "description": "Roles type.",
                                "enum": [
                                  "roles"
                                ],
                                "example": "roles",
                                "type": "string",
                                "x-enum-varnames": [
                                  "ROLES"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          }
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "summary": "Create a user",
        "tags": [
          "Users"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v2/users/{user_id}": {
      "delete": {
        "description": "Disable a user. Can only be used with an application key belonging to an administrator user.",
        "operationId": "DisableUser",
        "parameters": [
          {
            "description": "The ID of the user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Disable a user",
        "tags": [
          "Users"
        ],
        "x-codegen-request-body-name": "body"
      },
      "get": {
        "description": "Get a user in the organization specified by the user’s `user_id`.",
        "operationId": "GetUser",
        "parameters": [
          {
            "description": "The ID of the user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about a single user.",
                  "properties": {
                    "data": {
                      "description": "User object returned by the API.",
                      "properties": {
                        "attributes": {
                          "description": "Attributes of user object returned by the API.",
                          "properties": {
                            "created_at": {
                              "description": "Creation time of the user.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "disabled": {
                              "description": "Whether the user is disabled.",
                              "type": "boolean"
                            },
                            "email": {
                              "description": "Email of the user.",
                              "type": "string"
                            },
                            "handle": {
                              "description": "Handle of the user.",
                              "type": "string"
                            },
                            "icon": {
                              "description": "URL of the user's icon.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the user.",
                              "type": "string"
                            },
                            "status": {
                              "description": "Status of the user.",
                              "type": "string"
                            },
                            "title": {
                              "description": "Title of the user.",
                              "type": "string"
                            },
                            "verified": {
                              "description": "Whether the user is verified.",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "ID of the user.",
                          "type": "string"
                        },
                        "relationships": {
                          "description": "Relationships of the user object returned by the API.",
                          "properties": {
                            "org": {
                              "description": "Relationship to an organization.",
                              "properties": {
                                "data": {
                                  "description": "Relationship to organization object.",
                                  "properties": {
                                    "id": {
                                      "description": "ID of the organization.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "default": "orgs",
                                      "description": "Organizations resource type.",
                                      "enum": [
                                        "orgs"
                                      ],
                                      "example": "orgs",
                                      "type": "string",
                                      "x-enum-varnames": [
                                        "ORGS"
                                      ]
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "other_orgs": {
                              "description": "Relationship to organizations.",
                              "properties": {
                                "data": {
                                  "description": "Relationships to organization objects.",
                                  "items": {
                                    "description": "Relationship to organization object.",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the organization.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "orgs",
                                        "description": "Organizations resource type.",
                                        "enum": [
                                          "orgs"
                                        ],
                                        "example": "orgs",
                                        "type": "string",
                                        "x-enum-varnames": [
                                          "ORGS"
                                        ]
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "other_users": {
                              "description": "Relationship to users.",
                              "properties": {
                                "data": {
                                  "description": "Relationships to user objects.",
                                  "items": {
                                    "description": "Relationship to user object.",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the user.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "users",
                                        "description": "Users type.",
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "roles": {
                              "description": "Relationship to roles.",
                              "properties": {
                                "data": {
                                  "description": "An array containing type and ID of a role.",
                                  "items": {
                                    "description": "Relationship to role object.",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the role.",
                                        "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "roles",
                                        "description": "Roles type.",
                                        "enum": [
                                          "roles"
                                        ],
                                        "example": "roles",
                                        "type": "string",
                                        "x-enum-varnames": [
                                          "ROLES"
                                        ]
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "default": "users",
                          "description": "Users resource type.",
                          "enum": [
                            "users"
                          ],
                          "type": "string",
                          "x-enum-varnames": [
                            "USERS"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "included": {
                      "description": "Array of objects related to the user.",
                      "items": {
                        "description": "An object related to a user.",
                        "oneOf": [
                          {
                            "description": "Organization object.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of the organization.",
                                "properties": {
                                  "created_at": {
                                    "description": "Creation time of the organization.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Description of the organization.",
                                    "type": "string"
                                  },
                                  "disabled": {
                                    "description": "Whether or not the organization is disabled.",
                                    "type": "boolean"
                                  },
                                  "modified_at": {
                                    "description": "Time of last organization modification.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the organization.",
                                    "type": "string"
                                  },
                                  "public_id": {
                                    "description": "Public ID of the organization.",
                                    "type": "string"
                                  },
                                  "sharing": {
                                    "description": "Sharing type of the organization.",
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "URL of the site that this organization exists at.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the organization.",
                                "type": "string"
                              },
                              "type": {
                                "default": "orgs",
                                "description": "Organizations resource type.",
                                "enum": [
                                  "orgs"
                                ],
                                "example": "orgs",
                                "type": "string",
                                "x-enum-varnames": [
                                  "ORGS"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Permission object.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of a permission.",
                                "properties": {
                                  "created": {
                                    "description": "Creation time of the permission.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Description of the permission.",
                                    "type": "string"
                                  },
                                  "display_name": {
                                    "description": "Displayed name for the permission.",
                                    "type": "string"
                                  },
                                  "display_type": {
                                    "description": "Display type.",
                                    "type": "string"
                                  },
                                  "group_name": {
                                    "description": "Name of the permission group.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the permission.",
                                    "type": "string"
                                  },
                                  "restricted": {
                                    "description": "Whether or not the permission is restricted.",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the permission.",
                                "type": "string"
                              },
                              "type": {
                                "default": "permissions",
                                "description": "Permissions resource type.",
                                "enum": [
                                  "permissions"
                                ],
                                "example": "permissions",
                                "type": "string",
                                "x-enum-varnames": [
                                  "PERMISSIONS"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Role object returned by the API.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of the role.",
                                "properties": {
                                  "created_at": {
                                    "description": "Creation time of the role.",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "modified_at": {
                                    "description": "Time of last role modification.",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the role.",
                                    "type": "string"
                                  },
                                  "user_count": {
                                    "description": "Number of users with that role.",
                                    "format": "int64",
                                    "readOnly": true,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the role.",
                                "type": "string"
                              },
                              "relationships": {
                                "description": "Relationships of the role object returned by the API.",
                                "properties": {
                                  "permissions": {
                                    "description": "Relationship to multiple permissions objects.",
                                    "properties": {
                                      "data": {
                                        "description": "Relationships to permission objects.",
                                        "items": {
                                          "description": "Relationship to permission object.",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the permission.",
                                              "type": "string"
                                            },
                                            "type": {
                                              "default": "permissions",
                                              "description": "Permissions resource type.",
                                              "enum": [
                                                "permissions"
                                              ],
                                              "example": "permissions",
                                              "type": "string",
                                              "x-enum-varnames": [
                                                "PERMISSIONS"
                                              ]
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "default": "roles",
                                "description": "Roles type.",
                                "enum": [
                                  "roles"
                                ],
                                "example": "roles",
                                "type": "string",
                                "x-enum-varnames": [
                                  "ROLES"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          }
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK for get user"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get a user",
        "tags": [
          "Users"
        ],
        "x-codegen-request-body-name": "body"
      },
      "patch": {
        "description": "Edit a user. Can only be used with an application key belonging to an administrator user.",
        "operationId": "UpdateUser",
        "parameters": [
          {
            "description": "The ID of the user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Update a user.",
                "properties": {
                  "data": {
                    "description": "Object to update a user.",
                    "properties": {
                      "attributes": {
                        "description": "Attributes of the edited user.",
                        "properties": {
                          "disabled": {
                            "description": "If the user is enabled or disabled.",
                            "type": "boolean"
                          },
                          "email": {
                            "description": "The email of the user.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the user.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "description": "ID of the user.",
                        "type": "string"
                      },
                      "type": {
                        "default": "users",
                        "description": "Users resource type.",
                        "enum": [
                          "users"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                          "USERS"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "Update a user",
        "tags": [
          "Users"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v2/users/{user_id}/orgs": {
      "get": {
        "description": "Get a user organization. Returns the user information and all organizations joined by this user.",
        "operationId": "ListUserOrganizations",
        "parameters": [
          {
            "description": "The ID of the user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Response containing information about a single user.",
                  "properties": {
                    "data": {
                      "description": "User object returned by the API.",
                      "properties": {
                        "attributes": {
                          "description": "Attributes of user object returned by the API.",
                          "properties": {
                            "created_at": {
                              "description": "Creation time of the user.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "disabled": {
                              "description": "Whether the user is disabled.",
                              "type": "boolean"
                            },
                            "email": {
                              "description": "Email of the user.",
                              "type": "string"
                            },
                            "handle": {
                              "description": "Handle of the user.",
                              "type": "string"
                            },
                            "icon": {
                              "description": "URL of the user's icon.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the user.",
                              "type": "string"
                            },
                            "status": {
                              "description": "Status of the user.",
                              "type": "string"
                            },
                            "title": {
                              "description": "Title of the user.",
                              "type": "string"
                            },
                            "verified": {
                              "description": "Whether the user is verified.",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "ID of the user.",
                          "type": "string"
                        },
                        "relationships": {
                          "description": "Relationships of the user object returned by the API.",
                          "properties": {
                            "org": {
                              "description": "Relationship to an organization.",
                              "properties": {
                                "data": {
                                  "description": "Relationship to organization object.",
                                  "properties": {
                                    "id": {
                                      "description": "ID of the organization.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "default": "orgs",
                                      "description": "Organizations resource type.",
                                      "enum": [
                                        "orgs"
                                      ],
                                      "example": "orgs",
                                      "type": "string",
                                      "x-enum-varnames": [
                                        "ORGS"
                                      ]
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "other_orgs": {
                              "description": "Relationship to organizations.",
                              "properties": {
                                "data": {
                                  "description": "Relationships to organization objects.",
                                  "items": {
                                    "description": "Relationship to organization object.",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the organization.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "orgs",
                                        "description": "Organizations resource type.",
                                        "enum": [
                                          "orgs"
                                        ],
                                        "example": "orgs",
                                        "type": "string",
                                        "x-enum-varnames": [
                                          "ORGS"
                                        ]
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "other_users": {
                              "description": "Relationship to users.",
                              "properties": {
                                "data": {
                                  "description": "Relationships to user objects.",
                                  "items": {
                                    "description": "Relationship to user object.",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the user.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "users",
                                        "description": "Users type.",
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "roles": {
                              "description": "Relationship to roles.",
                              "properties": {
                                "data": {
                                  "description": "An array containing type and ID of a role.",
                                  "items": {
                                    "description": "Relationship to role object.",
                                    "properties": {
                                      "id": {
                                        "description": "ID of the role.",
                                        "example": "3653d3c6-0c75-11ea-ad28-fb5701eabc7d",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "roles",
                                        "description": "Roles type.",
                                        "enum": [
                                          "roles"
                                        ],
                                        "example": "roles",
                                        "type": "string",
                                        "x-enum-varnames": [
                                          "ROLES"
                                        ]
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "default": "users",
                          "description": "Users resource type.",
                          "enum": [
                            "users"
                          ],
                          "type": "string",
                          "x-enum-varnames": [
                            "USERS"
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "included": {
                      "description": "Array of objects related to the user.",
                      "items": {
                        "description": "An object related to a user.",
                        "oneOf": [
                          {
                            "description": "Organization object.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of the organization.",
                                "properties": {
                                  "created_at": {
                                    "description": "Creation time of the organization.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Description of the organization.",
                                    "type": "string"
                                  },
                                  "disabled": {
                                    "description": "Whether or not the organization is disabled.",
                                    "type": "boolean"
                                  },
                                  "modified_at": {
                                    "description": "Time of last organization modification.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the organization.",
                                    "type": "string"
                                  },
                                  "public_id": {
                                    "description": "Public ID of the organization.",
                                    "type": "string"
                                  },
                                  "sharing": {
                                    "description": "Sharing type of the organization.",
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "URL of the site that this organization exists at.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the organization.",
                                "type": "string"
                              },
                              "type": {
                                "default": "orgs",
                                "description": "Organizations resource type.",
                                "enum": [
                                  "orgs"
                                ],
                                "example": "orgs",
                                "type": "string",
                                "x-enum-varnames": [
                                  "ORGS"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Permission object.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of a permission.",
                                "properties": {
                                  "created": {
                                    "description": "Creation time of the permission.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Description of the permission.",
                                    "type": "string"
                                  },
                                  "display_name": {
                                    "description": "Displayed name for the permission.",
                                    "type": "string"
                                  },
                                  "display_type": {
                                    "description": "Display type.",
                                    "type": "string"
                                  },
                                  "group_name": {
                                    "description": "Name of the permission group.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the permission.",
                                    "type": "string"
                                  },
                                  "restricted": {
                                    "description": "Whether or not the permission is restricted.",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the permission.",
                                "type": "string"
                              },
                              "type": {
                                "default": "permissions",
                                "description": "Permissions resource type.",
                                "enum": [
                                  "permissions"
                                ],
                                "example": "permissions",
                                "type": "string",
                                "x-enum-varnames": [
                                  "PERMISSIONS"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Role object returned by the API.",
                            "properties": {
                              "attributes": {
                                "description": "Attributes of the role.",
                                "properties": {
                                  "created_at": {
                                    "description": "Creation time of the role.",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "modified_at": {
                                    "description": "Time of last role modification.",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the role.",
                                    "type": "string"
                                  },
                                  "user_count": {
                                    "description": "Number of users with that role.",
                                    "format": "int64",
                                    "readOnly": true,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "ID of the role.",
                                "type": "string"
                              },
                              "relationships": {
                                "description": "Relationships of the role object returned by the API.",
                                "properties": {
                                  "permissions": {
                                    "description": "Relationship to multiple permissions objects.",
                                    "properties": {
                                      "data": {
                                        "description": "Relationships to permission objects.",
                                        "items": {
                                          "description": "Relationship to permission object.",
                                          "properties": {
                                            "id": {
                                              "description": "ID of the permission.",
                                              "type": "string"
                                            },
                                            "type": {
                                              "default": "permissions",
                                              "description": "Permissions resource type.",
                                              "enum": [
                                                "permissions"
                                              ],
                                              "example": "permissions",
                                              "type": "string",
                                              "x-enum-varnames": [
                                                "PERMISSIONS"
                                              ]
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "default": "roles",
                                "description": "Roles type.",
                                "enum": [
                                  "roles"
                                ],
                                "example": "roles",
                                "type": "string",
                                "x-enum-varnames": [
                                  "ROLES"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          }
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get a user organization",
        "tags": [
          "Users"
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v2/users/{user_id}/permissions": {
      "get": {
        "description": "Get a user permission set. Returns a list of the user’s permissions granted by the associated user's roles.",
        "operationId": "ListUserPermissions",
        "parameters": [
          {
            "description": "The ID of the user.",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Payload with API-returned permissions.",
                  "properties": {
                    "data": {
                      "description": "Array of permissions.",
                      "items": {
                        "description": "Permission object.",
                        "properties": {
                          "attributes": {
                            "description": "Attributes of a permission.",
                            "properties": {
                              "created": {
                                "description": "Creation time of the permission.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description of the permission.",
                                "type": "string"
                              },
                              "display_name": {
                                "description": "Displayed name for the permission.",
                                "type": "string"
                              },
                              "display_type": {
                                "description": "Display type.",
                                "type": "string"
                              },
                              "group_name": {
                                "description": "Name of the permission group.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the permission.",
                                "type": "string"
                              },
                              "restricted": {
                                "description": "Whether or not the permission is restricted.",
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "id": {
                            "description": "ID of the permission.",
                            "type": "string"
                          },
                          "type": {
                            "default": "permissions",
                            "description": "Permissions resource type.",
                            "enum": [
                              "permissions"
                            ],
                            "example": "permissions",
                            "type": "string",
                            "x-enum-varnames": [
                              "PERMISSIONS"
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "API error response.",
                  "properties": {
                    "errors": {
                      "description": "A list of errors.",
                      "items": {
                        "description": "A list of items.",
                        "example": "Bad Request",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get a user permissions",
        "tags": [
          "Users"
        ],
        "x-codegen-request-body-name": "body"
      }
    }
  },
  "security": [
    {
      "apiKeyAuth": [],
      "appKeyAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://{subdomain}.{site}",
      "variables": {
        "site": {
          "default": "datadoghq.com",
          "description": "The regional site for our customers.",
          "enum": [
            "datadoghq.com",
            "datadoghq.eu"
          ]
        },
        "subdomain": {
          "default": "api",
          "description": "The subdomain where the API is deployed."
        }
      }
    },
    {
      "url": "{protocol}://{name}",
      "variables": {
        "name": {
          "default": "api.datadoghq.com",
          "description": "Full site DNS name."
        },
        "protocol": {
          "default": "https",
          "description": "The protocol for accessing the API."
        }
      }
    }
  ],
  "tags": [
    {
      "description": "[See API version 1](/api/v1/aws-integration/).",
      "name": "AWS Integration"
    },
    {
      "description": "[See API version 1](/api/v1/aws-logs-integration/).",
      "name": "AWS Logs Integration"
    },
    {
      "description": "All requests to Datadog’s API must be authenticated.\nRequests that write data require reporting access and require an `API key`.\nRequests that read data require full access and also require an `application key`.\n\n**Note:** All Datadog API clients are configured by default to consume Datadog US site APIs.\nIf you are on the Datadog EU site, set the environment variable `DATADOG_HOST` to\n`https://api.datadoghq.eu` or override this value directly when creating your client.\n\n[Manage your account’s API and application keys](https://app.datadoghq.com/account/settings#api).\n\n## Validate API key\n\n[See API version 1](/api/v1/authentication/#validate-api-key).",
      "name": "Authentication"
    },
    {
      "description": "[See API version 1](/api/v1/azure-integration/).",
      "name": "Azure Integration"
    },
    {
      "description": "Interact with your dashboard lists through the API to make it easier to\norganize, find, and share all of your dashboards with your team and\norganization.",
      "name": "Dashboard Lists"
    },
    {
      "description": "[See API version 1](/api/v1/dashboards/).",
      "name": "Dashboards"
    },
    {
      "description": "[See API version 1](/api/v1/downtimes/).",
      "name": "Downtimes"
    },
    {
      "description": "[See API version 1](/api/v1/embeddable-graphs/).",
      "name": "Embeddable Graphs"
    },
    {
      "description": "[See API version 1](/api/v1/events/).",
      "name": "Events"
    },
    {
      "description": "[See API version 1](/api/v1/gcp-integration/).",
      "name": "GCP Integration"
    },
    {
      "description": "[See API version 1](/api/v1/hosts/).",
      "name": "Hosts"
    },
    {
      "description": "[See API version 1](/api/v1/ip-ranges/).",
      "name": "IP Ranges"
    },
    {
      "description": "[See API version 1](/api/v1/key-management/).",
      "name": "Key Management"
    },
    {
      "description": "[See API version 1](/api/v1/logs/).",
      "name": "Logs"
    },
    {
      "description": "Archives forward all the logs ingested to a cloud storage system.\n\nSee the [Archives Page](https://app.datadoghq.com/logs/pipelines/archives)\nfor a list of the archives currently configured in our UI.",
      "externalDocs": {
        "description": "Find out more at",
        "url": "https://docs.datadoghq.com/logs/archives/"
      },
      "name": "Logs Archives"
    },
    {
      "description": "[See API version 1](/api/v1/logs-indexes/).",
      "name": "Logs Indexes"
    },
    {
      "description": "[See API version 1](/api/v1/logs-pipelines/).",
      "name": "Logs Pipelines"
    },
    {
      "description": "**Note: This endpoint is in public beta. If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).**\n\nTo grant read access on log data at all, you must grant the `logs_read_data` permission.\nFrom there you can limit what data a role grants read access to by associating a Restriction Query with that role.\n\nA Restriction Query is a logs query that restricts which logs the `logs_read_data` permission grants read access to.\nFor users whose roles have Restriction Queries, any log query they make only returns those log events that also match\none of their Restriction Queries. This is true whether the user queries log events from any log-related feature, including\nthe log explorer, Live Tail, re-hydration, or a dashboard widget.\n\nRestriction Queries currently only support use of the following components of log events:\n\n- Reserved attributes\n- The log message\n- Tags\n\nThe recommended way to manage restricted read access on log data for customers with large or complicated organizational structures\nis to add a team tag to log events to indicate which team(s) own(s) them, and then to scope Restriction Queries to the appropriate\nvalues of the team tag. Tags can be applied to log events in many ways, and a log event can have multiple tags with the same key (like team)\nand different values—in this way the same log event can be visible to roles whose restriction queries are scoped to different team values.",
      "name": "Logs Restriction Queries"
    },
    {
      "description": "[See API version 1](/api/v1/metrics/).",
      "name": "Metrics"
    },
    {
      "description": "[See API version 1](/api/v1/monitors/).",
      "name": "Monitors"
    },
    {
      "description": "[See API version 1](/api/v1/organizations/).",
      "name": "Organizations"
    },
    {
      "description": "[See API version 1](/api/v1/pagerduty-integration/).",
      "name": "PagerDuty Integration"
    },
    {
      "description": "The Roles API is used to create and manage Datadog roles, what\n[global permissions](https://docs.datadoghq.com/account_management/rbac/)\nthey grant, and which users belong to them.\n\nPermissions related to specific account assets can be granted to roles\nin the Datadog application without using this API. For example, granting\nread access on a specific log index to a role can be done in Datadog from the\n[Pipelines page](https://app.datadoghq.com/logs/pipelines).",
      "name": "Roles"
    },
    {
      "description": "[See API version 1](/api/v1/screenboards/).",
      "name": "Screenboards"
    },
    {
      "description": "Detection Rules for generating signals",
      "name": "Security Monitoring"
    },
    {
      "description": "[See API version 1](/api/v1/service-checks/).",
      "name": "Service Checks"
    },
    {
      "description": "[See API version 1](/api/v1/service-dependencies/).",
      "name": "Service Dependencies"
    },
    {
      "description": "[See API version 1](/api/v1/service-level-objectives/).",
      "name": "Service Level Objectives"
    },
    {
      "description": "[See API version 1](/api/v1/slack-integration/).",
      "name": "Slack Integration"
    },
    {
      "description": "[See API version 1](/api/v1/snapshots/).",
      "name": "Snapshots"
    },
    {
      "description": "[See API version 1](/api/v1/synthetics/).",
      "name": "Synthetics"
    },
    {
      "description": "[See API version 1](/api/v1/tags/).",
      "name": "Tags"
    },
    {
      "description": "[See API version 1](/api/v1/timeboards/).",
      "name": "Timeboards"
    },
    {
      "description": "[See API version 1](/api/v1/tracing/).",
      "name": "Tracing"
    },
    {
      "description": "[See API version 1](/api/v1/usage-metering/).",
      "name": "Usage Metering"
    },
    {
      "description": "Create, edit, and disable users.",
      "externalDocs": {
        "url": "https://docs.datadoghq.com/account_management/users"
      },
      "name": "Users"
    },
    {
      "description": "[See API version 1](/api/v1/webhooks-integration/).",
      "name": "Webhooks Integration"
    }
  ],
  "x-group-parameters": true
}