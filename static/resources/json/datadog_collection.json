{
	"info": {
		"_postman_id": "2f439139-33c5-4f05-8fec-940d9f8d398e",
		"name": "Datadog API Collection",
		"description": "Collection of all Datadog Public endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Authentication Check",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/validate",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"validate"
							]
						},
						"description": "All requests to Datadog's API must be authenticated. Requests that write data require *reporting access* and require an `API key`. Requests that read data require *full access* and also require an `application key`.\n\n[Manage your account's API and application keys](https://app.datadoghq.com/account/settings#api).\n\nThis GET call just checks to see if an API call key is valid."
					},
					"response": [
						{
							"name": "Authentication Check Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/validate?api_key={{datadog_api_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"validate"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 07:29:50 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "14"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=; Max-Age=0; Path=/; expires=Sun, 14-Apr-2019 07:29:49 GMT"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1245690"
								},
								{
									"key": "X-DD-Debug",
									"value": "v/iGUuQ8dr8LTSC393ZDUCTpqtv8nSZ+kA85N+73L6NpoOgjcUF3OOQuvGc3I10Q"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"valid\": true\n}"
						}
					]
				}
			],
			"description": "All requests to Datadog's API must be authenticated. Requests that write data require reporting access and require an API key. Requests that read data require full access and also require an application key.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Checks",
			"item": [
				{
					"name": "Post a Check Status",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"check\": \"<CHECK_NAME>\",\n    \"host_name\": \"<HOSTNAME>\",\n    \"status\": 0,\n    \"timestamp\": {{$timestamp}},\n    \"message\": \"<MESSAGE>\",\n    \"tags\":\"<TAG_KEY>:<TAG_VALUE>\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/check_run",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"check_run"
							]
						},
						"description": "### Overview\n\nThis POST call allows for you to POST check statuses for use with monitors\n\n### Arguments\n\n* **`check`** *[required]*: The text for the message\n\n* **`host_name`** *[required]*: The name of the host submitting the check\n\n* **`status`** *[optional]*: An integer for the status of the check:\n    * 0 : OK\n    * 1 : WARNING\n    * 2 : CRITICAL\n    * 3 : UNKNOWN\n  \n\n* **`timestamp`** *[optional]*: POSIX timestamp of the event.\n\n* **`message`** *[optional]*:   A description of why this status occurred  \n\n* **`tags`** *[optional]*:  A list of key:val tags for this check"
					},
					"response": [
						{
							"name": "POST Check Status Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n      \"check\": \"app.is_ok\",\n      \"host_name\": \"app1\",\n      \"timestamp\": {{$timestamp}},\n      \"status\": 0,\n      \"tags\": [\"env:test\"]\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/check_run?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"check_run"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"status\": \"ok\"\n}"
						}
					]
				}
			],
			"description": "The service check endpoint allows you to post check statuses for use with [monitors](https://docs.datadoghq.com/monitors).\n\nService check messages are limited to 500 characters. If a check is posted with a message containing more than 500 characters, only the 500 first characters are displayed.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "bd2bd199-bd42-493e-ae4b-346d2942a969",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7fefd94a-c3c0-4d42-890d-e4caec89141d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Create a Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"<MESSAGE>\",\n    \"handle\": \"<DATADOG_HANDLE>\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/comments",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"comments"
							]
						},
						"description": "### Overview\n\nThis POST call allows for you to POST status messages, or reply to another thread (if related_event_id is passed)\n\nComments are essentially special forms of events that appear in the [event stream](https://docs.datadoghq.com/graphing/event_stream). They can start a new discussion thread or optionally, reply in another thread.\n\n### Arguments\n\n* **`message`** [*required*]: The comment text.\n\n* **`handle`** [*optional*, *default* = **application key owner**]: The handle of the user making the comment."
					},
					"response": [
						{
							"name": "Create a Comment Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"There is a problem with the database.\",\n    \"handle\": \"test@datadoghq.com\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/comments?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"comments"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"comment\": {\n        \"handle\": \"test@datadoghq.com\",\n        \"id\": 1382561676571697516,\n        \"message\": \"There is a problem with the database.\",\n        \"resource\": \"/api/v1/comments/1382561676571697516\",\n        \"url\": \"/event/jump_to?event_id=1382561676571697516\"\n    }\n}"
						},
						{
							"name": "400 - Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"<MESSAGE>\",\n    \"handle\": \"<DATADOG_HANDLE>\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/comments?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"comments"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:38:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "68"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        \"The value provided for parameter 'handle' is invalid\"\n    ]\n}"
						},
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"<MESSAGE>\",\n    \"handle\": \"test@datadoghq.com\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/comments?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"comments"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:39:04 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:39:03 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "6KMTMsFn0azCfQwSreWVM1dRjcjppIO02LqzrMPjk0hnBLuKtWs0FjCxblFGeg3A"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"comment\": {\n        \"url\": \"/event/event?id=4889126983613267970\",\n        \"resource\": \"/api/v1/comments/4889126983613267970\",\n        \"message\": \"<MESSAGE>\",\n        \"handle\": \"test@datadoghq.com\",\n        \"id\": 4889126983613267970\n    }\n}"
						}
					]
				},
				{
					"name": "Edit a Comment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"<NEW_COMMENT_MESSAGE>\",\n    \"handle\":\"<DATADOG_HANDLE>\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/comments/:COMMENT_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"comments",
								":COMMENT_ID"
							],
							"variable": [
								{
									"key": "COMMENT_ID",
									"value": "<EVENT_ID>",
									"type": "string",
									"description": "ID of the comment to edit."
								}
							]
						},
						"description": "### Overview\n\nThis POST call allows for you to change a previously posted comment by commentId\n\n### Arguments\n\n* **`message`** [*optional*, *default* = **original message**]: The comment text.\n\n* **`handle`** [*optional*, *default* = **Application key owner**]: The handle of the user making the comment."
					},
					"response": [
						{
							"name": "Edit a Comment Example",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"My new comment message.\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/comments/:EVENT_ID?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"comments",
										":EVENT_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}"
										}
									],
									"variable": [
										{
											"key": "EVENT_ID",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"comment\": {\n        \"handle\": \"test@datadoghq.com\",\n        \"id\": 1382557387240472966,\n        \"message\": \"My new comment message.\",\n        \"resource\": \"/api/v1/comments/1382557387240472966\",\n        \"url\": \"/event/jump_to?event_id=1382557387240472966\"\n    }\n}"
						},
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"<NEW_COMMENT_MESSAGE>\",\n    \"handle\":\"test@datadoghq.com\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/comments/:COMMENT_ID?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"comments",
										":COMMENT_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "COMMENT_ID",
											"value": "4889126983613267970",
											"description": "ID of the comment to edit."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"comment\": {\n        \"url\": \"/event/event?id=4889126983613267970\",\n        \"resource\": \"/api/v1/comments/4889126983613267970\",\n        \"message\": \"<NEW_COMMENT_MESSAGE>\",\n        \"handle\": \"test@datadoghq.com\",\n        \"id\": 4889126983613267970\n    }\n}"
						}
					]
				},
				{
					"name": "Reply To Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"<MESSAGE_REPLIED_TO_COMMENT>\",\n    \"handle\": \"<HANDLE>\",\n    \"related_event_id\": \"<INSERT_EVENT_ID>\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/comments",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"comments"
							]
						},
						"description": "### Overview\n\nThis POST call allows for you to POST status messages to a previous post via ID.\n\n### Arguments\n\n* **`message`** [*required*]: The comment text.\n\n* **`handle`** [*optional*, *default* = **application key owner**]: The handle of the user making the comment.\n\n* **`related_event_id`** [*optional*, *default* = **None**]: The id of another comment or event to reply to."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"<MESSAGE_REPLIED_TO_COMMENT>\",\n    \"handle\": \"<DATADOG_HANDLE>\",\n    \"related_event_id\": \"4889126983613267970\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/comments?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"comments"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:40:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:40:49 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "BFo5pkWZh/C2gN1EpK9/eHxq0sk6KtRHVoaKSOqTVZX9Uyn5F6EVjJv4RooV6bWP"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"comment\": {\n        \"resource\": \"/api/v1/comments/4889128764784349185\",\n        \"url\": \"/event/event?id=4889128764784349185\",\n        \"handle\": \"test_1@datadoghq.com\",\n        \"message\": \"<MESSAGE_REPLIED_TO_COMMENT>\",\n        \"related_event_id\": \"4889126983613267970\",\n        \"id\": 4889128764784349185\n    }\n}"
						}
					]
				}
			],
			"description": "Comments are how discussion happens on Datadog. Create, edit, delete and reply to comments.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "fa610237-8bee-4f93-beb5-368287a0d7b0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b16ec315-5627-4590-b686-8c4c0cd2e64e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Dashboards",
			"item": [
				{
					"name": "Create a Dashboard",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"<DASHBOARD_TITLE>\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"type\": \"timeseries\",\n                \"requests\": [\n                    {\n                        \"q\": \"avg:system.mem.free{*}\"\n                    }\n                ],\n                \"title\": \"Average Memory Free\"\n            }\n        }\n    ],\n    \"layout_type\": \"ordered\",\n    \"description\": \"<DASHBOARD_DESCRIPTION>\",\n    \"is_read_only\": true,\n    \"notify_list\": [\n        \"test@datadoghq.com\"\n    ],\n    \"template_variables\": [\n        {\n            \"name\": \"host\",\n            \"prefix\": \"host\",\n            \"default\": \"<HOSTNAME_1>\"\n        }\n    ],\n    \"template_variable_presets\": [\n        {\n            \"name\": \"Saved views for hostname 2\",\n            \"template_variables\": [\n                {\n                    \"name\": \"host\",\n                    \"value\": \"<HOSTNAME_2>\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/dashboard",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard"
							]
						},
						"description": "### Overview\n\nCreate a Dashboard in Datadog.\n\n### Arguments\n\n* **`title`** [*required*]: Title of the dashboard.\n* **`widgets`** [*required*]: List of widgets to display on the dashboard. Widget definitions follow this form:\n    * **`definition`** [*required*]: [Definition of the widget.](https://docs.datadoghq.com//graphing/widgets)\n    * **`id`** [*optional*, *default*=**auto-generated integer**]: ID of the widget.\n* **`layout_type`** [*required*]: Layout type of the dashboard. Available values are: `ordered` (previous timeboard) or `free` (previous screenboard layout)\n* **`description`** [*optional*, *default*=**None**]: Description of the dashboard.\n* **`is_read_only`** [*optional*, *default*=**False**]: Whether this dashboard is read-only. If `True`, only the author and admins can make changes to it.\n* **`notify_list`** [*optional*, *default*=**None**]: List of handles of users to notify when changes are made to this dashboard.\n* **`template_variables`** [*optional*, *default*=**None**]: List of template variables for this dashboard. Template variable definitions follow this form:\n    * **`name`** [*required*]: The name of the variable.\n    * **`default`** [*optional*, *default*=**None**]: The default value for the template variable on dashboard load.\n    * **`prefix`** [*optional*, *default*=**None**]: The tag prefix associated with the variable. Only tags with this prefix appear in the variable dropdown.\n* **`template_variable_presets`** [*optional*, *default*=**None**]:\n    Array of template variables saved views. Saved views definitions follow this form:\n    * **`name`** [*required*]:\n        The name of the saved view.\n    * **`template_variables`** [*optional*, *default*=**None**]:\n        Array of template variables that don't have their default value. Template variable definitions follow this form:\n      * **`name`** [*optional*, *default*=**None**]:\n        The name of the variable.\n      * **`value`** [*optional*, *default*=**None**]:\n        The value of the template variable within the saved view."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"<DASHBOARD_TITLE>\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"type\": \"timeseries\",\n                \"requests\": [\n                    {\n                        \"q\": \"avg:system.mem.free{*}\"\n                    }\n                ],\n                \"title\": \"Average Memory Free\"\n            }\n        }\n    ],\n    \"layout_type\": \"ordered\",\n    \"description\": \"<DASHBOARD_DESCRIPTION>\",\n    \"is_read_only\": true,\n    \"notify_list\": [\n        \"test@datadoghq.com\"\n    ],\n    \"template_variables\": [\n        {\n            \"name\": \"host1\",\n            \"prefix\": \"host\",\n            \"default\": \"myhost\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:35:20 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:35:20 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "ZpWsACBQpgzv2VsU5CX0YAFtJeXHfdBGLwHJddPqzsfv7Pqmq24zCPBMypS9HlbJ"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"notify_list\": [],\n    \"description\": \"<DASHBOARD_DESCRIPTION>\",\n    \"template_variables\": [\n        {\n            \"default\": \"myhost\",\n            \"prefix\": \"host\",\n            \"name\": \"host1\"\n        }\n    ],\n    \"is_read_only\": true,\n    \"id\": \"civ-zbj-ag5\",\n    \"title\": \"<DASHBOARD_TITLE>\",\n    \"url\": \"/dashboard/civ-zbj-ag5/dashboardtitle\",\n    \"created_at\": \"2019-04-19T12:35:20.490074+00:00\",\n    \"modified_at\": \"2019-04-19T12:35:20.490074+00:00\",\n    \"author_handle\": \"test@datadoghq.com\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"requests\": [\n                    {\n                        \"q\": \"avg:system.mem.free{*}\"\n                    }\n                ],\n                \"type\": \"timeseries\",\n                \"title\": \"Average Memory Free\"\n            },\n            \"id\": 8618605446924544\n        }\n    ],\n    \"layout_type\": \"ordered\"\n}"
						}
					]
				},
				{
					"name": "Update a Dashboard",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"<NEW_DASHBOARD_TITLE>\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"type\": \"timeseries\",\n                \"requests\": [\n                    {\n                        \"q\": \"sum:system.mem.free{*}\"\n                    }\n                ],\n                \"title\": \"Sum Memory Free Shell\"\n            }\n        }\n    ],\n    \"layout_type\": \"ordered\",\n    \"description\": \"An updated dashboard with memory info.\",\n    \"is_read_only\": true,\n    \"notify_list\": [\n        \"test@datadoghq.com\"\n    ],\n    \"template_variables\": [\n        {\n            \"name\": \"host\",\n            \"prefix\": \"host\",\n            \"default\": \"<HOSTNAME_1>\"\n        }\n    ],\n    \"template_variable_presets\": [\n        {\n            \"name\": \"Saved views for hostname 2\",\n            \"template_variables\": [\n                {\n                    \"name\": \"host\",\n                    \"value\": \"<HOSTNAME_2>\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/dashboard/:DASHBOARD_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								":DASHBOARD_ID"
							],
							"variable": [
								{
									"key": "DASHBOARD_ID",
									"value": "<DASHBOARD_ID>",
									"type": "string",
									"description": "ID of the Dashboard to update"
								}
							]
						},
						"description": "### Overview\n\nUpdate a Dashboard in Datadog.\n\n### Arguments\n\n* **`title`** [*required*]: Title of the dashboard.\n* **`widgets`** [*required*]: List of widgets to display on the dashboard. Widget definitions follow this form:\n    * **`definition`** [*required*]: [Definition of the widget.](https://docs.datadoghq.com/graphing/widgets)\n    * **`id`** [*optional*, *default*=**auto-generated integer**]: ID of the widget.\n* **`layout_type`** [*required*]: Layout type of the dashboard. Available values are: `ordered` (previous timeboard) or `free` (previous screenboard layout)\n* **`description`** [*optional*, *default*=**None**]: Description of the dashboard.\n* **`is_read_only`** [*optional*, *default*=**False**]: Whether this dashboard is read-only. If `True`, only the author and admins can make changes to it.\n* **`notify_list`** [*optional*, *default*=**None**]: List of handles of users to notify when changes are made to this dashboard.\n* **`template_variables`** [*optional*, *default*=**None**]: List of template variables for this dashboard. Template variable definitions follow this form:\n    * **`name`** [*required*]: The name of the variable.\n    * **`default`** [*optional*, *default*=**None**]: The default value for the template variable on dashboard load.\n    * **`prefix`** [*optional*, *default*=**None**]: The tag prefix associated with the variable. Only tags with this prefix appear in the variable dropdown.\n    \n* **`template_variable_presets`** [*optional*, *default*=**None**]:\n    Array of template variables saved views. Saved views definitions follow this form:\n    * **`name`** [*required*]:\n        The name of the saved view.\n    * **`template_variables`** [*optional*, *default*=**None**]:\n        Array of template variables that don't have their default value. Template variable definitions follow this form:\n      * **`name`** [*optional*, *default*=**None**]:\n        The name of the variable.\n      * **`value`** [*optional*, *default*=**None**]:\n        The value of the template variable within the saved view."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"<NEW_DASHBOARD_TITLE>\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"type\": \"timeseries\",\n                \"requests\": [\n                    {\n                        \"q\": \"sum:system.mem.free{*}\"\n                    }\n                ],\n                \"title\": \"Sum Memory Free Shell\"\n            }\n        }\n    ],\n    \"layout_type\": \"ordered\",\n    \"description\": \"An updated dashboard with memory info.\",\n    \"is_read_only\": true,\n    \"notify_list\": [\n        \"test@datadoghq.com\"\n    ],\n    \"template_variables\": [\n        {\n            \"name\": \"host1\",\n            \"prefix\": \"host\",\n            \"default\": \"myhost\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/:DASHBOARD_ID?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":DASHBOARD_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "DASHBOARD_ID",
											"value": "civ-zbj-ag5",
											"description": "ID of the Dashboard to update"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:36:11 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:36:11 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "tflGvAO5gLHgDp2fJjYE1J9I1BNQ2w0Leh9Ruv6ub4r9E92SJ060w0w7jeRI6TKs"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"notify_list\": [],\n    \"description\": \"An updated dashboard with memory info.\",\n    \"template_variables\": [\n        {\n            \"default\": \"myhost\",\n            \"prefix\": \"host\",\n            \"name\": \"host1\"\n        }\n    ],\n    \"is_read_only\": true,\n    \"id\": \"civ-zbj-ag5\",\n    \"title\": \"<NEW_DASHBOARD_TITLE>\",\n    \"url\": \"/dashboard/civ-zbj-ag5/newdashboardtitle\",\n    \"created_at\": \"2019-04-19T12:35:20.490074+00:00\",\n    \"modified_at\": \"2019-04-19T12:36:11.667609+00:00\",\n    \"author_handle\": \"test@datadoghq.com\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"requests\": [\n                    {\n                        \"q\": \"sum:system.mem.free{*}\"\n                    }\n                ],\n                \"type\": \"timeseries\",\n                \"title\": \"Sum Memory Free Shell\"\n            },\n            \"id\": 8077021146151090\n        }\n    ],\n    \"layout_type\": \"ordered\"\n}"
						}
					]
				},
				{
					"name": "Delete a Dashboard",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/dashboard/:DASHBOARD_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								":DASHBOARD_ID"
							],
							"variable": [
								{
									"key": "DASHBOARD_ID",
									"value": "<DASHBOARD_ID>",
									"type": "string",
									"description": "Id of the Dashboar to delete"
								}
							]
						},
						"description": "### Overview\n\nDelete an existing dashboard. \n\n### Arguments\n\nThis end point takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/:DASHBOARD_ID?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":DASHBOARD_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "DASHBOARD_ID",
											"value": "civ-zbj-ag5",
											"description": "Id of the Dashboar to delete"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:38:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:38:16 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "Zf9XnfJyYt1Iso+cP3mXkyI2PedzOMMfCOMqGogyCERwXtSbE5Zf+v4+ZVGIiiZ2"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"deleted_dashboard_id\": \"civ-zbj-ag5\"\n}"
						}
					]
				},
				{
					"name": "Get a Dashboard",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/dashboard/:DASHBOARD_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								":DASHBOARD_ID"
							],
							"variable": [
								{
									"key": "DASHBOARD_ID",
									"value": "<DASHBOARD_ID>",
									"type": "string",
									"description": "Id of the Dashboard to GET"
								}
							]
						},
						"description": "### Overview\n\nFetch an existing dashboard's definition.\n\n### Arguments\n\nThis end point takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/:DASHBOARD_ID?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":DASHBOARD_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "DASHBOARD_ID",
											"value": "civ-zbj-ag5",
											"description": "Id of the Dashboard to GET"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:36:50 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:36:50 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "Zf9XnfJyYt1Iso+cP3mXkyI2PedzOMMfCOMqGogyCERwXtSbE5Zf+v4+ZVGIiiZ2"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"notify_list\": [],\n    \"description\": \"An updated dashboard with memory info.\",\n    \"template_variables\": [\n        {\n            \"default\": \"myhost\",\n            \"prefix\": \"host\",\n            \"name\": \"host1\"\n        }\n    ],\n    \"is_read_only\": true,\n    \"id\": \"civ-zbj-ag5\",\n    \"title\": \"<NEW_DASHBOARD_TITLE>\",\n    \"url\": \"/dashboard/civ-zbj-ag5/newdashboardtitle\",\n    \"created_at\": \"2019-04-19T12:35:20.490074+00:00\",\n    \"modified_at\": \"2019-04-19T12:36:11.667609+00:00\",\n    \"author_handle\": \"test@datadoghq.com\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"requests\": [\n                    {\n                        \"q\": \"sum:system.mem.free{*}\"\n                    }\n                ],\n                \"type\": \"timeseries\",\n                \"title\": \"Sum Memory Free Shell\"\n            },\n            \"id\": 8077021146151090\n        }\n    ],\n    \"layout_type\": \"ordered\"\n}"
						}
					]
				},
				{
					"name": "Get all Dashboards",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/dashboard",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard"
							]
						},
						"description": "### Overview\n\nFetch all existing Dashboards.\n\n### Arguments\n\nThis end point takes no JSON arguments."
					},
					"response": []
				}
			],
			"description": "This new endpoint unifies screenboard and timeboard APIs to allow you to manage all of your dashboards using a single format. Documentation for old endpoints is available here:\n\n* [Timeboard API doc](https://docs.datadoghq.com/graphing/faq/timeboard-api-doc)\n* [Screenboard API doc](https://docs.datadoghq.com/graphing/faq/screenboard-api-doc)\n\nThis endpoint allows you to programmatically create, update, delete, and query dashboards.\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9bba2d30-9292-4bd8-b9d3-2e3caf91e9c1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "59940d9e-c793-4d5f-b624-4e6c3f597270",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Dashboard Lists",
			"item": [
				{
					"name": "Get a Dashboard List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID"
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": "<DASHBOARD_LIST_ID>",
									"type": "string",
									"description": "Dashboard list ID to fetch"
								}
							]
						},
						"description": "### Overview\n\nFetch an existing dashboard list’s definition.\n\n### Arguments\n\nThis end point takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":DASHBOARD_LIST_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "DASHBOARD_LIST_ID",
											"value": "57440",
											"description": "Dashboard list ID to fetch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:31:00 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:31:00 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "kwlHFpTCzfAmxw0po2RPh++ODIcO75ahisnXZstlTc88E5RFn0MHT6logmhrACsZ"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"is_favorite\": false,\n    \"name\": \"<DASHBOARD_LIST_TITLE>\",\n    \"dashboard_count\": 0,\n    \"author\": {\n        \"handle\": \"test@datadoghq.com\",\n        \"name\": \"John Doe\"\n    },\n    \"created\": \"2019-04-19T12:29:38.231231+00:00\",\n    \"type\": \"manual_dashboard_list\",\n    \"dashboards\": null,\n    \"modified\": \"2019-04-19T12:29:38.231245+00:00\",\n    \"id\": 57440\n}"
						}
					]
				},
				{
					"name": "Get all Dashboard Lists",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/dashboard/lists/manual",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual"
							]
						},
						"description": "### Overview\n\nFetch all of your existing dashboard list definitions.\n\n### Arguments\n\nThis end point takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:31:31 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:31:31 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "lnwFdO4PxYNHOW5gvIDVvh3I0KQyoun8vPF2cw3IdhDOBdG7dYm+DbeEFIp6zp6v"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"dashboard_lists\": [\n        {\n            \"is_favorite\": false,\n            \"name\": \"<DASHBOARD_LIST_TITLE>\",\n            \"dashboard_count\": 0,\n            \"author\": {\n                \"handle\": \"test@datadoghq.com\",\n                \"name\": \"John Doe\"\n            },\n            \"created\": \"2019-04-19T12:29:38.231231+00:00\",\n            \"type\": \"manual_dashboard_list\",\n            \"dashboards\": null,\n            \"modified\": \"2019-04-19T12:29:38.231245+00:00\",\n            \"id\": 57440\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Create a Dashboard List",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<DASHBOARD_LIST_TITLE>\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/dashboard/lists/manual",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual"
							]
						},
						"description": "### Overview\n\nCreate an empty dashboard list.\n\n### Arguments\n\n*   **`name`** [*required*]: The name of the dashboard list."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<DASHBOARD_LIST_TITLE>\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:29:38 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:29:38 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "jQ+XRxSbHVKlY4T2FvKTdRy1h/Ax69A+iXaoBXbKeZ3RS06FZpiB75+XskGvvCfS"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"is_favorite\": false,\n    \"name\": \"<DASHBOARD_LIST_TITLE>\",\n    \"dashboard_count\": 0,\n    \"author\": {\n        \"handle\": \"test@datadoghq.com\",\n        \"name\": \"John Doe\"\n    },\n    \"created\": \"2019-04-19T12:29:38.231231+00:00\",\n    \"type\": \"manual_dashboard_list\",\n    \"dashboards\": null,\n    \"modified\": \"2019-04-19T12:29:38.231245+00:00\",\n    \"id\": 57440\n}"
						}
					]
				},
				{
					"name": "Update a Dashboard List",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<NEW_DASHBOARD_LIST_TITLE>\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID"
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": "<DASHBOARD_LIST_ID>",
									"type": "string",
									"description": "The ID of the Dashboard list to update"
								}
							]
						},
						"description": "### Overview\n\nUpdate the name of a dashboard list\n\n### Arguments\n\n*   **`name`** [*required*]: The name of the dashboard list."
					},
					"response": [
						{
							"name": "Update a Dashboard List Example",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"My Updated Dashboard List\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":DASHBOARD_LIST_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "DASHBOARD_LIST_ID",
											"value": "4741",
											"description": "The ID of the Dashboard list to update"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"name\": \"My Updated Dashboard List\",\n    \"created\": \"2018-03-16T09:44:41.476018+00:00\",\n    \"author\": {\n        \"handle\": \"test1@datadoghq.com\",\n        \"name\": \"Author Name\"\n    },\n    \"dashboards\": \"None\",\n    \"modified\": \"2018-03-16T13:45:42.288026+00:00\",\n    \"is_favorite\": false,\n    \"dashboard_count\": 5,\n    \"type\": \"manual_dashboard_list\",\n    \"id\": 4741\n}"
						},
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<NEW_DASHBOARD_LIST_TITLE>\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":DASHBOARD_LIST_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "DASHBOARD_LIST_ID",
											"value": "57440",
											"description": "The ID of the Dashboard list to update"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:32:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:32:16 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "Mrmp8VDZzSdQ26N+vFMdetdFLJXOk15EfcDtklL5+NKo9rgYw15wVNwr0Yv3L9F6"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"is_favorite\": false,\n    \"name\": \"<NEW_DASHBOARD_LIST_TITLE>\",\n    \"dashboard_count\": 0,\n    \"author\": {\n        \"handle\": \"test@datadoghq.com\",\n        \"name\": \"John Doe\"\n    },\n    \"created\": \"2019-04-19T12:29:38.231231+00:00\",\n    \"type\": \"manual_dashboard_list\",\n    \"dashboards\": null,\n    \"modified\": \"2019-04-19T12:32:16.412326+00:00\",\n    \"id\": 57440\n}"
						}
					]
				},
				{
					"name": "Delete a Dashboard List",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID"
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": "<DASHBOARD_LIST_ID>",
									"type": "string",
									"description": "ID of the Dashboard list to delete"
								}
							]
						},
						"description": "### Overview\n\nDelete an existing dashboard list.\n\n### Arguments\n\nThis end point takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":DASHBOARD_LIST_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "DASHBOARD_LIST_ID",
											"value": "57440",
											"description": "ID of the Dashboard list to delete"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:35:02 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:35:02 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "DBPi/50MhRYXc2I3YfHX6WdyNepUM+24Obj1bbUu+N5/mG16Mvns9snrz+cj2jUY"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"deleted_dashboard_list_id\": 57440\n}"
						}
					]
				},
				{
					"name": "Get Items of a Dashboard List",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID/dashboards",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID",
								"dashboards"
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": "<DASHBOARD_LIST_ID>",
									"type": "string",
									"description": "ID of the Dashbord list to get items from"
								}
							]
						},
						"description": "### Overview\n\nFetch the dashboard list’s dashboard definitions.\n\n### Arguments\n\nThis end point takes no JSON arguments."
					},
					"response": [
						{
							"name": "Get Items of a Dashboard List Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID/dashboards?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":DASHBOARD_LIST_ID",
										"dashboards"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "DASHBOARD_LIST_ID",
											"value": "4741",
											"description": "ID of the Dashbord list to get items from"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"total\": 2,\n    \"dashboards\": [\n        {\n            \"is_shared\": false,\n            \"author\": {\n                \"handle\": None,\n                \"name\": None\n            },\n            \"url\": \"/screen/integration/66/aws-dynamodb\",\n            \"title\": \"AWS DynamoDB\",\n            \"modified\": None,\n            \"created\": None,\n            \"is_favorite\": True,\n            \"is_read_only\": True,\n            \"type\": \"integration_screenboard\",\n            \"id\": 66,\n            \"icon\": \"/static/v/34.254868/images/saas_logos/small/amazon_dynamodb.png\"\n        },\n        {\n            \"is_shared\": false,\n            \"author\": {\n                \"handle\": None,\n                \"name\": None\n            },\n            \"url\": \"/dash/integration/17/postgres---metrics\",\n            \"title\": \"Postgres - Metrics\",\n            \"modified\": None,\n            \"created\": None,\n            \"is_favorite\": True,\n            \"is_read_only\": True,\n            \"type\": \"integration_timeboard\",\n            \"id\": 17,\n            \"icon\": \"/static/v/34.254868/images/saas_logos/small/postgres.png\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Add Items to Dashboard List",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"<DASHBOARD_TYPE_1>\",\n            \"id\": <DASHBOARD_ID>\n        },\n        {\n            \"type\": \"<DASHBOARD_TYPE_2>\",\n            \"id\": <DASHBOARD_ID>\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID/dashboards",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID",
								"dashboards"
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": "<DASHBOARD_LIST_ID>",
									"type": "string",
									"description": "ID of the Dashboard list to add item into"
								}
							]
						},
						"description": "### Overview\n\nAdd dashboards to an existing dashboard list.\n\n### Arguments\n\n*   **`dashboards`** [*required*]: A list of dashboards to add to the list. Dashboard definitions follow this form:\n    *   **`type`** [*required*]: The type of the dashboard. The type must be one of:\n        * `\"custom_timeboard\"`\n        * `\"custom_screenboard\"`\n        * `\"integration_screenboard\"`\n        * `\"integration_timeboard\"`\n        * `\"host_timeboard\"`\n    *   **`id`** [*required*]: The id of the dashboard."
					},
					"response": []
				},
				{
					"name": "Update Items of a Dashboard List",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"<DASHBOARD_TYPE_1>\",\n            \"id\": <DASHBOARD_ID_1>\n        },\n        {\n            \"type\": \"<DASHBOARD_TYPE_2>\",\n            \"id\": <DASHBOARD_ID_2>\n        }\n        \n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID/dashboards",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID",
								"dashboards"
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": "<DASHBOARD_LIST_ID>",
									"type": "string",
									"description": "ID of the Dashboard list to update"
								}
							]
						},
						"description": "### Overview\n\nUpdate dashboards of an existing dashboard list.\n\n### ARGUMENTS\n\n*   **`dashboards`** [*required*]: The new list of dashboards for the dashboard list. Dashboard definitions follow this form:\n    *   **`type`** [*required*]: The type of the dashboard. The type must be one of:\n        * `\"custom_timeboard\"`\n        * `\"custom_screenboard\"`\n        * `\"integration_screenboard\"`\n        * `\"integration_timeboard\"`\n        * `\"host_timeboard\"`\n    *   **`id`** [*required*]: The id of the dashboard."
					},
					"response": []
				},
				{
					"name": "Delete Items from a Dashboard List",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"dashboards\": [\n            {\n            \"type\": \"<DASHBOARD_TYPE_1>\",\n            \"id\": <DASHBOARD_ID_1>\n        \t},\n            {\n            \"type\": \"<DASHBOARD_TYPE_2>\",\n            \"id\": <DASHBOARD_ID_2>\n        \t}\n        ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID/dashboards",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID",
								"dashboards"
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": "<DASHBOARD_LIST_ID>",
									"type": "string",
									"description": "ID of the Dashboard list to delete items from"
								}
							]
						},
						"description": "### Overview\n\nDelete dashboards from an existing dashboard list.\n\n### Arguments\n\n*   **`dashboards`** [*required*]: A list of dashboards to remove from the list. Dashboard definitions follow this form:\n    *   **`type`** [*required*]: The type of the dashboard. The type must be one of:\n        * `\"custom_timeboard\"`\n        * `\"custom_screenboard\"`\n        * `\"integration_screenboard\"`\n        * `\"integration_timeboard\"`\n        * `\"host_timeboard\"`\n    *   **`id`** [*required*]: The id of the dashboard."
					},
					"response": []
				}
			],
			"description": "Interact with your dashboard lists through the API to make it easier to organize, find, and share all of your dashboards with your team and organization.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "790ac5f2-163a-49d8-b660-7a05921e31c8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5ab22be5-5b92-4877-84bb-7319a9294e8c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Downtimes",
			"item": [
				{
					"name": "Schedule monitor downtime",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7dbab6ff-c2b2-42d2-9251-42f2247d8762",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"scope\": \"<SCOPE>\",\n  \"start\": \"<START_DATE>\",\n  \"end\": \"<END_DATE>\",\n  \"recurrence\": {\n    \"type\": \"weeks\",\n    \"period\": 1,\n    \"week_days\": [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\"],\n    \"until_date\": \"<END_DATE_RECURRENCE>\"\n  \t}\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/downtime",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"downtime"
							]
						},
						"description": "### Overview\n\nSchedule a single Downtime.\n\n### ARGUMENTS\n\n* **`scope`** [*required*]: The scope(s) to which the downtime applies, e.g. `host:app2`. Provide multiple scopes as a comma-separated list, e.g. `env:dev,env:prod`. The resulting downtime applies to sources that matches ALL provided scopes (i.e. `env:dev` **AND** `env:prod`), NOT any of them.\n* **`monitor_tags`** [*optional*, *default*=**no monitor tag filter**]: A comma-separated list of monitor tags, i.e. tags that are applied directly to monitors, *not* tags that are used in monitor queries (which are filtered by the `scope` parameter), to which the downtime applies. The resulting downtime applies to monitors that match ALL provided monitor tags (i.e. `service:postgres` **AND** `team:frontend`), NOT any of them.\n* **`monitor_id`** [*optional*, *default*=**None**]: A single monitor to which the downtime applies. If not provided, the downtime applies to all monitors.\n* **`start`** [*optional*, *default*=**None**]: POSIX timestamp to start the downtime. If not provided, the downtime starts the moment it is created.\n* **`end`** [*optional*, *default*=**None**]: POSIX timestamp to end the downtime. If not provided, the downtime is in effect indefinitely (i.e. until you cancel it).\n* **`message`** [*optional*, *default*=**None**]: A message to include with notifications for this downtime. Email notifications can be sent to specific users by using the same '@username' notation as events\n* **`timezone`** [*optional*, *default* = **UTC**]: The timezone for the downtime.\n* **`recurrence`** [*optional*, *default*=**None**]: An object defining the recurrence of the downtime with a variety of parameters:\n    *   **`type`** the type of recurrence. Choose from: `days`, `weeks`, `months`, `years`.\n    *   **`period`** how often to repeat as an integer. For example to repeat every 3 days, select a type of `days` and a period of `3`.\n    *   **`week_days`** (optional) a list of week days to repeat on. Choose from: `Mon`, `Tue`, `Wed`, `Thu`, `Fri`, `Sat` or `Sun`. Only applicable when `type` is `weeks`. **First letter must be capitalized.**\n    *   **`until_occurrences`** (optional) how many times the downtime is rescheduled. **`until_occurences` and `until_date`** are mutually exclusive\n    *   **`until_date`** (optional) the date at which the recurrence should end as a POSIX timestmap. **`until_occurences` and `until_date`** are mutually exclusive"
					},
					"response": []
				},
				{
					"name": "Update monitor downtime",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "52ac75f8-b1ab-4145-b9fc-eeeb5cfc64aa",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"scope\": \"<SCOPE>\",\n      \"message\": \"<NEW_DOWNTIME_MESSAGE>\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/downtime/:DOWNTIME_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								":DOWNTIME_ID"
							],
							"variable": [
								{
									"key": "DOWNTIME_ID",
									"value": "<DOWNTIME_ID>",
									"type": "string",
									"description": "ID of the downtime to update"
								}
							]
						},
						"description": "### Overview\n\nUpdate a single Downtime by downtime_id.\n\n### Arguments\n\n* **`id`** [*required*]: The integer id of the downtime to be updated\n* **`scope`** [*required*]: The scope to which the downtime applies, e.g. 'host:app2'. Provide multiple scopes as a comma-separated list, e.g. 'env:dev,env:prod'. The resulting downtime applies to sources that matches ALL provided scopes (i.e. env:dev AND env:prod), NOT any of them.\n* **`monitor_tags`** [*optional*, *default*=**no monitor tag filter**]: A comma-separated list of monitor tags, i.e. tags that are applied directly to monitors, *not* tags that are used in monitor queries (which are filtered by the `scope` parameter), to which the downtime applies. The resulting downtime applies to monitors that match ALL provided monitor tags (i.e. `service:postgres` **AND** `team:frontend`), NOT any of them.\n* **`monitor_id`** [*optional*, *default*=**None**]: A single monitor to which the downtime applies. If not provided, the downtime applies to all monitors.\n* **`start`** [*optional*, *default* = **original start**]: POSIX timestamp to start the downtime.\n* **`end`** [*optional*, *default* = **original end**]: POSIX timestamp to end the downtime. If not provided, the downtime is in effect indefinitely (i.e. until you cancel it).\n* **`message`** [*required*, *default* = **original message**]: A message to include with notifications for this downtime. Email notifications can be sent to specific users by using the same '@username' notation as events\n* **`timezone`** [*optional*, default = **original timezone** ]: The timezone for the downtime.\n* **`recurrence`** [*optional*, *default* = **original recurrence**]: An object defining the recurrence of the downtime with a variety of parameters:\n    *   **`type`** the type of recurrence. Choose from: `days`, `weeks`, `months`, `years`.\n    *   **`period`** how often to repeat as an integer. For example to repeat every 3 days, select a type of `days` and a period of `3`.\n    *   **`week_days`** (optional) a list of week days to repeat on. Choose from: `Mon`, `Tue`, `Wed`, `Thu`, `Fri`, `Sat` or `Sun`. Only applicable when `type` is `weeks`. **First letter must be capitalized.**\n    *   **`until_occurrences`** (optional) how many times the downtime is rescheduled. **`until_occurences` and `until_date`** are mutually exclusive\n    *   **`until_date`** (optional) the date at which the recurrence should end as a POSIX timestmap. **`until_occurences` and `until_date`** are mutually exclusive"
					},
					"response": []
				},
				{
					"name": "Cancel monitor downtime",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/downtime/:DOWNTIME_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								":DOWNTIME_ID"
							],
							"variable": [
								{
									"key": "DOWNTIME_ID",
									"value": "<DOWNTIME_ID>",
									"type": "string",
									"description": "ID of the downtime to delete"
								}
							]
						},
						"description": "DELETE a Downtime Detail by downtime_id"
					},
					"response": []
				},
				{
					"name": "Cancel monitor downtimes By Scope",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"scope\": \"<SCOPE>\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/downtime/cancel/by_scope",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								"cancel",
								"by_scope"
							]
						},
						"description": "### Overview\n\nDELETE all Downtimes that match the scope of X\n\n### Arguments\n\n* **`scope`** [*required*]:   Cancel all downtimes with the given scope(s), e.g.: `env:prod`, `role:db,role:db-slave`"
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n      \"scope\": \"host:i-123\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/downtime/cancel/by_scope?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										"cancel",
										"by_scope"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"cancelled_ids\": [\n        123456789,\n        123456790\n    ]\n}"
						}
					]
				},
				{
					"name": "Get a monitor downtime",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/downtime/:DOWNTIME_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								":DOWNTIME_ID"
							],
							"variable": [
								{
									"key": "DOWNTIME_ID",
									"value": "<DOWNTIME_ID>",
									"type": "string",
									"description": "ID of the downtime to fetch"
								}
							]
						},
						"description": "### Overview\n\nGet Downtime Detail by downtime_id\n\n### Arguments \n\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "Get a monitor downtime Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/downtime/:DOWNTIME_ID?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										":DOWNTIME_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "DOWNTIME_ID",
											"value": "2910",
											"description": "ID of the downtime to fetch"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"active\": true,\n  \"disabled\": false,\n  \"end\": 1420447087,\n  \"id\": 2910,\n  \"message\": \"Doing some testing on staging.\",\n  \"monitor_tags\": [\"*\"],\n  \"scope\": [\"env:staging\"],\n  \"start\": 1420387032\n}"
						}
					]
				},
				{
					"name": "Get all mointor downtimes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/downtime",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"downtime"
							]
						},
						"description": "### Overview\n\nGet All Scheduled Downtimes\n\n### ARGUMENTS\n\n* **`current_only`** [*optional*, *default* = **False**]: Only return downtimes that are activewhen the request is made."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/downtime?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"downtime"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n  {\n    \"active\": false,\n    \"disabled\": true,\n    \"end\": 1412793983,\n    \"id\": 1625,\n    \"monitor_tags\": [\"*\"],\n    \"scope\": [\n      \"env:staging\"\n    ],\n    \"start\": 1412792983\n  },\n  {\n    \"active\": false,\n    \"disabled\": true,\n    \"end\": null,\n    \"id\": 1626,\n    \"monitor_tags\": [\"*\"],\n    \"scope\": [\n      \"*\"\n    ],\n    \"start\": 1412792985\n  }\n]"
						}
					]
				}
			],
			"description": "[Downtiming](https://docs.datadoghq.com/monitors/downtimes) gives you greater control over monitor notifications by allowing you to globally exclude scopes from alerting. Downtime settings, which can be scheduled with start and end times, prevent all alerting related to specified Datadog tags.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0c40a532-a4f5-4fe7-8813-c13eafa1d817",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f57c6e73-48a8-4c0d-844e-d8cdf549036e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Embeddable Graphs",
			"item": [
				{
					"name": "Get all embeddable graphs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/graph/embed",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed"
							]
						},
						"description": "### Overview\n\nGets a list of previously created embeddable graphs.\n\nReturns: A JSON list containing information on previously created embeds from both the UI and the API. Each JSON graph response is in the same format as returned by GET `api/v1/graph/embed/<EMBED_ID>`.\n\n### ARGUMENTS\n\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/graph/embed?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{ \"embedded_graphs\": [\n    {\n      \"embed_id\": \"5f585b01c81b12ecdf5f40df0382738d0919170639985d3df5e2fc4232865b0c\",\n      \"template_variables\": [],\n      \"html\": \"&lt;iframe src=\\&quot;https://app.datadoghq.com/graph/embed?token=5f585b01c81b12ecdf5f40df0382738d0919170639985d3df5e2fc4232865b0c&amp;height=300&amp;width=600&amp;legend=true\\&quot; width=\\&quot;600\\&quot; height=\\&quot;300\\&quot; frameBorder=\\&quot;0\\&quot;&gt;&lt;/iframe&gt;\",\n      \"graph_title\": \"Embed created through API\",\n      \"revoked\": false,\n      \"dash_url\": null,\n      \"shared_by\": 3658,\n      \"dash_name\": null\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create embed graph",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"graph_json\": {\n\t\t\"requests\":[\n\t\t\t\t{\n\t\t\t\t\t\"q\":\"avg:system.load.1{*}\"\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t],\n\t\t\"viz\":\"timeseries\",\n\t\t\"events\":[]\n\t},\n\t\"timeframe\": \"1_hour\",\n\t\"size\": \"medium\",\n\t\"legend\":\"yes\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/graph/embed",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed"
							]
						},
						"description": "### Overview\n\nCreates a new embeddable graph.\n\nReturns: A JSON consisting of the same elements returned by GET `api/v1/graph/embed/<EMBED_ID>`. On failure, the return value is a JSON containing an error message {errors: [messages]}.\n\nNote: If an embed already exists for the exact same query in a given organization, the older embed is returned instead of creating a new embed.\n\nIf you are interested in using template variables, see [Embeddable Graphs with Template Variables](https://docs.datadoghq.com/graphing/faq/embeddable-graphs-with-template-variables)\n\n### Arguments\n\n* **`graph_json`** [*required*]: The graph definition in JSON. Same format that is available on the JSON tab of the graph editor\n* **`timeframe`** [*optional*, *default*=**1_hour**]: The timegrame for the graph. Must be one of:\n    * **1_hour**,\n    * **4_hours**, \n    * **1_day**, \n    * **2_days**,\n    * **1_week**.\n* **`size`** [*optional*, *default*=**medium**]: The size of the graph. Must be one:\n    * **small**, \n    * **medium**, \n    * **large**, \n    * **xlarge**.\n* **`legend`** [*optional*, *default*=**no**]: The flag determining if the graph includes a legend. Must be one of **yes** or **no**.\n* **`title`** [*optional*, *default*=**Embed created through API**]: Determines graph title. *Must be at least 1 character.*"
					},
					"response": []
				},
				{
					"name": "Get a specific embed",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/graph/embed/:EMBED_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed",
								":EMBED_ID"
							],
							"variable": [
								{
									"key": "EMBED_ID",
									"value": "<EMBED_ID>",
									"type": "string",
									"description": "ID of the embed to fetch"
								}
							]
						},
						"description": "### Overview\n\nGet the HTML fragment for a previously generated embed with embed_id.\n\nReturns: A JSON object with 8 elements:\n\n* `embed_id`: Token of the embed\n* `graph_title`: Tile of the graph\n* `dash_name`: Name of the dashboard the graph is on (null if none)\n* `dash_url`: URL of the dashboard the graph is on (null if none)\n* `shared_by`: ID of the use who shared the embed\n* `html`: HTML fragment for the embed (iframe)\n* `revoked`: Boolean flag for whther or not the embed is revoked\n\nOn failure, the return value is a JSON containing an error message {errors: [messages]}.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Enable embed",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/graph/embed/:EMBED_ID/enable",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed",
								":EMBED_ID",
								"enable"
							],
							"variable": [
								{
									"key": "EMBED_ID",
									"value": "<EMBED_ID>",
									"type": "string",
									"description": "ID of the Embed to enable"
								}
							]
						},
						"description": "### Overview\n\nEnable a specified embed.\n\nReturns: A JSON containing the success message `{success: [message]}`. On failure, the return value is a JSON containing an error message `{errors: [messages]}`.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Revoke embed",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/graph/embed/:EMBED_ID/revoke",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed",
								":EMBED_ID",
								"revoke"
							],
							"variable": [
								{
									"key": "EMBED_ID",
									"value": "<EMBED_ID>",
									"type": "string",
									"description": "ID of the embed to revoke"
								}
							]
						},
						"description": "### Overview\n\nRevoke a specified embed.\n\nReturns: A JSON containing the success message `{success: [message]}`. On failure, the return value is a JSON containing an error message `{errors: [messages]}`.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": []
				}
			],
			"description": "You can interact with embeddable graphs through the API.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b6461520-9556-4e49-89b7-badb27c306c1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a3160798-7336-4bef-9902-62ed0d564d51",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Post an Event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"alert_type\": \"info\",\n    \"title\": \"<EVENT_TITLE>\",\n    \"text\": \"<EVENT_TEXT>\",\n    \"tags\": [\n        \"<TAG_KEY>:<TAG_VALUE>\"\n    ],\n    \"priority\": \"normal\",\n    \"source_type_name\": \"jenkins\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/events",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"events"
							]
						},
						"description": "### Overview\n\nThis endpoint allows you to post events to the stream. Tag them, set priority and event aggregate them with other events.\n\n### Arguments\n\n* **`title`** [*required*]:   The event title. *Limited to 100 characters.* Use `msg_title` with [the Datadog Ruby library](https://github.com/DataDog/dogapi-rb).\n* **`text`** [*required*]:   The body of the event. *Limited to 4000 characters.* The text supports [markdown](https://docs.datadoghq.com/graphing/event_stream/#markdown-events). Use `msg_text` with [the Datadog Ruby library](https://github.com/DataDog/dogapi-rb)\n* **`date_happened`** [*optional*, *default* = **now**]: POSIX timestamp of the event. Must be sent as an integer (i.e. no quotes). *Limited to events no older than 1 year, 24 days (389 days)*\n* **`priority`** [*optional*, *default* = **normal**]: The priority of the event: **normal** or **low**.\n* **`host`** [*optional*, *default*=**None**]: Host name to associate with the event. Any tags associated with the host are also applied to this event.\n* **`tags`** [*optional*, *default*=**None**]: A list of tags to apply to the event.\n* **`alert_type`** [*optional*, *default* = **info**]: If it's an alert event, set its type between: **error**, **warning**, **info**, and **success**.\n* **`aggregation_key`** [*optional*, *default*=**None**]: An arbitrary string to use for aggregation. *Limited to 100 characters.*   If you specify a key, all events using that key are grouped together in the Event Stream.\n* **`source_type_name`** [*optional*, *default*=**None**]: The type of event being posted. Options: **nagios**, **hudson**, **jenkins**, **my_apps**, **chef**, **puppet**, **git**, **bitbucket**...  [Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)"
					},
					"response": [
						{
							"name": "202 - Accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"alert_type\": \"info\",\n    \"title\": \"<EVENT_TITLE>\",\n    \"text\": \"<EVENT_TEXT>\",\n    \"tags\": [\n        \"<TAG_KEY>:<TAG_VALUE>\"\n    ],\n    \"priority\": \"normal\",\n    \"source_type_name\": \"jenkins\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/events?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:26:30 GMT"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "323"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "DD-POOL",
									"value": "propjoe"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"ok\",\n    \"event\": {\n        \"id\": 4889114353672951410,\n        \"title\": \"<EVENT_TITLE>\",\n        \"text\": \"<EVENT_TEXT>\",\n        \"date_happened\": 1555676790,\n        \"handle\": null,\n        \"priority\": \"normal\",\n        \"related_event_id\": null,\n        \"tags\": [\n            \"<TAG_KEY>:<TAG_VALUE>\"\n        ],\n        \"url\": \"https://app.datadoghq.com/event/event?id=4889114353672951410\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get an Event",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/events/:EVENT_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"events",
								":EVENT_ID"
							],
							"variable": [
								{
									"key": "EVENT_ID",
									"value": "<EVENT_ID>",
									"type": "string",
									"description": "ID of the event to fetch"
								}
							]
						},
						"description": "### Overview\n\nGet event details by event_id\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/events/:EVENT_ID?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events",
										":EVENT_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "EVENT_ID",
											"value": "4889114353672951410",
											"description": "ID of the event to fetch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:27:13 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:27:13 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "Pi9DlpS5UXWqN+f/BbMF8OzGyuYELmF4y2GgpG1eyyaolF9CYoCAaZi6vG75lfLh"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_events"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"event\": {\n        \"date_happened\": 1555676790,\n        \"alert_type\": \"info\",\n        \"resource\": \"/api/v1/events/4889114353672951410\",\n        \"title\": \"<EVENT_TITLE>\",\n        \"url\": \"/event/event?id=4889114353672951410\",\n        \"text\": \"<EVENT_TEXT>\",\n        \"tags\": [\n            \"tag_key_:_tag_value\"\n        ],\n        \"device_name\": null,\n        \"priority\": \"normal\",\n        \"host\": null,\n        \"id\": 4889114353672951410\n    }\n}"
						}
					]
				},
				{
					"name": "Query the event stream",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b2fd1ea-4374-492b-bb28-f94a3bac8053",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/events?start={{from_ts}}&end={{to_ts}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"events"
							],
							"query": [
								{
									"key": "start",
									"value": "{{from_ts}}"
								},
								{
									"key": "end",
									"value": "{{to_ts}}"
								}
							]
						},
						"description": "### Overview\n\nThe [event stream](https://docs.datadoghq.com/graphing/event_stream) can be queried and filtered by time, priority, sources and tags.\nNote: if the event you're querying contains markdown formatting of any kind, you may see characters such as %,\\,n in your output\n\n### Arguments\n\n* **`start`** [*required*]: POSIX timestamp.\n* **`end`** [*required*]: POSIX timestamp.\n* **`priority`** [*optional*, *default*=**None**]: Priority of your events: **low** or **normal**.\n* **`sources`** [*optional*, *default*=**None**]: A comma separated string of sources.\n* **`tags`** [*optional*, *default*=**None**]: A comma separated string of tags. To use a negative tag filter, prefix your tag with `-`. See the [Event Stream documentation](https://docs.datadoghq.com/graphing/event_stream/#event-query-language) to learn more.\n* **`unaggregated`** [*optional*, *default*=*false*]: Set unaggregated to `true` to return all events within the specified [`start`,`end`] timeframe. Otherwise if an event is aggregated to a parent event with a timestamp outside of the timeframe, it won't be available in the output."
					},
					"response": [
						{
							"name": "Query the event stream Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/events?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"events\": [\n        {\n            \"alert_type\": \"info\",\n            \"comments\": [],\n            \"date_happened\": 1346273496,\n            \"device_name\": null,\n            \"host\": null,\n            \"id\": 1375910067732769979,\n            \"is_aggregate\": false,\n            \"priority\": \"normal\",\n            \"resource\": \"/api/v1/events/1375910067732769979\",\n            \"source\": \"My Apps\",\n            \"tags\": [\n                \"application:web\",\n                \"version:1\"\n            ],\n            \"text\": \"And let me tell you all about it here!\",\n            \"title\": \"Something big happened!\",\n            \"url\": \"/event/jump_to?event_id=1375910067732769979\"\n        },\n        {\n            \"alert_type\": \"info\",\n            \"comments\": [],\n            \"date_happened\": 1346273469,\n            \"device_name\": null,\n            \"host\": null,\n            \"id\": 1375909614428331251,\n            \"is_aggregate\": false,\n            \"priority\": \"normal\",\n            \"resource\": \"/api/v1/events/1375909614428331251\",\n            \"source\": \"My Apps\",\n            \"tags\": [\n                \"application:web\",\n                \"version:1\"\n            ],\n            \"text\": \"And let me tell you all about it here!\",\n            \"title\": \"Something big happened!\",\n            \"url\": \"/event/jump_to?event_id=1375909614428331251\"\n        }\n    ]\n}"
						}
					]
				}
			],
			"description": "The events service allows you to programatically post events to the [event stream](https://docs.datadoghq.com/graphing/event_stream) and fetch events from the [event stream](https://docs.datadoghq.com/graphing/event_stream).\n\nEvents are limited to 4000 characters. If an event is sent out with a message containing more than 4000 characters only the 4000 first characters are displayed.\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0551dbf6-4873-4a07-9324-2cc33ad1d6c9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "407da228-6499-42ec-939b-b7dcbee8133d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Graphs",
			"item": [
				{
					"name": "Graph a Snapshot",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "845f4a29-943c-4069-9c7b-29a8a0312b85",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/graph/snapshot?metric_query=system.load.1{*}by{host}&start={{from_ts}}&end={{to_ts}}&title=Snapshot of system load by host",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"snapshot"
							],
							"query": [
								{
									"key": "metric_query",
									"value": "system.load.1{*}by{host}",
									"description": "The metric query to graph for the snapshot"
								},
								{
									"key": "start",
									"value": "{{from_ts}}",
									"description": "The POSIX timestamp of the start of the query."
								},
								{
									"key": "end",
									"value": "{{to_ts}}",
									"description": "The POSIX timestamp of the end of the query."
								},
								{
									"key": "title",
									"value": "Snapshot of system load by host",
									"description": "A title for the graph. If no title is specified, the graph doesn't have a title."
								}
							]
						},
						"description": "### Overview\n\nGet a Graph snapshot.\n\n##### ARGUMENTS\n\n* **`metric_query`** [*required*]: The metric query.\n* **`start`** [*required*]: The POSIX timestamp of the start of the query.\n* **`end`** [*required*]: The POSIX timestamp of the end of the query.\n* **`event_query`** [*optional*, *default*=**None**]: A query that adds event bands to the graph.\n* **`graph_def`** [*optional*, *default*=**None**]: A JSON document defining the graph. `graph_def` can be used instead of `metric_query`. The JSON document uses the [grammar defined here](https://docs.datadoghq.com/graphing/graphing_json/#grammar) and should be formatted to a single line then URLEncoded.\n* **`title`** [*optional*, *default*=**None**]: A title for the graph. If no title is specified, the graph doesn't have a title."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/graph/snapshot?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}&metric_query=system.load.1{*}&start=1555670956&end=1555674556",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"snapshot"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										},
										{
											"key": "metric_query",
											"value": "system.load.1{*}",
											"description": "The metric query to graph for the snapshot"
										},
										{
											"key": "start",
											"value": "1555670956",
											"description": "The POSIX timestamp of the start of the query."
										},
										{
											"key": "end",
											"value": "1555674556",
											"description": "The POSIX timestamp of the end of the query."
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"metric_query\": \"system.load.1{*}\",\n    \"snapshot_url\": \"https://s3.amazonaws.com/dd-snapshots-prod/org_1499/2013-07-19/53fd79f024e7796f4ca399f1d90adf3cf95a9bb8.png\"\n}"
						}
					]
				}
			],
			"description": "You can take graph snapshots using the API.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Hosts",
			"item": [
				{
					"name": "Search hosts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/hosts?sort_field=cpu&sort_dir=desc&start=0&count=100",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"hosts"
							],
							"query": [
								{
									"key": "filter",
									"value": "",
									"description": "Query string to filter search results.",
									"disabled": true
								},
								{
									"key": "sort_field",
									"value": "cpu",
									"description": "Sort hosts by the given field. Options: status, apps, cpu, iowait, load"
								},
								{
									"key": "sort_dir",
									"value": "desc",
									"description": "Direction of sort. Options: asc, desc"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Host result to start search from."
								},
								{
									"key": "count",
									"value": "100",
									"description": "Number of host results to return. Max 100."
								}
							]
						},
						"description": "### Overview\n\nThis endpoint allows searching for hosts by name, alias, or tag. Hosts live within the past 3 hours are included. Results are paginated with a max of 100 results at a time.\n\n### Arguments\n\n* **`filter`** [*optional*, *default*=**None**]: Query string to filter search results.\n* **`sort_field`** [*optional*, *default*=**cpu**]: Sort hosts by the given field. Options: **status**, **apps**, **cpu**, **iowait**, **load**\n* **`sort_dir`** [*optional*, *default*=**desc**]: Direction of sort. Options: **asc**, **desc**\n* **`start`** [*optional*, *default*=**0**]: Host result to start search from.\n* **`count`** [*optional*, *default*=**100**]: Number of host results to return. Max 100."
					},
					"response": []
				},
				{
					"name": "Host totals",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/hosts/totals",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"hosts",
								"totals"
							]
						},
						"description": "### Overview\n\nThis endpoint returns the total number of active and up hosts in your Datadog account. Active means the host has reported in the past hour, and up means it has reported in the past two hours.\n\n### ARGUMENTS\n\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/hosts/totals?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"hosts",
										"totals"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:25:32 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:25:32 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "3XqVFN2Zs4pXLtLC34puH8ko0mMZ3gS13N0v7C1YDmW4khLKWWVMErDLOZ9LQekV"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_query"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"total_up\": 3,\n    \"total_active\": 1\n}"
						}
					]
				},
				{
					"name": "Mute a Host",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5aa35b4d-447e-4099-a0ee-37451d29d751",
								"exec": [
									"// Set current date and time",
									"// YYYY-MM-ddTHH:mm:ss.SSSZ",
									"var curr_date = (new Date());",
									"var from_date = (new Date());",
									"var to_date = (new Date());",
									"",
									"// Set timeframe window in minutes",
									"// Positive number sets to_date forward",
									"// Negative number sets from_date backwards",
									"var window_minutes = 30",
									"if (window_minutes > 0) {",
									"    // Look ahead: adjusts to_date",
									"    to_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"} else {",
									"    // Look behind: adjusts from_date",
									"    from_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"}",
									"",
									"// timestamp in ms",
									"var from_ts_ms = parseInt(Math.floor(from_date.getTime()));",
									"var to_ts_ms = parseInt(Math.floor(to_date.getTime()));",
									"// timestamp in seconds",
									"var from_ts = parseInt(from_ts_ms/1000);",
									"var to_ts = parseInt(to_ts_ms/1000);",
									"",
									"//// Uncomment for debugging.",
									"// console.log(from_date);",
									"// console.log(from_ts_ms);",
									"// console.log(from_ts);",
									"",
									"// console.log(to_date);",
									"// console.log(to_ts_ms);",
									"// console.log(to_ts);",
									"",
									"//// Set as Postman variables",
									"pm.environment.set(\"from_date\", from_date);",
									"pm.environment.set(\"from_ts_ms\", from_ts_ms);",
									"pm.environment.set(\"from_ts\", from_ts);",
									"",
									"pm.environment.set(\"to_date\", to_date);",
									"pm.environment.set(\"to_ts_ms\", to_ts_ms);",
									"pm.environment.set(\"to_ts\", to_ts);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"end\": <POSIX_TIMESTAMP_OF_END_MUTE>,\n    \"message\": \"<MESSAGE>\",\n    \"override\": \"false\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/host/:HOSTNAME/mute",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"host",
								":HOSTNAME",
								"mute"
							],
							"variable": [
								{
									"key": "HOSTNAME",
									"value": "<HOSTNAME>",
									"type": "string",
									"description": "Name of the host to mute"
								}
							]
						},
						"description": "### Overview\n\nMute a host in order to avoid any monitor to trigger on it.\n\n### Arguments\n\n* **`end`** [*optional*, *default*=**None**]: POSIX timestamp when the host is unmuted. If omitted, the host remains muted until explicitly unmuted.\n* **`message`** [*optional*, *default*=**None**]: Message to associate with the muting of this host.\n* **`override`** [*optional*, *default*=**False**]: If true and the host is already muted, replaces existing host mute settings."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n      \"message\": \"Muting this host for a test!\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/host/:HOSTNAME/mute?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"host",
										":HOSTNAME",
										"mute"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "HOSTNAME",
											"value": "test.host",
											"description": "Name of the host to mute"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"action\": \"Muted\",\n    \"hostname\": \"test.host\",\n    \"message\": \"Muting this host for a test!\"\n}"
						}
					]
				},
				{
					"name": "Unmute a Host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"Un-Muting this host for a test!\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/host/:HOSTNAME/unmute",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"host",
								":HOSTNAME",
								"unmute"
							],
							"variable": [
								{
									"key": "HOSTNAME",
									"value": "<HOSTNAME>",
									"type": "string",
									"description": "Name of the host to unmute"
								}
							]
						},
						"description": "### Overview\n\nUnmute a previously muted host\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"Un-Muting this host for a test!\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/host/:HOSTNAME/unmute?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"host",
										":HOSTNAME",
										"unmute"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{datadog_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{datadog_application_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "HOSTNAME",
											"value": "test.host",
											"description": "Name of the host to unmute"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"action\": \"Unmuted\",\n    \"hostname\": \"test.host\",\n    \"message\": \"Un-Muting this host for a test!\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Integrations",
			"item": [
				{
					"name": "AWS",
					"item": [
						{
							"name": "Logs",
							"item": [
								{
									"name": "List all AWS Logs integrations",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "DD-API-KEY",
												"value": "{{datadog_api_key}}",
												"description": "Your Datadog API key",
												"type": "text"
											},
											{
												"key": "DD-APPLICATION-KEY",
												"value": "{{datadog_application_key}}",
												"description": "Your Datadog application key",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://api.datadoghq.{{datadog_site}}/v1/integration/aws/logs",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"{{datadog_site}}"
											],
											"path": [
												"v1",
												"integration",
												"aws",
												"logs"
											]
										},
										"description": "### Overview\n\nList all Datadog-AWS logs integrations available in your Datadog organization.\n\n### Arguments\n\nThis endpoint takes no JSON argument."
									},
									"response": []
								},
								{
									"name": "Get list of AWS log ready services",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "DD-API-KEY",
												"value": "{{datadog_api_key}}",
												"description": "Your Datadog API key",
												"type": "text"
											},
											{
												"key": "DD-APPLICATION-KEY",
												"value": "{{datadog_application_key}}",
												"description": "Your Datadog application key",
												"type": "text"
											},
											{
												"key": "",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://api.datadoghq.{{datadog_site}}/v1/integration/aws/logs/services",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"{{datadog_site}}"
											],
											"path": [
												"v1",
												"integration",
												"aws",
												"logs",
												"services"
											]
										},
										"description": "\n### Overview\n\nGet the list of current AWS services for which Datadog offers automatic log collection. Use returned service IDs with the services parameter for the Enable an AWS service log collection API endpoint.\n\nARGUMENTS:\n\nThis endpoint takes no JSON arguments."
									},
									"response": []
								},
								{
									"name": "Add AWS log lambda ARN",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "DD-API-KEY",
												"value": "{{datadog_api_key}}",
												"description": "Your Datadog API key",
												"type": "text"
											},
											{
												"key": "DD-APPLICATION-KEY",
												"value": "{{datadog_application_key}}",
												"description": "Your Datadog application key",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_id\": \"<AWS_ACCOUNT_ID>\",\n    \"lambda_arn\": \"arn:aws:lambda:us-east-1:123456789012:function:PushLogs\"\n}"
										},
										"url": {
											"raw": "https://api.datadoghq.{{datadog_site}}/v1/integration/aws/logs",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"{{datadog_site}}"
											],
											"path": [
												"v1",
												"integration",
												"aws",
												"logs"
											]
										},
										"description": "### Overview\n\nAttach the Lambda ARN of the Lambda created for the [Datadog-AWS log collection][1] to your AWS account ID to enable log collection.\n\nIn order to enable the newly added Lambda, use the [Enable an AWS service log collection][2] endpoint.\n\nIn order to enable the newly added Lambda, use the Enable an AWS service log collection endpoint.\n\n### Arguments\n\n\n* **`account_id`** [*required*]:\n\n    Your AWS Account ID without dashes.\n    [Consult the Datadog AWS integration to learn more][3] about your AWS account ID.\n\n* **`lambda_arn`** [*required*]:\n    ARN of the Datadog [Lambda created during the Datadog-Amazon Web services Log collection setup][1].\n\n[1]: /integrations/amazon_web_services/?tab=allpermissions#set-up-the-datadog-lambda-function\n[2]: /api/#enable-an-aws-service-log-collection\n[3]: /integrations/amazon_web_services/#configuration\n"
									},
									"response": []
								},
								{
									"name": "Enable an AWS service log collection",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "DD-API-KEY",
												"value": "{{datadog_api_key}}",
												"description": "Your Datadog API key",
												"type": "text"
											},
											{
												"key": "DD-APPLICATION-KEY",
												"value": "{{datadog_application_key}}",
												"description": "Your Datadog application key",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_id\": \"<AWS_ACCOUNT_ID>\",\n    \"services\": [\n        \"elb\",\n        \"s3\"\n    ]\n}"
										},
										"url": {
											"raw": "https://api.datadoghq.{{datadog_site}}/v1/integration/aws/logs/services",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"{{datadog_site}}"
											],
											"path": [
												"v1",
												"integration",
												"aws",
												"logs",
												"services"
											]
										},
										"description": "Enable Automatic Log collection for your AWS services.\n\nARGUMENTS:\n\n\n* **`account_id`** [*required*]:\n\n    Your AWS Account ID without dashes.\n    [Consult the Datadog AWS integration to learn more][1] about your AWS account ID.\n\n* **services** [*required*]:\n    Array of services IDs set to enable automatic log collection.\n    Discover the list of available services with the [Get list of AWS log ready services][2] API endpoint\n\n[1]: /integrations/amazon_web_services/#configuration\n[2]: /api/#get-list-of-aws-log-ready-services\n"
									},
									"response": []
								},
								{
									"name": "Delete an AWS Logs integration",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.datadoghq.{{datadog_site}}/v1/integration/aws/logs",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"{{datadog_site}}"
											],
											"path": [
												"v1",
												"integration",
												"aws",
												"logs"
											]
										},
										"description": "### Overview\n\nDelete a Datadog-AWS log collection configuration by removing the specific Lambda ARN associated with a given AWS account.\n\n### Argument\n\n* **`account_id`** [*required*]:\n\n    Your AWS Account ID without dashes.\n    [Consult the Datadog AWS integration to learn more][1] about your AWS account ID.\n\n* **`lambda_arn`** [*required*]:\n    ARN of the Datadog [Lambda created during the Datadog-Amazon Web services Log collection setup][2].\n\n[1]: /integrations/amazon_web_services/#configuration\n[2]: /integrations/amazon_web_services/?tab=allpermissions#set-up-the-datadog-lambda-function"
									},
									"response": []
								},
								{
									"name": "Check that AWS Lambda Function exists",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "DD-API-KEY",
												"value": "{{datadog_api_key}}",
												"description": "Your Datadog API key",
												"type": "text"
											},
											{
												"key": "DD-APPLICATION-KEY",
												"value": "{{datadog_application_key}}",
												"description": "Your Datadog application key",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_id\": \"<AWS_ACCOUNT_ID>\",\n    \"lambda_arn\": \"arn:aws:lambda:<REGION>:<AWS_ACCOUNT_ID>:function:<FUNCTION_NAME>\"\n}"
										},
										"url": {
											"raw": "https://api.datadoghq.{{datadog_site}}/v1/integration/aws/logs/check_async",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"{{datadog_site}}"
											],
											"path": [
												"v1",
												"integration",
												"aws",
												"logs",
												"check_async"
											]
										},
										"description": "### Overview\n\nCheck function that verifies whether a given Lambda exists within a given AWS account. This endpoint can be polled continuously without blocking.\n\n* Returns a status of `created` when it's checking if the Lambda exists in the account.\n* Returns a status of `waiting` while checking.\n* Returns a status of `checked and ok` if the Lambda exists.\n* Returns a status of `error` if the Lambda does not exist.\n\n**Note**: You must have the given AWS account configured in the main AWS Integration tile for this to successfully verify.\n\n### Arguments\n\n* **`account_id`** [*required*]:\n\n    Your AWS Account ID without dashes.\n    [Consult the Datadog AWS integration to learn more][1] about your AWS account ID.\n\n* **`lambda_arn`** [*required*]:\n    ARN of the Datadog [Lambda created during the Datadog-Amazon Web services Log collection setup][2].\n\n[1]: /integrations/amazon_web_services/#configuration\n[2]: /integrations/amazon_web_services/?tab=allpermissions#set-up-the-datadog-lambda-function"
									},
									"response": []
								},
								{
									"name": "Check permissions for Log Services",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "DD-API-KEY",
												"value": "{{datadog_api_key}}",
												"description": "Your Datadog API key",
												"type": "text"
											},
											{
												"key": "DD-APPLICATION-KEY",
												"value": "{{datadog_application_key}}",
												"description": "Your Datadog application key",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_id\": \"AWS_ACCOUNT_ID\",\n    \"services\": [\n        \"s3\",\n        \"elb\",\n        \"elbv2\",\n        \"cloudfront\",\n        \"redshift\",\n        \"lambda\"\n    ]\n}"
										},
										"url": {
											"raw": "https://api.datadoghq.{{datadog_site}}/v1/integration/aws/logs/services_async",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"{{datadog_site}}"
											],
											"path": [
												"v1",
												"integration",
												"aws",
												"logs",
												"services_async"
											]
										},
										"description": "## Overview\n\nTest if permissions are present to add a log-forwarding triggers for the given services and AWS account. The input is the same as for [Enable an AWS service log collection][1].\n\nThe call is done asynchronously, so can be repeatedly polled in a non-blocking fashion until the asynchronous request completes.\n\n* Returns a status of `created` when initialized.\n* Returns a status of `waiting` while checking.\n* Returns a status of `checked and ok` if the permissions exist.\n* Returns a status of `error` if the permissions do not exist.\n\n**Note**: You must have the given AWS Lambda configured in the main AWS Integration tiles logs tab for this to successfully verify.\n\n### Arguments\n\n* **`account_id`** [*required*]:\n\n    Your AWS Account ID without dashes.\n    [Consult the Datadog AWS integration to learn more][2] about your AWS account ID.\n\n* **services** [*required*]:\n    Array of services IDs set to enable automatic log collection.\n    Discover the list of available services with the [Get list of AWS log ready services][3] API endpoint\n\n[1]: /api/#enable-an-aws-service-log-collection\n[2]: /integrations/amazon_web_services/#configuration\n[3]: /api/#get-list-of-aws-log-ready-services\n"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Namespace and Filtering rule",
							"item": [
								{
									"name": "List available namespace rules",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "DD-API-KEY",
												"value": "{{datadog_api_key}}",
												"description": "Your Datadog API key",
												"type": "text"
											},
											{
												"key": "DD-APPLICATION-KEY",
												"value": "{{datadog_application_key}}",
												"description": "Your Datadog application key",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/aws/available_namespace_rules",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"{{datadog_site}}"
											],
											"path": [
												"api",
												"v1",
												"integration",
												"aws",
												"available_namespace_rules"
											]
										},
										"description": "### Overview\n\nList available namespace rules for your AWS integration\n\n### Arguments\n\nThis endpoint takes no JSON arguments"
									},
									"response": [
										{
											"name": "List available namespace rules",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.datadoghq.com/api/v1/integration/aws/available_namespace_rules?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
													"protocol": "https",
													"host": [
														"api",
														"datadoghq",
														"com"
													],
													"path": [
														"api",
														"v1",
														"integration",
														"aws",
														"available_namespace_rules"
													],
													"query": [
														{
															"key": "api_key",
															"value": "{{datadog_api_key}}",
															"description": "Your Datadog API key"
														},
														{
															"key": "application_key",
															"value": "{{datadog_application_key}}",
															"description": "Your Datadog application key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Mon, 06 May 2019 15:26:10 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache"
												},
												{
													"key": "Set-Cookie",
													"value": "DD-PSHARD=193; Max-Age=604800; Path=/; expires=Mon, 13-May-2019 15:26:09 GMT; secure; HttpOnly"
												},
												{
													"key": "X-DD-VERSION",
													"value": "35.1295692"
												},
												{
													"key": "X-DD-Debug",
													"value": "c4aq40z3KDGIu7BkYTlUd0iZ+hCVqUX2FQHrdHjK4gPuZVw/LYvbdogVHHOtojAR"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "DD-POOL",
													"value": "dogweb_sameorig"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15724800;"
												}
											],
											"cookie": [],
											"body": "[\n    \"api_gateway\",\n    \"application_elb\",\n    \"appsync\",\n    \"auto_scaling\",\n    \"billing\",\n    \"budgeting\",\n    \"cloudfront\",\n    \"cloudsearch\",\n    \"cloudwatch_events\",\n    \"cloudwatch_logs\",\n    \"codebuild\",\n    \"collect_custom_metrics\",\n    \"crawl_alarms\",\n    \"ddos_protection\",\n    \"directconnect\",\n    \"dms\",\n    \"documentdb\",\n    \"dynamodb\",\n    \"ebs\",\n    \"ec2\",\n    \"ec2api\",\n    \"ec2spot\",\n    \"ecs\",\n    \"efs\",\n    \"elasticache\",\n    \"elasticbeanstalk\",\n    \"elastictranscoder\",\n    \"elb\",\n    \"emr\",\n    \"es\",\n    \"firehose\",\n    \"gamelift\",\n    \"iot\",\n    \"kinesis\",\n    \"kinesis_analytics\",\n    \"kms\",\n    \"lambda\",\n    \"lex\",\n    \"ml\",\n    \"mq\",\n    \"nat_gateway\",\n    \"network_elb\",\n    \"opsworks\",\n    \"polly\",\n    \"rds\",\n    \"redshift\",\n    \"rekognition\",\n    \"route53\",\n    \"s3\",\n    \"sagemaker\",\n    \"ses\",\n    \"sns\",\n    \"sqs\",\n    \"state_machine\",\n    \"storage_gateway\",\n    \"swf\",\n    \"vpn\",\n    \"waf\",\n    \"workspaces\",\n    \"xray\"\n]"
										},
										{
											"name": "200 - OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.datadoghq.com/api/v1/integration/aws/available_namespace_rules?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
													"protocol": "https",
													"host": [
														"api",
														"datadoghq",
														"com"
													],
													"path": [
														"api",
														"v1",
														"integration",
														"aws",
														"available_namespace_rules"
													],
													"query": [
														{
															"key": "api_key",
															"value": "{{datadog_api_key}}",
															"description": "Your Datadog API key"
														},
														{
															"key": "application_key",
															"value": "{{datadog_application_key}}",
															"description": "Your Datadog application key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Fri, 19 Apr 2019 12:23:16 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache"
												},
												{
													"key": "Set-Cookie",
													"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:23:16 GMT; secure; HttpOnly"
												},
												{
													"key": "X-DD-VERSION",
													"value": "35.1246853"
												},
												{
													"key": "X-DD-Debug",
													"value": "/GVHE8sGGDu2Pwj4vkrLHXcvRNw6txpVQGGgaqarvn67YsIjXAZ36tYtYz+JhwVU"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "DD-POOL",
													"value": "dogweb_sameorig"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15724800;"
												}
											],
											"cookie": [],
											"body": "[\n    \"api_gateway\",\n    \"application_elb\",\n    \"appsync\",\n    \"auto_scaling\",\n    \"billing\",\n    \"budgeting\",\n    \"cloudfront\",\n    \"cloudsearch\",\n    \"cloudwatch_events\",\n    \"cloudwatch_logs\",\n    \"codebuild\",\n    \"collect_custom_metrics\",\n    \"crawl_alarms\",\n    \"ddos_protection\",\n    \"directconnect\",\n    \"dms\",\n    \"documentdb\",\n    \"dynamodb\",\n    \"ebs\",\n    \"ec2\",\n    \"ec2api\",\n    \"ec2spot\",\n    \"ecs\",\n    \"efs\",\n    \"elasticache\",\n    \"elasticbeanstalk\",\n    \"elastictranscoder\",\n    \"elb\",\n    \"emr\",\n    \"es\",\n    \"firehose\",\n    \"gamelift\",\n    \"iot\",\n    \"kinesis\",\n    \"kinesis_analytics\",\n    \"kms\",\n    \"lambda\",\n    \"lex\",\n    \"ml\",\n    \"mq\",\n    \"nat_gateway\",\n    \"network_elb\",\n    \"opsworks\",\n    \"polly\",\n    \"rds\",\n    \"redshift\",\n    \"rekognition\",\n    \"route53\",\n    \"s3\",\n    \"sagemaker\",\n    \"ses\",\n    \"sns\",\n    \"sqs\",\n    \"state_machine\",\n    \"storage_gateway\",\n    \"swf\",\n    \"vpn\",\n    \"waf\",\n    \"workspaces\",\n    \"xray\"\n]"
										}
									]
								},
								{
									"name": "List AWS Filtering rules",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "DD-API-KEY",
												"value": "{{datadog_api_key}}",
												"description": "Your Datadog API key",
												"type": "text"
											},
											{
												"key": "DD-APPLICATION-KEY",
												"value": "{{datadog_application_key}}",
												"description": "Your Datadog application key",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_id\": \"YOUR_AWS_ACCOUNT_ID\"\n}"
										},
										"url": {
											"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/aws/filtering",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"{{datadog_site}}"
											],
											"path": [
												"api",
												"v1",
												"integration",
												"aws",
												"filtering"
											]
										},
										"description": "### Overview\n\nList AWS Accounts (role-based only) in Datadog.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
									},
									"response": [
										{
											"name": "400 Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://api.datadoghq.com/api/v1/integration/aws/filtering?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
													"protocol": "https",
													"host": [
														"api",
														"datadoghq",
														"com"
													],
													"path": [
														"api",
														"v1",
														"integration",
														"aws",
														"filtering"
													],
													"query": [
														{
															"key": "api_key",
															"value": "{{datadog_api_key}}",
															"description": "Your Datadog API key"
														},
														{
															"key": "application_key",
															"value": "{{datadog_application_key}}",
															"description": "Your Datadog application key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Fri, 19 Apr 2019 12:23:43 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "98"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache"
												},
												{
													"key": "X-DD-VERSION",
													"value": "35.1246853"
												},
												{
													"key": "DD-POOL",
													"value": "dogweb_sameorig"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15724800;"
												}
											],
											"cookie": [],
											"body": "{\n    \"errors\": [\n        \"AWS Integration not yet installed. Please manually install it to add AWS accounts.\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Configure AWS Filtering rule Copy",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "DD-API-KEY",
												"value": "{{datadog_api_key}}",
												"description": "Your Datadog API key",
												"type": "text"
											},
											{
												"key": "DD-APPLICATION-KEY",
												"value": "{{datadog_application_key}}",
												"description": "Your Datadog application key",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_id\": \"<AWS_ACCOUNT_ID>\",\n    \"namespace\": \"<AWS_NAMESPACE>\",\n    \"tag_filter_str\": \"<TAG_TO_INCLUDE>,!<TAGS_TO_EXCLUDE>\"\n}"
										},
										"url": {
											"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/aws/filtering",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"{{datadog_site}}"
											],
											"path": [
												"api",
												"v1",
												"integration",
												"aws",
												"filtering"
											]
										},
										"description": "### Overview\n\nList AWS Accounts (role-based only) in Datadog. [Read more about Datadog-AWS integration][1].\n\n### Arguments\n\n* **`account_id`** [*required*]: Your AWS Account ID without dashes. [Consult the Datadog AWS integration to learn more][2] about your AWS account ID.\n\n* **`access_key_id`** [*optional*, *default*=**None**]: If your AWS account is a GovCloud or China account, enter the corresponding Access Key ID.$\n\n* **`namespace`** [*required*]: The AWS namespace to apply filtering too (e.g. `sns`..) The full list of available namespace can be retrieve with the `List available namespace` endpoint.\n\n* **`tag_filter_str`** [*required*]: Tags to include/exclude to filter data collected for a specific couple of `account_id`, `namespace`.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_web_services\n[2]: https://docs.datadoghq.com/integrations/amazon_web_services/#configuration"
									},
									"response": []
								},
								{
									"name": "Delete AWS Filtering rule",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "DD-API-KEY",
												"value": "{{datadog_api_key}}",
												"description": "Your Datadog API key",
												"type": "text"
											},
											{
												"key": "DD-APPLICATION-KEY",
												"value": "{{datadog_application_key}}",
												"description": "Your Datadog application key",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_id\": \"YOUR_AWS_ACCOUNT_ID\",\n    \"namespace\": \"sqs\"\n}"
										},
										"url": {
											"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/aws/filtering",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"{{datadog_site}}"
											],
											"path": [
												"api",
												"v1",
												"integration",
												"aws",
												"filtering"
											]
										},
										"description": "Delete a Datadog-AWS Filtering rule"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "List AWS Accounts",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/aws",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								},
								"description": "### Overview\n\nList all configured AWS accounts for Datadog.\n\n### Arguments\n\nThis endpoint takes no JSON argument."
							},
							"response": [
								{
									"name": "No AWS accounts",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.datadoghq.com/api/v1/integration/aws?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"com"
											],
											"path": [
												"api",
												"v1",
												"integration",
												"aws"
											],
											"query": [
												{
													"key": "api_key",
													"value": "{{datadog_api_key}}",
													"description": "Your Datadog API key"
												},
												{
													"key": "application_key",
													"value": "{{datadog_application_key}}",
													"description": "Your Datadog application key"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 06 May 2019 15:20:18 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "98"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "X-DD-VERSION",
											"value": "35.1295692"
										},
										{
											"key": "DD-POOL",
											"value": "dogweb_sameorig"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15724800;"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"AWS Integration not yet installed. Please manually install it to add AWS accounts.\"\n    ]\n}"
								},
								{
									"name": "List AWS Accounts Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.datadoghq.com/api/v1/integration/aws?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"com"
											],
											"path": [
												"api",
												"v1",
												"integration",
												"aws"
											],
											"query": [
												{
													"key": "api_key",
													"value": "{{datadog_api_key}}",
													"description": "Your Datadog API key"
												},
												{
													"key": "application_key",
													"value": "{{datadog_application_key}}",
													"description": "Your Datadog application key"
												}
											]
										}
									},
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\"accounts\":\n    [{\n        \"account_id\": 112233445566,\n        \"role_name\": \"SomeDatadogRole\",\n        \"filter_tags\": [\n        \t'filter123'\n        ],\n        \"host_tags\": [\n        \t'account:demo'\n        \t],\n        \"account_specific_namespace_rules\": {\"opsworks\":false}\n    }]\n}"
								}
							]
						},
						{
							"name": "Create an AWS integration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"<YOUR_AWS_ACCOUNT_ID>\",\n    \"filter_tags\": [\n        \"<TAG_KEY>:<TAG_VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<TAG_KEY>:<TAG_VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opsworks\": false\n    }\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/aws",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								},
								"description": "### Overview\n\nCreate a Datadog-Amazon Web Services integration.\n\n**Note**: Using the `POST` method updates your integration configuration by **adding** your new configuration to the existing one in your Datadog organization.\n\n### Arguments\n\n* **`account_id`** [*required*]:\n\n    Your AWS Account ID without dashes.\n    [Consult the Datadog AWS integration to learn more][1] about your AWS account ID.\n\n* **`access_key_id`** [*optional*, *default*=**None**]:\n\n    If your AWS account is a GovCloud or China account, enter the corresponding Access Key ID.\n\n* **`role_name`** [*required*]:\n\n    Your Datadog role delegation name.\n    For more information about you AWS account Role name, [see the Datadog AWS integration configuration info][2].\n\n* **`filter_tags`** [*optional*, *default*=**None**]:\n\n    The array of EC2 tags (in the form `key:value`) defines a filter that Datadog uses when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used.\n    Only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. Host matching a given tag can also be excluded by adding `!` before the tag.\n    e.x. `env:production,instance-type:c1.*,!region:us-east-1`\n    For more information on EC2 tagging, see the [AWS tagging documentation][3].\n\n* **`host_tags`** [*optional*, *default*=**None**]:\n\n    Array of tags (in the form `key:value`) to add to all hosts and metrics reporting through this integration.\n\n* **`account_specific_namespace_rules`** [*optional*, *default*=**None**]:\n\n    An object (in the form `{\"namespace1\":true/false, \"namespace2\":true/false}`) that enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be found at the `https://api.datadoghq.com/api/v1/integration/aws/available_namespace_rules` endpoint.\n\n[1]: /integrations/amazon_web_services/#configuration\n[2]: /integrations/amazon_web_services/#installation\n[3]: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html"
							},
							"response": [
								{
									"name": "Creating an account",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_id\": \"<YOUR_AWS_ACCOUNT_ID>\",\n    \"filter_tags\": [\n        \"<TAG_KEY>:<TAG_VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<TAG_KEY>:<TAG_VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opsworks\": false\n    }\n}"
										},
										"url": {
											"raw": "https://api.datadoghq.com/api/v1/integration/aws?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"com"
											],
											"path": [
												"api",
												"v1",
												"integration",
												"aws"
											],
											"query": [
												{
													"key": "api_key",
													"value": "{{datadog_api_key}}",
													"description": "Your Datadog API key"
												},
												{
													"key": "application_key",
													"value": "{{datadog_application_key}}",
													"description": "Your Datadog application key"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 06 May 2019 15:25:25 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "Set-Cookie",
											"value": "DD-PSHARD=193; Max-Age=604800; Path=/; expires=Mon, 13-May-2019 15:25:21 GMT; secure; HttpOnly"
										},
										{
											"key": "X-DD-VERSION",
											"value": "35.1295692"
										},
										{
											"key": "X-DD-Debug",
											"value": "c4aq40z3KDGIu7BkYTlUd0iZ+hCVqUX2FQHrdHjK4gPuZVw/LYvbdogVHHOtojAR"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "DD-POOL",
											"value": "dogweb_sameorig"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15724800;"
										}
									],
									"cookie": [],
									"body": "{\n    \"external_id\": \"1234567890\"\n}"
								}
							]
						},
						{
							"name": "Update an AWS integration",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"<YOUR_AWS_ACCOUNT_ID>\",\n    \"filter_tags\": [\n        \"<TAG_KEY>:<TAG_VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<TAG_KEY>:<TAG_VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opsworks\": false\n    }\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/aws?account_id=<ACCOUNT_ID>&role_name=<ROLE_NAME>",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "account_id",
											"value": "<ACCOUNT_ID>",
											"description": "Your AWS Account ID without dashes you wish to update."
										},
										{
											"key": "role_name",
											"value": "<ROLE_NAME>",
											"description": "Your Datadog role delegation name associated with the AWS Account ID you wish to update."
										}
									]
								},
								"description": "### Overview\n\nCreate a Datadog-Amazon Web Services integration.\n\n**Note**: Using the `PUT` method updates your integration configuration by **replacing** your current configuration with the new one sent to your Datadog organization.\n\n### Arguments\n\n* **`account_id`** [*required*]:\n\n    Your AWS Account ID without dashes.\n    [Consult the Datadog AWS integration to learn more][1] about your AWS account ID.\n\n* **`access_key_id`** [*optional*, *default*=**None**]:\n\n    If your AWS account is a GovCloud or China account, enter the corresponding Access Key ID.\n\n* **`role_name`** [*required*]:\n\n    Your Datadog role delegation name.\n    For more information about you AWS account Role name, [see the Datadog AWS integration configuration info][2].\n\n* **`filter_tags`** [*optional*, *default*=**None**]:\n\n    The array of EC2 tags (in the form `key:value`) defines a filter that Datadog uses when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used.\n    Only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. Host matching a given tag can also be excluded by adding `!` before the tag.\n    e.x. `env:production,instance-type:c1.*,!region:us-east-1`\n    For more information on EC2 tagging, see the [AWS tagging documentation][3].\n\n* **`host_tags`** [*optional*, *default*=**None**]:\n\n    Array of tags (in the form `key:value`) to add to all hosts and metrics reporting through this integration.\n\n* **`account_specific_namespace_rules`** [*optional*, *default*=**None**]:\n\n    An object (in the form `{\"namespace1\":true/false, \"namespace2\":true/false}`) that enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be found at the `https://api.datadoghq.com/api/v1/integration/aws/available_namespace_rules` endpoint.\n\n[1]: /integrations/amazon_web_services/#configuration\n[2]: /integrations/amazon_web_services/#installation\n[3]: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html"
							},
							"response": [
								{
									"name": "Creating an account",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_id\": \"<YOUR_AWS_ACCOUNT_ID>\",\n    \"filter_tags\": [\n        \"<TAG_KEY>:<TAG_VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<TAG_KEY>:<TAG_VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opsworks\": false\n    }\n}"
										},
										"url": {
											"raw": "https://api.datadoghq.com/api/v1/integration/aws?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"com"
											],
											"path": [
												"api",
												"v1",
												"integration",
												"aws"
											],
											"query": [
												{
													"key": "api_key",
													"value": "{{datadog_api_key}}",
													"description": "Your Datadog API key"
												},
												{
													"key": "application_key",
													"value": "{{datadog_application_key}}",
													"description": "Your Datadog application key"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 06 May 2019 15:25:25 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "Set-Cookie",
											"value": "DD-PSHARD=193; Max-Age=604800; Path=/; expires=Mon, 13-May-2019 15:25:21 GMT; secure; HttpOnly"
										},
										{
											"key": "X-DD-VERSION",
											"value": "35.1295692"
										},
										{
											"key": "X-DD-Debug",
											"value": "c4aq40z3KDGIu7BkYTlUd0iZ+hCVqUX2FQHrdHjK4gPuZVw/LYvbdogVHHOtojAR"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "DD-POOL",
											"value": "dogweb_sameorig"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15724800;"
										}
									],
									"cookie": [],
									"body": "{\n    \"external_id\": \"1234567890\"\n}"
								}
							]
						},
						{
							"name": "Delete an AWS Integration",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"<YOUR_AWS_ACCOUNT_ID>\",\n    \"role_name\": \"DatadogAWSIntegrationRole\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/aws",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								},
								"description": "### Overview\n\nDelete your Datadog-AWS integration directly through Datadog API. [Read more about Datadog-AWS integration][1].\n\n### Arguments\n\nThis endpoint takes no JSON argument.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_web_services"
							},
							"response": []
						},
						{
							"name": "Generate new External IDs",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"<YOUR_AWS_ACCOUNT_ID>\",\n    \"role_name\": \"DatadogAWSIntegrationRole\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/aws/generate_new_external_id",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"generate_new_external_id"
									]
								},
								"description": "### Overview\n\nGenerate a new AWS external id for a given AWS account id and role name pair.\n\n### Arguments\n\n\n* **`account_id`** [*required*]:\n\n    Your AWS Account ID without dashes.\n    [Consult the Datadog AWS integration to learn more][1] about your AWS account ID.\n\n* **`role_name`** [*required*]:\n\n    Your Datadog role delegation name.\n    For more information about you AWS account Role name, [see the Datadog AWS integration configuration info][2].\n\n[1]: /integrations/amazon_web_services/#configuration\n[2]: /integrations/amazon_web_services/#installation"
							},
							"response": [
								{
									"name": "Creating an account",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_id\": \"<YOUR_AWS_ACCOUNT_ID>\",\n    \"filter_tags\": [\n        \"<TAG_KEY>:<TAG_VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<TAG_KEY>:<TAG_VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opsworks\": false\n    }\n}"
										},
										"url": {
											"raw": "https://api.datadoghq.com/api/v1/integration/aws?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"com"
											],
											"path": [
												"api",
												"v1",
												"integration",
												"aws"
											],
											"query": [
												{
													"key": "api_key",
													"value": "{{datadog_api_key}}",
													"description": "Your Datadog API key"
												},
												{
													"key": "application_key",
													"value": "{{datadog_application_key}}",
													"description": "Your Datadog application key"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 06 May 2019 15:25:25 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "Set-Cookie",
											"value": "DD-PSHARD=193; Max-Age=604800; Path=/; expires=Mon, 13-May-2019 15:25:21 GMT; secure; HttpOnly"
										},
										{
											"key": "X-DD-VERSION",
											"value": "35.1295692"
										},
										{
											"key": "X-DD-Debug",
											"value": "c4aq40z3KDGIu7BkYTlUd0iZ+hCVqUX2FQHrdHjK4gPuZVw/LYvbdogVHHOtojAR"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "DD-POOL",
											"value": "dogweb_sameorig"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15724800;"
										}
									],
									"cookie": [],
									"body": "{\n    \"external_id\": \"1234567890\"\n}"
								}
							]
						}
					],
					"description": "Configure your Datadog-AWS integration directly through Datadog API.\n\nMore Details Here: https://docs.datadoghq.com/integrations/amazon_web_services/",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Azure",
					"item": [
						{
							"name": "List Azure Account",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/azure",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								},
								"description": "### Overview\n\nList all Datadog-Azure integrations configured for your Datadog Account.\n\n### Arguments\n\nThis endpoint takes no JSON argument."
							},
							"response": [
								{
									"name": "No Azure Account",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://app.datadoghq.com/api/v1/integration/azure?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
											"protocol": "https",
											"host": [
												"app",
												"datadoghq",
												"com"
											],
											"path": [
												"api",
												"v1",
												"integration",
												"azure"
											],
											"query": [
												{
													"key": "api_key",
													"value": "{{datadog_api_key}}",
													"description": "Your Datadog API key"
												},
												{
													"key": "application_key",
													"value": "{{datadog_application_key}}",
													"description": "Your Datadog application key"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 06 May 2019 15:30:37 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "98"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "X-DD-VERSION",
											"value": "35.1295692"
										},
										{
											"key": "DD-POOL",
											"value": "dogweb_sameorig"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15724800;"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"Azure Integration not yet installed. Please install before performing this action.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Create an Azure Account",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tenant_name\": \"<AZURE_TENANT_NAME>\",\n    \"client_id\": \"<AZURE_CLIENT_ID>\",\n    \"client_secret\": \"<AZURE_CLIENT_SECRET>\",\n    \"host_filters\": \"<KEY_1>:<VALUE_1>,<KEY_2>:<VALUE_2>\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/azure",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								},
								"description": "### Overview\n\nCreate a Datadog-Azure integration\n\n### Arguments\n\nRefer to the [Datadog-Azure integration installation instructions][1] to see how to obtain the following field values for your organization.\n\n* **`tenant_name`** [*required*]: Your Azure Active Directory ID.\n\n* **`client_id`** [*required*]: Your Azure web application ID.\n\n* **`client_secret`** [*required*]: Your Azure web application secret key.\n\n* **`host_filters`** [*optional*, *default*=**None**]: Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.\n\n\n[1]: https://docs.datadoghq.com/integrations/azure/#installation"
							},
							"response": []
						},
						{
							"name": "Update Azure Account's Host Filters",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tenant_name\": \"<AZURE_TENANT_NAME>\",\n    \"client_id\": \"<AZURE_CLIENT_ID>\",\n    \"client_secret\": \"<AZURE_CLIENT_SECRET>\",\n    \"host_filters\": \"<KEY_1>:<VALUE_1>,<KEY_2>:<VALUE_2>\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/azure",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								},
								"description": "### Overview \n\nUpdate Datadog-Azure host filtering.\n\n### Arguments\n\nRefer to the [Datadog-Azure integration installation instructions][1] to see how to obtain the following field values for your organization.\n\n* **`tenant_name`** [*required*]: Your Azure Active Directory ID.\n\n* **`client_id`** [*required*]: Your Azure web application ID.\n\n* **`client_secret`** [*required*]: Your Azure web application secret key.\n\n* **`host_filters`** [*optional*, *default*=**None**]: Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.\n\n[1]: https://docs.datadoghq.com/integrations/azure/#installation"
							},
							"response": []
						},
						{
							"name": "Delete an Azure Account",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tenant_name\": \"<AZURE_TENANT_NAME>\",\n    \"client_id\": \"<AZURE_CLIENT_ID>\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/azure",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								},
								"description": "### Overview\n\nDelete a Datadog-Azure integration.\n\n### Arguments\n\nThis endpoint takes no JSON argument."
							},
							"response": []
						}
					],
					"description": "ARGUMENTS\nRefer to the Datadog-Azure integration installation instructions to see how to obtain the following field values for your organization.\n\ntenant_name [required]:\n\nYour Azure Active Directory ID.\n\nclient_id [required]:\n\nYour Azure web application ID.\n\nclient_secret [required]:\n\nYour Azure web application secret key.\n\nhost_filters [optional, default=None]:\n\nLimit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0aa7e2a3-8d06-4a0c-b8bb-6fb788526e43",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ad9a861e-a18a-412a-98b3-e1497cf9236b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Google Cloud Platform",
					"item": [
						{
							"name": "List GCP Accounts",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/gcp",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									]
								},
								"description": "### Overview\n\nList all Datadog-GCP integrations configured for your Datadog Account.\n\n### Arguments\n\nThis endpoint takes no JSON argument."
							},
							"response": [
								{
									"name": "No GCP account configured",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.datadoghq.com/api/v1/integration/gcp?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"com"
											],
											"path": [
												"api",
												"v1",
												"integration",
												"gcp"
											],
											"query": [
												{
													"key": "api_key",
													"value": "{{datadog_api_key}}",
													"description": "Your Datadog API key"
												},
												{
													"key": "application_key",
													"value": "{{datadog_application_key}}",
													"description": "Your Datadog application key"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 07 May 2019 11:41:04 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "96"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "X-DD-VERSION",
											"value": "35.1298933"
										},
										{
											"key": "DD-POOL",
											"value": "dogweb_sameorig"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15724800;"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"GCP Integration not yet installed. Please install before performing this action.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Create GCP Account",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"service_account\",\n    \"project_id\": \"<GCP_PROJECT_ID>\",\n    \"private_key_id\": \"<PRIVATE_KEY_ID>\",\n    \"private_key\": \"<PRIVATE_KEY>\",\n    \"client_email\": \"<CLIENT_EMAIL>\",\n    \"client_id\": \"<CLIENT_ID>\",\n    \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n    \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n    \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n    \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>\",\n    \"host_filters\": \"<KEY_1>:<VALUE_1>,<KEY_2>:<VALUE_2>\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/gcp",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									]
								},
								"description": "### Overview\n\nConfigure your Datadog-Google Cloud Platform integration directly through the Datadog API.  \n[Read more about Datadog-Google Cloud Platform integration][1].\n\n**Note**:  Using the `POST` method updates your integration configuration by **adding** your new configuration to the existing one in your Datadog organization. \n\n### Arguments\n\nAll of the following fields' values are provided by the JSON service account key file created in the [GCP Console for service accounts][2]; Refer to the [Datadog-Google Cloud Platform integration installation instructions][3] to see how to generate one for your organization. \nFor further references, consult the [Google Cloud service account documentation][4].\n\n* **`type`** [*required*]: Should be `service_account`, it can be found in your JSON service account key.\n\n* **`project_id`** [*required*]: Your Google Cloud project ID found in your JSON service account key.\n\n* **`private_key_id`** [*required*]: Your private key ID found in your JSON service account key.\n\n* **`private_key`** [*required*]: Your private key name found in your JSON service account key.\n\n* **`client_email`** [*required*]: Your email found in your JSON service account key.\n\n* **`client_id`** [*required*]: Your ID found in your JSON service account key.\n\n* **`auth_uri`** [*required*]: Should be `https://accounts.google.com/o/oauth2/auth`.\n\n* **`token_uri`** [*required*]: Should be `https://accounts.google.com/o/oauth2/token`.\n\n* **`auth_provider_x509_cert_url`** [*required*]:  Should be `https://www.googleapis.com/oauth2/v1/certs`.\n\n* **`client_x509_cert_url`** [*required*]: Should be `https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>` where `<CLIENT_EMAIL>` is the email found in your JSON service account key.\n\n* **`host_filters`** [*optional*]: Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.\n\n* **`automute`** [*optional*, *default*=**false**]: Silence monitors for expected GCE instance shutdowns.\n\n[1]: https://docs.datadoghq.com/integrations/google_cloud_platform\n[2]: https://console.cloud.google.com/iam-admin/serviceaccounts\n[3]: https://docs.datadoghq.com/integrations/google_cloud_platform/#installation\n[4]: https://cloud.google.com/iam/docs/creating-managing-service-account-keys"
							},
							"response": []
						},
						{
							"name": "Update a GCP Service Account's automute option",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"project_id\": \"<GCP_PROJECT_ID>\",\n    \"client_email\": \"<CLIENT_EMAIL>\",\n    \"automute\": true\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/gcp",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									]
								},
								"description": "### Overview\n\nUpdate your Datadog-Google Cloud Platform integration Automute options.\n[Read more about Datadog-Google Cloud Platform integration][1].\n\n### Arguments\n\n* **`project_id`** [*required*]: Your Google Cloud project ID found in your JSON service account key.\n\n* **`client_email`** [*required*]: Your email found in your JSON service account key.\n\n* **`automute`** [*optional*, *default*=**false**]: Silence monitors for expected GCE instance shutdowns.\n\n[1]: https://docs.datadoghq.com/integrations/google_cloud_platform"
							},
							"response": []
						},
						{
							"name": "Delete a GCP Service Account",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"project_id\": \"<GCP_PROJECT_ID>\",\n    \"client_email\": \"<CLIENT_EMAIL>\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/gcp",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									]
								},
								"description": "### Overview\n\nDelete the Datadog-Google Cloud Platform integration. [Read more about Datadog-Google Cloud Platform integration][1].\n\n### Arguments\n\nThis endpoint takes no JSON argument.\n\n[1]: https://docs.datadoghq.com/integrations/google_cloud_platform"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "PagerDuty",
					"item": [
						{
							"name": "Get PagerDuty Configuration",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/pagerduty",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty"
									]
								},
								"description": "### Overview\n\nList all Datadog-PagerDuty integrations configured for your Datadog Account.\n\n### Arguments\n\nThis endpoint takes no JSON argument."
							},
							"response": [
								{
									"name": "No PagerDuty configured",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://app.datadoghq.com/api/v1/integration/pagerduty?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
											"protocol": "https",
											"host": [
												"app",
												"datadoghq",
												"com"
											],
											"path": [
												"api",
												"v1",
												"integration",
												"pagerduty"
											],
											"query": [
												{
													"key": "api_key",
													"value": "{{datadog_api_key}}",
													"description": "Your Datadog API key"
												},
												{
													"key": "application_key",
													"value": "{{datadog_application_key}}",
													"description": "Your Datadog application key"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 07 May 2019 11:43:07 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "X-DD-VERSION",
											"value": "35.1298933"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "DD-POOL",
											"value": "dogweb_sameorig"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15724800;"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"pagerduty not found\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Create PagerDuty Configuration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"services\": [\n        {\n            \"service_name\": \"<SERVICE_NAME_1>\",\n            \"service_key\": \"<PAGERDUTY_SERVICE_KEY>\"\n        },\n        {\n            \"service_name\": \"<SERVICE_NAME_2>\",\n            \"service_key\": \"<PAGERDUTY_SERVICE_KEY>\"\n        }\n    ],\n    \"subdomain\": \"<PAGERDUTY_SUB_DOMAIN>\",\n    \"schedules\": [\n        \"<SCHEDULE_1>\",\n        \"<SCHEDULE_2>\"\n    ],\n    \"api_token\": \"<PAGERDUTY_TOKEN>\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/pagerduty",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty"
									]
								},
								"description": "### Overview\n\nConfigure your Datadog-PagerDuty integration directly through the Datadog API.   [Read more about Datadog-PagerDuty integration][1].\n\n**Note**:\n\n* Using the `POST` method updates your integration configuration by **adding** your new configuration to the existing one in your Datadog organization.\n* Using the `PUT` method updates your integration configuration by **replacing** your current configuration with the new one sent to your Datadog organization.\n\n### Arguments\n\n* **`services`** : Array of PagerDuty service objects. [Learn how to configure you Datadog service with PagerDuty documentation][2]. A PagerDuty service object is composed by:\n    * **`service_name`** [*required*]: Your Service name in PagerDuty.\n\t* **`service_key`** [*required*]: Your Service name associated service key in Pagerduty.\n* **`subdomain`** : Your PagerDuty account's personalized subdomain name.\n* **`schedules`** : Array of your schedule URLs, e.g: `[\"https://my-pd.pagerduty.com/schedules#PCPYT4M\", \"https://my-pd.pagerduty.com/schedules#PKTPB7P\"]`\n* **`api_token`** : Your PagerDuty API token.\n\n[1]: https://docs.datadoghq.com/integrations/pagerduty\n[2]: https://www.pagerduty.com/docs/guides/datadog-integration-guide"
							},
							"response": []
						},
						{
							"name": "Delete PagerDuty Configuration",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/pagerduty",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty"
									]
								},
								"description": "### Overview\n\nDelete a Datadog-PagerDuty integration configured in your Datadog Account. [Read more about Datadog-PagerDuty integration][1].\n\n### Arguments\n\nThis endpoint takes no JSON arguments\n\n\n[1]: https://docs.datadoghq.com/integrations/pagerduty"
							},
							"response": []
						},
						{
							"name": "Add New Services and Schedules",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"services\": [\n        {\n            \"service_name\": \"<SERVICE_NAME_1>\",\n            \"service_key\": \"<PAGERDUTY_SERVICE_KEY>\"\n        },\n        {\n            \"service_name\": \"<SERVICE_NAME_2>\",\n            \"service_key\": \"<PAGERDUTY_SERVICE_KEY>\"\n        }\n    ],\n    \"schedules\": [\n        \"<SCHEDULE_1>\",\n        \"<SCHEDULE_2>\"\n    ]\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/pagerduty",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty"
									]
								},
								"description": "### Overview\n\nAdd new services and schedules to your Datadog-PagerDuty integration. [Read more about Datadog-PagerDuty integration][1].\n\n### Arguments\n\n* **`services`** : Array of PagerDuty service objects. [Learn how to configure you Datadog service with PagerDuty documentation][2]. A PagerDuty service object is composed by:\n    * **`service_name`** [*required*]: Your Service name in PagerDuty.\n\t* **`service_key`** [*required*]: Your Service name associated service key in Pagerduty.\n* **`schedules`** : Array of your schedule URLs, e.g: `[\"https://my-pd.pagerduty.com/schedules#PCPYT4M\", \"https://my-pd.pagerduty.com/schedules#PKTPB7P\"]`\n\n[1]: https://docs.datadoghq.com/integrations/pagerduty\n[2]: https://www.pagerduty.com/docs/guides/datadog-integration-guide"
							},
							"response": []
						}
					],
					"description": "Configure your Datadog-PagerDuty integration directly through Datadog API.\nRead more about Datadog-PagerDuty integration\n\nARGUMENTS\nservices [required]:\nArray of PagerDuty service objects. Learn how to configure you Datadog service with PagerDuty documentation. A PagerDuty service object is composed by:\n\nservice_name [required]:\nYour Service name in PagerDuty.\n\nservice_key [required]:\nYour Service name associated service key in Pagerduty.\n\nsubdomain [required]:\nYour PagerDuty accounts personalized sub-domain name.\n\nschedules [required]: Array of your schedule URLs e.g:\n[\"https://my-pd.pagerduty.com/schedules#PCPYT4M\", \"https://my-pd.pagerduty.com/schedules#PKTPB7P\"]\n\napi_token [required]:\nYour PagerDuty API token.\n\nrun_check [optional, default=false]:\nDetermines if the integration install check is run before returning a response.\n\nIf true:\n\nThe install check is run\nIf there’s an error in the configuration the error is returned\nIf there’s no error, 204 No Content response code is returned\nIf false:\n\nWe return a 202 accepted\nInstall check is run after returning a response",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Slack",
					"item": [
						{
							"name": "Get Slack Configuration Details",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"service_hooks\": [\n        {\n            \"account\": \"Main_Account\",\n            \"url\": \"https://hooks.slack.com/services/1/1\"\n        },\n        {\n            \"account\": \"doghouse\",\n            \"url\": \"https://hooks.slack.com/services/2/2\"\n        }\n    ],\n    \"channels\": [\n        {\n            \"channel_name\": \"#private\",\n            \"transfer_all_user_comments\": \"false\",\n            \"account\": \"Main_Account\"\n        },\n        {\n            \"channel_name\": \"#heresachannel\",\n            \"transfer_all_user_comments\": \"false\",\n            \"account\": \"doghouse\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/slack",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									]
								},
								"description": "### Overview\n\nList all Datadog-Slack integrations configured for your Datadog Account.\n\n### Arguments\n\nThis endpoint takes no JSON argument."
							},
							"response": [
								{
									"name": "No Slack integration configured",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://app.datadoghq.com/api/v1/integration/slack?api_key={{datadog_api_key}}&application_key={{datadog_application_key}}",
											"protocol": "https",
											"host": [
												"app",
												"datadoghq",
												"com"
											],
											"path": [
												"api",
												"v1",
												"integration",
												"slack"
											],
											"query": [
												{
													"key": "api_key",
													"value": "{{datadog_api_key}}",
													"description": "Your Datadog API key"
												},
												{
													"key": "application_key",
													"value": "{{datadog_application_key}}",
													"description": "Your Datadog application key"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 07 May 2019 11:45:49 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "X-DD-VERSION",
											"value": "35.1298933"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "DD-POOL",
											"value": "dogweb_sameorig"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15724800;"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"slack not found\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Create Slack Configuration ",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"service_hooks\": [\n        {\n            \"account\": \"Main_Account\",\n            \"url\": \"https://hooks.slack.com/services/1/1/1\"\n        },\n        {\n            \"account\": \"doghouse\",\n            \"url\": \"https://hooks.slack.com/services/2/2/2\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/slack",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									]
								},
								"description": "### Overview\n\nConfigure your Datadog-Slack integration directly through Datadog API. [Read more about Datadog-Slack integration][1].\n\n**Note**:\n\n* Using the `POST` method updates your integration configuration by **adding** your new configuration to the existing one in your Datadog organization.\n* Using the `PUT` method updates your integration configuration by **replacing** your current configuration with the new one sent to your Datadog organization.\n\n### Arguments\n\n* **`service_hooks`** [*required*]: Array of service hook objects (the service hook is generated for your slack account in your Slack account administration page). A service hook object is composed by:\n\n    * **`account`** [*required*]: Your Slack account name.\n\n    * **`url`** [*required*]: Your Slack Service Hook URL.\n\n**Note**: **`service_hooks`** are not required in the payload when adding (POST) or updating (PUT) an existing Slack configuration.\n\n* **`channels`** [*required*]: Array of slack channel objects to post to. A slack channel object is composed by:\n\n    * **`channel_name`** [*required*]: Your channel name e.g: `#general`, `#private`\n\n    * **`transfer_all_user_comments`** [*optional*, *default*=**False**]: To be notified for every comment on a graph, set it to `true`. If set to `False` use the `@slack-channel_name` syntax [for comments to be posted to slack][2].\n\n    * **`account`** [*required*]: Account to which the channel belongs to.\n\n[1]: https://docs.datadoghq.com/integrations/slack\n[2]: https://docs.datadoghq.com/monitors/notifications/#slack-integration"
							},
							"response": []
						},
						{
							"name": "Delete Slack Configuration Details",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"service_hooks\": [\n        {\n            \"account\": \"Main_Account\",\n            \"url\": \"https://hooks.slack.com/services/1/1\"\n        },\n        {\n            \"account\": \"doghouse\",\n            \"url\": \"https://hooks.slack.com/services/2/2\"\n        }\n    ],\n    \"channels\": [\n        {\n            \"channel_name\": \"#private\",\n            \"transfer_all_user_comments\": \"false\",\n            \"account\": \"Main_Account\"\n        },\n        {\n            \"channel_name\": \"#heresachannel\",\n            \"transfer_all_user_comments\": \"false\",\n            \"account\": \"doghouse\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/slack",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									]
								},
								"description": "### Overview\n\nDelete a Datadog-Slack integration configured in your Datadog Account. [Read more about Datadog-Slack integration][1].\n\n### Arguments\n\nThis endpoint takes no JSON arguments\n\n\n[1]: https://docs.datadoghq.com/integrations/slack"
							},
							"response": []
						},
						{
							"name": "Add Channels To Existing Configuration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"channels\": [\n        {\n            \"channel_name\": \"#channel_name_main_account\",\n            \"transfer_all_user_comments\": \"false\",\n            \"account\": \"Main_Account\"\n        },\n        {\n            \"channel_name\": \"#channel_name_doghouse\",\n            \"transfer_all_user_comments\": \"false\",\n            \"account\": \"doghouse\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/slack",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									]
								},
								"description": "### Overview\n\nAdd channels to your existing Datadog-Slack integration directly through Datadog API. [Read more about Datadog-Slack integration][1].\n\n### Arguments\n\n* **`channels`** [*required*]: Array of slack channel objects to post to. A slack channel object is composed by:\n\n    * **`channel_name`** [*required*]: Your channel name e.g: `#general`, `#private`\n\n    * **`transfer_all_user_comments`** [*optional*, *default*=**False**]: To be notified for every comment on a graph, set it to `true`. If set to `False` use the `@slack-channel_name` syntax [for comments to be posted to slack][2].\n\n    * **`account`** [*required*]: Account to which the channel belongs to.\n\n[1]: https://docs.datadoghq.com/integrations/slack"
							},
							"response": []
						}
					],
					"description": "Configure your Datadog-Slack integration directly through Datadog API.\nRead more about Datadog-Slack integration\n\nARGUMENTS\nservice_hooks [required]:\nArray of service hook objects (the service hook is generated for your slack account in your Slack account administration page). A service hook object is composed by:\n\naccount [required]:\nYour Slack account name.\n\nurl [required]:\nYour Slack Service Hook URL.\n\nchannels [required]:\nArray of slack channel objects to post to. A slack channel object is composed by:\n\nchannel_name [required]:\nYour channel name e.g: #general, #private\n\ntransfer_all_user_comments [optional, default=False]:\nTo be notified for every comment on a graph, set it to true. If set to False use the @slack-channel_name syntax for comments to be posted to slack.\n\naccount [required]:\nAccount to which the channel belongs to.\n\nrun_check [optional, default=false]:\nDetermines if the integration install check is run before returning a response.\n\nIf true:\n\nThe install check is run\nIf there’s an error in the configuration the error is returned\nIf there’s no error, 204 No Content response code is returned\nIf false:\n\nWe return a 202 accepted\nInstall check is run after returning a response",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Webhooks",
					"item": [
						{
							"name": "Get all Webhook Configurations",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hooks\": [\n        {\n            \"name\": \"somehook\",\n            \"url\": \"http://requestb.in/v1srg7v1\",\n            \"use_custom_payload\": \"false\",\n            \"custom_payload\": \"\",\n            \"encode_as_form\": \"false\",\n            \"headers\": \"\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/webhooks",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add to Current Configuration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hooks\": [\n      {\n        \"name\": \"<WEBHOOK_NAME>\",\n        \"url\": \"<WEBHOOK_URL>\",\n        \"use_custom_payload\": \"false\",\n        \"encode_as_form\": \"false\"\n      }\n    ]\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/webhooks",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks"
									]
								},
								"description": "ARGUMENTS\n\n"
							},
							"response": []
						},
						{
							"name": "Delete Webhook Configurations",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hooks\": [\n        {\n            \"name\": \"somehook\",\n            \"url\": \"http://requestb.in/v1srg7v1\",\n            \"use_custom_payload\": \"false\",\n            \"custom_payload\": \"\",\n            \"encode_as_form\": \"false\",\n            \"headers\": \"\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/webhooks",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Replace Current Configuration",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hooks\": [\n        {\n            \"name\": \"anotherone\",\n            \"url\": \"http://requestb.in/v1srg7v1\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/integration/webhooks",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks"
									]
								},
								"description": "ARGUMENTS\n\n"
							},
							"response": []
						}
					],
					"description": "Webhooks\nConfigure your Datadog-Webhooks integration directly through Datadog API.\nRead more about Datadog-Webhooks integration\n\nARGUMENTS\nhooks [required]:\nArray of Webhook objects. A Webhook object is composed by:\n\nname [required]:\nYour Webhook name.\nLearn more on how to use it in monitor notifications.\nurl [required]:\nYour Webhook URL.\nuse_custom_payload [optional, default=False]:\nIf true, allow you to specify a custom payload for your Webhook.\n\ncustom_payload [optional, default=None]:\nIf use_custom_payloag is true, specify your own payload to add your own custom fields to the request using those variables.\n\nencode_as_form [optional, default=False]:\nIf use_custom_payload is true, set this to true to have your payload to be URL-encoded.\n\nheaders [optional, default=None]:\nHeaders attached to your Webhook.\n\nrun_check [optional, default=false]:\nDetermines if the integration install check is run before returning a response.\n\nIf true:\n\nThe install check is run\nIf there’s an error in the configuration the error is returned\nIf there’s no error, 204 No Content response code is returned\nIf false:\n\nWe return a 202 accepted\nInstall check is run after returning a response",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "Configure your Datadog integrations via Datadog API, current configurable integrations are:\n\nAWS\nPagerDuty\nSlack\nWebhooks\nAvailable Endpoints are:\n\nTo Create an integration in Datadog:\nPOST /api/v1/integration/<source_type_name>\n\nTo edit an integration configuration:\nPUT /api/v1/integration/<source_type_name>\n\nTo get an integration status:\nGET /api/v1/integration/<source_type_name>\n\nTo delete an integration from Datadog:\nDELETE /api/v1/integration/<source_type_name>",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cee8587f-57a4-4835-8a94-9db6cc75c767",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "81e73228-13c1-444f-8424-202bff06c2ec",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Key Management",
			"item": [
				{
					"name": "API Key",
					"item": [
						{
							"name": "Get all API Keys",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/api_key",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"api_key"
									]
								},
								"description": "### Overview\n\nGet all API keys available for your account.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
							},
							"response": []
						},
						{
							"name": "Create a new API Key",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<API_KEY_NAME>\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/api_key",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"api_key"
									]
								},
								"description": "### Overview\n\nCreate an API key with a given name.\n\n### Arguments\n\n* **`name`** [*required*]: Name of your API key."
							},
							"response": []
						},
						{
							"name": "Get a given API Key",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/api_key/:DD_API_KEY",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"api_key",
										":DD_API_KEY"
									],
									"variable": [
										{
											"key": "DD_API_KEY",
											"value": "<API_KEY_TO_GET>",
											"type": "string"
										}
									]
								},
								"description": "### Overview\n\nGet a given API key.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
							},
							"response": []
						},
						{
							"name": "Edit a given API key",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<API_KEY_NAME>\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/api_key/:DD_API_KEY",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"api_key",
										":DD_API_KEY"
									],
									"variable": [
										{
											"key": "DD_API_KEY",
											"value": "<API_KEY_TO_EDIT>",
											"type": "string"
										}
									]
								},
								"description": "### Overview\n\nEdit an API key name.\n\n### Arguments\n\n* **`name`** [*required*]: Name of your API key."
							},
							"response": []
						},
						{
							"name": "Delete an API key",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/api_key/:DD_API_KEY",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"api_key",
										":DD_API_KEY"
									],
									"variable": [
										{
											"key": "DD_API_KEY",
											"value": "<API_KEY_TO_DELETE>",
											"type": "string"
										}
									]
								},
								"description": "### Overview\n\nDelete a given API key.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
							},
							"response": []
						}
					],
					"description": "Manage your Datadog API keys",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Application Key",
					"item": [
						{
							"name": "Get all Application Keys",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/application_key",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"application_key"
									]
								},
								"description": "### Overview\n\nGet all application keys available for your account.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
							},
							"response": []
						},
						{
							"name": "Create a new Application Key",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<APP_KEY_NAME>\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/application_key",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"application_key"
									]
								},
								"description": "### Overview\n\nCreate an application key with a given name.\n\n### Arguments\n\n* **`name`** [*required*]: Name of your application key."
							},
							"response": []
						},
						{
							"name": "Get a given Application Key",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/application_key/:DD_APPLICATION_KEY",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"application_key",
										":DD_APPLICATION_KEY"
									],
									"variable": [
										{
											"key": "DD_APPLICATION_KEY",
											"value": "<APPLICATION_KEY_TO_GET>",
											"type": "string"
										}
									]
								},
								"description": "### Overview\n\nGet a given application key.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
							},
							"response": []
						},
						{
							"name": "Edit a given Application key",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"<APP_KEY_NAME>\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/application_key/:DD_APPLICATION_KEY",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"application_key",
										":DD_APPLICATION_KEY"
									],
									"variable": [
										{
											"key": "DD_APPLICATION_KEY",
											"value": "<APPLICATION_KEY_TO_EDIT>",
											"type": "string"
										}
									]
								},
								"description": "### Overview\n\nEdit an application key name.\n\n### Arguments\n\n* **`name`** [*required*]: Name of your application key."
							},
							"response": []
						},
						{
							"name": "Delete an Application key",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "DD-API-KEY",
										"value": "{{datadog_api_key}}",
										"description": "Your Datadog API key",
										"type": "text"
									},
									{
										"key": "DD-APPLICATION-KEY",
										"value": "{{datadog_application_key}}",
										"description": "Your Datadog application key",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/application_key/:DD_APPLICATION_KEY",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"{{datadog_site}}"
									],
									"path": [
										"api",
										"v1",
										"application_key",
										":DD_APPLICATION_KEY"
									],
									"variable": [
										{
											"key": "DD_APPLICATION_KEY",
											"value": "<APPLICATION_KEY_TO_DELETE>",
											"type": "string"
										}
									]
								},
								"description": "### Overview\n\nDelete a given application key.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
							},
							"response": []
						}
					],
					"description": "Manage your Datadog API keys",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "Manage your Datdog API keys",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Logs",
			"item": [
				{
					"name": "Send Logs Over HTTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"This is an example log message over HTTP!\",\n    \"http\": {\n        \"status_code\": 301,\n        \"method\": \"POST\",\n        \"request_id\": \"{{$randomInt}}\"\n    },\n    \"network\": {\n        \"client\": {\n            \"ip\": \"127.0.0.1\",\n            \"port\": \"80\"\n        },\n        \"destination\": {\n            \"ip\": \"10.0.0.1\"\n        }\n    },\n    \"duration\": 2000,\n    \"category\": \"test\"\n}"
						},
						"url": {
							"raw": "https://http-intake.logs.datadoghq.{{datadog_site}}/v1/input/?ddsource=postman&service=postman&hostname=<HOSTNAME>",
							"protocol": "https",
							"host": [
								"http-intake",
								"logs",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"v1",
								"input",
								""
							],
							"query": [
								{
									"key": "ddsource",
									"value": "postman",
									"description": "Source to associate to your logs"
								},
								{
									"key": "service",
									"value": "postman",
									"description": "Service that emitted the logs"
								},
								{
									"key": "hostname",
									"value": "<HOSTNAME>",
									"description": "Host from which the log is sent."
								}
							]
						},
						"description": "### Overview\n\nSend your logs to your Datadog platform over HTTP. Limits per HTTP request are:\n\n* Maximum content size per payload: 2MB\n* Maximum size for a single log: 256kB\n* Maximum array size if sending multiple logs in an array: 50 entries\n\n**Note**: If you are in the Datadog EU site (`app.datadoghq.eu`), the HTTP log endpoint is: `http-intake.logs.datadoghq.eu`.\n\n\n### Arguments\n\n| Item             | Description                                                                                                           |\n| ------           | ---------                                                                                                             |\n| Protocol         | http: 80<br>https: 443                                                                                                |\n| Host             | For Datadog US: `http-intake.logs.datadoghq.com` <br> For Datadog EU: `http-intake.logs.datadoghq.eu`                 |\n| Path             | `/v1/input/<DATADOG_API_KEY>`                                                                                         |\n| Query parameters | Query parameters available are the reserved log attribute. `?ddtags=<TAGS>&ddsource=<SOURCE>&service=<SERVICE>&hostname=<HOSTNAME>` |\n| Method           | `POST`                                                                                                                |\n| Content Type     | Available content type are: `text/plain`, `application/json`, `application/logplex-1`                                 |\n\n\n[Learn more about Log collection](https://docs.datadoghq.com/logs)"
					},
					"response": []
				},
				{
					"name": "Get a list of logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0508c94e-6c5b-4440-9f9f-312195e3f325",
								"exec": [
									"// Set current date and time",
									"// YYYY-MM-ddTHH:mm:ss.SSSZ",
									"var curr_date = (new Date());",
									"var from_date = (new Date());",
									"var to_date = (new Date());",
									"",
									"// Set timeframe window in minutes",
									"// Positive number sets to_date forward",
									"// Negative number sets from_date backwards",
									"var window_minutes = -30",
									"if (window_minutes > 0) {",
									"    // Look ahead: adjusts to_date",
									"    to_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"} else {",
									"    // Look behind: adjusts from_date",
									"    from_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"}",
									"",
									"// timestamp in ms",
									"var from_ts_ms = parseInt(Math.floor(from_date.getTime()));",
									"var to_ts_ms = parseInt(Math.floor(to_date.getTime()));",
									"// timestamp in seconds",
									"var from_ts = parseInt(from_ts_ms/1000);",
									"var to_ts = parseInt(to_ts_ms/1000);",
									"",
									"//// Uncomment for debugging.",
									"// console.log(from_date);",
									"// console.log(from_ts_ms);",
									"// console.log(from_ts);",
									"",
									"// console.log(to_date);",
									"// console.log(to_ts_ms);",
									"// console.log(to_ts);",
									"",
									"//// Set as Postman variables",
									"pm.environment.set(\"from_date\", from_date);",
									"pm.environment.set(\"from_ts_ms\", from_ts_ms);",
									"pm.environment.set(\"from_ts\", from_ts);",
									"",
									"pm.environment.set(\"to_date\", to_date);",
									"pm.environment.set(\"to_ts_ms\", to_ts_ms);",
									"pm.environment.set(\"to_ts\", to_ts);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"limit\": 1000,\n    \"query\": \"source:agent status:error\",\n    \"sort\": \"desc\",\n    \"time\": {\n        \"from\": \"{{from_date}}\",\n        \"to\": \"{{to_date}}\"\n    }\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/logs-queries/list",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"logs-queries",
								"list"
							]
						},
						"description": "### Overview\n\nList endpoint returns logs that match a log search query. Results are paginated.\n\n### Arguments\n\n* **`query`** [*required*]: The search query - following the [Log search syntax][1] .\n* **`time.from`** [*required*]: Minimum timestamp for requested logs. Format can be either\n    - an ISO-8601 string\n    - a unix timestamp (number representing the elapsed millisec since epoch)\n    - a relative time (`now -10m`, `now - 1h`, `now - 1d`)\n* **`time.to`** [*required*]: Maximum timestamp for requested logs. Format can be either\n    - an ISO-8601 string with minute, second or millisecond precision\n    - a unix timestamp (number representing the elapsed millisec since epoch)\n    - a relative time (`now`, `now -10m`, `now - 1h`, `now - 1d`)\n* **`time.timezone`** [*optional*, *default*=**None**]: Can be specified both as an offset (e.g. \"UTC+03:00\") or a regional zone (e.g. \"Europe/Paris\")\n* **`time.offset`** [*optional*, *default*=**None**]: Equivalent to `time.timezone`. But value in seconds. If both timezone and offset are specified, timezone is ignored.\n* **`startAt`** [*optional*, *default*=**None**]: Hash identifier of the first log to return in the list, available in a log `id` attribute. This parameter is used for the [pagination feature](#pagination). **Note**: this parameter is ignored if the corresponding log is out of the scope of the specified time window.\n* **`sort`** [*optional*, *default*=**desc**]: Time-ascending `asc` or time-descending `desc`results.\n* **`limit`** [*optional*, *default*=**10**]: Number of logs return in the response (maximum is 1000)\n* **`index`** [*optional*, *default*=**main**]: For multi-index organizations, the log index in which the request is performed.\n\n#### Pagination\n\nRetrieve a log list longer than the 1000 logs limit with the Log List API Pagination feature:\n\n* for the first request, use no `startAt` parameter.\n* for the N-th request, use `nextLogID` of N-1th request result as the `startAt` parameter value.\n\nFor better control over pagination results, you should use an absolute `time` parameter - don't use the`now` keyword.\n\n**If you are thinking about archiving logs for your organization, consider using Datadog archive capabilities instead of the log list API. See [Datadog Logs Archive documentation][2].**\n\n[1]: https://docs.datadoghq.com/logs/explorer/search/#search-syntax\n[2]: https://docs.datadoghq.com/logs/archives"
					},
					"response": []
				}
			],
			"description": "Send your logs to your Datadog platform over HTTP.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f3c90f9f-2f7b-4b10-9ff0-1e95bd405883",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "53b8551e-05d1-4b29-a168-9f304aa33165",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Logs indexes",
			"item": [
				{
					"name": "Get all indexes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/logs/config/indexes",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"indexes"
							]
						},
						"description": "### Get all Indexes\n\n**This endpoint is in public beta. If you have any feedback, [contact Datadog support](https://docs.datadoghq.com/help/)**\n\nThis endpoint returns an array of the `Index` objects of your organization.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Get an Index",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/logs/config/indexes/:INDEX_NAME",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"indexes",
								":INDEX_NAME"
							],
							"variable": [
								{
									"key": "INDEX_NAME",
									"value": "<INDEX_NAME>",
									"type": "string",
									"description": "Name of the index to get."
								}
							]
						},
						"description": "### Get an Index\n\n**This endpoint is in public beta. If you have any feedback, [contact Datadog support](https://docs.datadoghq.com/help/)**\n\nThis endpoint returns an `Index` identified by its name.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Update an Index",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filter\": {\n        \"query\": \"<NEW_INDEX_FILTER_QUERY>\"\n    },\n    \"exclusion_filters\": [\n        {\n            \"name\": \"<INDEX_EXCLUSTION_FILTER_1>\",\n            \"is_enabled\": true,\n            \"filter\": {\n                \"query\": \"<INDEX_EXCLUSTION_FILTER_QUERY>\",\n                \"sample_rate\": 1\n            }\n        },\n        {\n            \"name\": \"<INDEX_EXCLUSTION_FILTER_2>\",\n            \"is_enabled\": true,\n            \"filter\": {\n                \"query\": \"<INDEX_EXCLUSTION_FILTER_QUERY_2>\",\n                \"sample_rate\": 1\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/logs/config/indexes/:INDEX_NAME",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"indexes",
								":INDEX_NAME"
							],
							"variable": [
								{
									"key": "INDEX_NAME",
									"value": "main",
									"type": "string",
									"description": "Name of the index"
								}
							]
						},
						"description": "### Update an Index\n\n**This endpoint is in public beta. If you have any feedback, [contact Datadog support](https://docs.datadoghq.com/help/)**\n\nThis endpoint updates an `Index` identified by its name. It returns the `Index` object passed in the request body when the request is successful.\n\n### Arguments\n\n* **`filter.query`**  [*required*]:\n    Only logs matching the filter criteria will be considered for this index. The search query followis the [Log search syntax](https://docs.datadoghq.com/logs/explorer/search)\n* **`exclusion_filters`** An array of `ExclusionFilter` objects (see hereafter). The logs are tested against the query of each `ExclusionFilter`, following the order of the array. Only the first matching active `ExclusionFilter` matters, others (if any) are ignored. The `ExclusionFilter` object describes the configuration of an [exclusion filter](https://docs.datadoghq.com/logs/logging_without_limits/#exclusion-filters). It has the following attributes:\n\n  * **`name`** [*required*]:\n    The name of the exclusion filter\n  * **`is_enabled`**  [*optional*, *default*=**False**]:\n    A boolean stating if the exclusion is active.\n  * **`filter.query`** [*optional*]:\n    Only logs matching the filter criteria AND the query of the parent index will be considered for this exclusion filter. The search query follows the [Log search syntax][1]\n  * **`filter.sample_rate`** [*required*]:\n    The fraction of logs excluded by the exclusion filter, when active. The sampling is uniform."
					},
					"response": []
				},
				{
					"name": "Get indexes order",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/logs/config/index-order",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"index-order"
							]
						},
						"description": "### Get Indexes Order\n\n**This endpoint is in public beta. If you have any feedback, [contact Datadog support](https://docs.datadoghq.com/help/)**\n\nUse the index order endpoints to control the processing _order_ of an organization's indexes. Use this endpoint only if you have more than one index for logs in your organization. Note that this index cannot be used to add or delete indexes.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Update Indexes Order",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"index_names\": [\n        \"<INDEX_NAME_2>\",\n        \"<INDEX_NAME_1>\"\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/logs/config/indexes",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"indexes"
							]
						},
						"description": "### Update Indexes Order\n\n**This endpoint is in public beta. If you have any feedback, [contact Datadog support](https://docs.datadoghq.com/help/)**\n\nThis endpoint updates the `IndexOrder` of your organization. It returns the `IndexOrder` object passed in the request body when the request is successful.\n\n### Arguments\n\n* **`index_names`**  [*required*]: Array of `Strings` identifying by their name(s) the index(es) of your organisation. Logs are tested against the query filter of each index one by one, following the order of the array. Logs are eventually stored in the first matching index.\n"
					},
					"response": []
				}
			],
			"description": "## Logs Indexes\n\nThis endpoint is in public beta. If you have any feedback, [contact Datadog support](https://docs.datadoghq.com/help/)\n\nThe `Index` object describes the configuration of a log index. It has the following attributes:\n\n* **`name`** (Read Only):\n    The name of the index.\n* **`filter.query`** :\n    Only logs matching the filter criteria are considered for this index.\n    The search query followis the [Log search syntax][1]\n* **`num_retention_days`** (Read Only) :\n    The number of days before logs are deleted from this index\n* **`daily_limit`** (Read Only) :\n    The number of log-events you can send in this index before you are rate-limited.\n* **`is_rate_limited`** (Read Only) :\n    A boolean stating if the index is rate limited, meaning more logs than the daily limit have been sent. Rate limit is reset every-day at 2pm UTC.\n* **`exclusion_filters`**\n    An array of `ExclusionFilter` objects (see hereafter). The logs are tested against the query of each `ExclusionFilter`, following the order of the array. Only the first matching active `ExclusionFilter` matters, others (if any) are ignored.\n\n  * **`name`** :\n    The name of the exclusion filter\n  * **`is_enabled`** :\n    A boolean stating if the exclusion is active (will eventually exclude logs) or not.\n  * **`filter.query`** :\n    Only logs matching the filter criteria AND the query of the parent index will be considered for this exclusion filter.\n    The search query follows the [Log search syntax][1]\n  * **`filter.sample_rate`** :\n    The fraction of logs excluded by the exclusion filter, when active. The sampling is uniform.\n\n\n**Note**:  You need an API and applications key with Admin right to interact with this endpoint.\n\n[1]: https://docs.datadoghq.com/logs/explorer/search/#search-syntax\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b3fb9f17-ab4f-42ae-beb8-e2f3b529f633",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f0d76bf9-68c2-44ef-8f28-43552805bf2d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Logs Pipelines",
			"item": [
				{
					"name": "Get Pipeline Order",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/logs/config/pipeline-order",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipeline-order"
							]
						},
						"description": "### Get Pipelines Order\n\nGet the current order of your Pipelines.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Update Pipeline Order",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pipeline_ids\": [\n        \"<PIPELINE_1_ID>\",\n        \"<PIPELINE_2_ID>\",\n        \"<PIPELINE_3_ID>\"\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/logs/config/pipeline-order",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipeline-order"
							]
						},
						"description": "### Update Pipelines Order\n\nUpdate the order of your Pipelines.\n\n**Note**: Logs are processed sequentially. Reordering a pipeline may change the structure and content of the data processed by other pipelines and their processors.\n\n### Arguments\n\n* **`pipeline_ids`** [*required*]:\n    Ordered Array of `<PIPELINE_ID>` strings, the order of pipeline IDs in the array define the overall Pipelines order for Datadog?\n"
					},
					"response": []
				},
				{
					"name": "Get all Pipelines",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/logs/config/pipelines",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipelines"
							]
						},
						"description": "### Get all Pipelines\n\nGet all pipelines from your Organization.\n\n### Arguments\n\nThis endpoint takes no JSON arguments.\n"
					},
					"response": []
				},
				{
					"name": "Get a Pipeline",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/logs/config/pipelines/:PIPELINE_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipelines",
								":PIPELINE_ID"
							],
							"variable": [
								{
									"key": "PIPELINE_ID",
									"value": "<PIPELINE_ID>",
									"type": "string",
									"description": "ID of the Pipeline to get."
								}
							]
						},
						"description": "### Get a Pipeline\n\nGet a specific Pipeline from your Organization.\n\n### Arguments\n\nThis endpoint takes no JSON arguments.\n"
					},
					"response": []
				},
				{
					"name": "Create a Pipeline",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<PIPELINE_NAME>\",\n    \"is_enabled\": true,\n    \"filter\": {\n        \"query\": \"<PIPELINE_QUERY>\"\n    },\n    \"processors\": [\n        {\n            \"name\": \"Define date as the official timestamp of the log\",\n            \"is_enabled\": true,\n            \"sources\": [\n                \"date\"\n            ],\n            \"type\": \"date-remapper\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/logs/config/pipelines",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipelines"
							]
						},
						"description": "### Create a Pipeline\n\nCreate a Pipeline in your Organization.\n\n### Arguments\n\n* **`name`** [*required*]:\n    Your pipeline name.\n\n* **`is_enabled`** [*optional*, *default*=**False**]:\n    Boolean value wether or note your pipeline is enabled\n\n* **`filter.query`** [*optional*]: Defines your Pipeline Filter. Only logs that match the filter criteria are processed by this pipeline.\n\n* **`processors`** [*optional*]: Ordered Array of Processors or Nested Pipelines. See the [Processor documentation](https://docs.datadoghq.com/logs/processing/processors/?tab=api) to get the specific Scheme for each processor."
					},
					"response": []
				},
				{
					"name": "Update a Pipeline",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<PIPELINE_NAME>\",\n    \"is_enabled\": true,\n    \"filter\": {\n        \"query\": \"<PIPELINE_QUERY>\"\n    },\n    \"processors\": [\n        {\n            \"name\": \"Define date as the official timestamp of the log\",\n            \"is_enabled\": true,\n            \"sources\": [\n                \"date\"\n            ],\n            \"type\": \"date-remapper\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/logs/config/pipelines/:PIPELINE_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipelines",
								":PIPELINE_ID"
							],
							"variable": [
								{
									"key": "PIPELINE_ID",
									"value": "<PIPELINE_ID>",
									"type": "string",
									"description": "ID of the pipeline to update"
								}
							]
						},
						"description": "### Update a Pipeline\n\nUpdate a given pipeline configuration to change it's processors or their order.\n\n### Arguments\n\n* **`name`** [*required*]:\n    Your pipeline name.\n\n* **`is_enabled`** [*optional*, *default*=**False**]:\n    Boolean value wether or note your pipeline is enabled\n\n* **`filter.query`** [*optional*]: Defines your Pipeline Filter. Only logs that match the filter criteria are processed by this pipeline.\n\n* **`processors`** [*optional*]: Ordered Array of Processors or Nested Pipelines. See the [Processor documentation](https://docs.datadoghq.com/logs/processing/processors/?tab=api) to get the specific Scheme for each processor."
					},
					"response": []
				},
				{
					"name": "Delete a Pipeline",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/logs/config/pipelines/:PIPELINE_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipelines",
								":PIPELINE_ID"
							],
							"variable": [
								{
									"key": "PIPELINE_ID",
									"value": "<PIPELINE_ID>",
									"type": "string",
									"description": "ID of the pipeline to delete"
								}
							]
						},
						"description": "### Delete a Pipeline\n\nDelete a given pipeline from your Organization.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": []
				}
			],
			"description": "Pipelines and processors operate on incoming logs, parsing and transforming them into structured attributes for easier querying.\n\n* See the [Pipelines Configuration Page](https://app.datadoghq.com/logs/pipelines) to see the pipelines and processors currently configured in our UI.\n* See the [Pipeline documentation](https://docs.datadoghq.com/logs/processing) to learn more",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f760b013-36f2-435b-b77e-f3d5ae8c7c44",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c75ef9c8-86fd-4115-ae29-8be6a4d05596",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Metrics",
			"item": [
				{
					"name": "Get All Active Metrics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "757736b1-36c3-47a0-b919-3041e624db1f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/metrics?from={{from_ts}}&host=<HOSTNAME>",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"metrics"
							],
							"query": [
								{
									"key": "from",
									"value": "{{from_ts}}",
									"description": "EPOCH Timestamp from which to list metrics."
								},
								{
									"key": "host",
									"value": "<HOSTNAME>",
									"description": "Hostname for filtering the list of metrics returned. If set, metrics retrieved are those with the corresponding hostname tag."
								}
							]
						},
						"description": "### Overview\n\nGet the list of actively reporting metrics from a given time until now. This endpoint is not available in the Python and Ruby libraries.\n\n### Arguments\n\n* **`from`** [*required*]: EPOCH timestamp from which to list metrics.\n* **`host`** [*optional*]: Hostname for filtering the list of metrics returned. If set, metrics retrieved are those with the corresponding hostname tag."
					},
					"response": []
				},
				{
					"name": "Send Time Series Point",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5edede57-369e-4c98-b74c-267e1aa0f014",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"series\": [\n        {\n            \"host\": \"myhost\",\n            \"metric\": \"test.metric\",\n            \"points\": [\n                [\n                    \"{{$timestamp}}\",\n                    \"{{$randomInt}}\"\n                ]\n            ],\n            \"tags\": \"source:Postman,test\",\n            \"type\": \"gauge\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/series",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"series"
							]
						},
						"description": "### Overview\n\nThe metrics end-point allows you to post time-series data that can be graphed on Datadog's dashboards. The limit for compressed payloads is 3.2 megabytes (3200000), and 62 megabytes (62914560) for decompressed payloads.\n\n### Arguments\n\n* **`series`** [*required*]: Pass a JSON array where each item in the array contains the following arguments:\n\n    * **`metric`** [*required*]: The name of the timeseries\n    * **`type`** [*optional*, *default*=**gauge**]: [Type][1] of your metric either: `gauge`, `rate`, or `count`\n    * **`interval`** [*optional*, *default*=**None**]: If the [type][1] of the metric is `rate` or `count`, define the corresponding interval.\n    * **`points`** [*required*]: A JSON array of points. Each point is of the form: `[[POSIX_timestamp, numeric_value], ...]`\n        **Note**: The timestamp should be in seconds, current, and its format should be a 32bit float gauge-type value. Current is defined as not more than 10 minutes in the future or more than 1 hour in the past.\n    * **`host`** [*optional*]: The name of the host that produced the metric.\n    * **`tags`** [*optional*, *default*=**None**]: A list of tags associated with the metric.\n\n[1]: https://docs.datadoghq.com/developers/metrics/#metric-types"
					},
					"response": []
				},
				{
					"name": "Query Time Series Points",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "059ebd69-505a-475f-ae87-ec5a88bf18a2",
								"exec": [
									"// Set current date and time",
									"// YYYY-MM-ddTHH:mm:ss.SSSZ",
									"var curr_date = (new Date());",
									"var from_date = (new Date());",
									"var to_date = (new Date());",
									"",
									"// Set timeframe window in minutes",
									"// Positive number sets to_date forward",
									"// Negative number sets from_date backwards",
									"var window_minutes = -30",
									"if (window_minutes > 0) {",
									"    // Look ahead: adjusts to_date",
									"    to_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"} else {",
									"    // Look behind: adjusts from_date",
									"    from_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"}",
									"",
									"// timestamp in ms",
									"var from_ts_ms = parseInt(Math.floor(from_date.getTime()));",
									"var to_ts_ms = parseInt(Math.floor(to_date.getTime()));",
									"// timestamp in seconds",
									"var from_ts = parseInt(from_ts_ms/1000);",
									"var to_ts = parseInt(to_ts_ms/1000);",
									"",
									"//// Uncomment for debugging.",
									"// console.log(from_date);",
									"// console.log(from_ts_ms);",
									"// console.log(from_ts);",
									"",
									"// console.log(to_date);",
									"// console.log(to_ts_ms);",
									"// console.log(to_ts);",
									"",
									"//// Set as Postman variables",
									"pm.environment.set(\"from_date\", from_date);",
									"pm.environment.set(\"from_ts_ms\", from_ts_ms);",
									"pm.environment.set(\"from_ts\", from_ts);",
									"",
									"pm.environment.set(\"to_date\", to_date);",
									"pm.environment.set(\"to_ts_ms\", to_ts_ms);",
									"pm.environment.set(\"to_ts\", to_ts);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/query?from={{from_ts}}&to={{to_ts}}&query=system.cpu.idle{*}by{host}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"query"
							],
							"query": [
								{
									"key": "from",
									"value": "{{from_ts}}",
									"description": "EPOCH Timestamp from which to query metrics data."
								},
								{
									"key": "to",
									"value": "{{to_ts}}",
									"description": " EPOCH Timestamp until which to query metrics data."
								},
								{
									"key": "query",
									"value": "system.cpu.idle{*}by{host}",
									"description": "Query string for the metric to retrieve"
								}
							]
						},
						"description": "### Overview\n\nThis endpoint allows you to query for metrics from any time period.\n\n### Arguments\n\n* **`from`** [*required*]: EPOCH Timestamp from which to query metrics data.\n* **`to`** [*required*]: EPOCH Timestamp until which to query metrics data.\n* **`query`** [*required*]: The query string for the metric to retrieve. See [graphing documentation]() to learn how to build a metrics query."
					},
					"response": []
				},
				{
					"name": "View Metric Metadata",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/metrics/:METRIC_NAME",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								":METRIC_NAME"
							],
							"variable": [
								{
									"key": "METRIC_NAME",
									"value": "<METRIC_NAME>",
									"type": "string",
									"description": "Name of the metric to retrieve metadata from."
								}
							]
						},
						"description": "### Overview\n\nThe metrics metadata endpoint allows you to get metadata about a specific metric.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Edit Metric Metadata",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"<METRIC_DESCRIPTION>\",\n    \"short_name\": \"<METRIC_SHORT_NAME>\",\n    \"type\": \"<METRIC_TYPE>\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/metrics/:METRIC_NAME",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								":METRIC_NAME"
							],
							"variable": [
								{
									"key": "METRIC_NAME",
									"value": "<METRIC_NAME>",
									"type": "string",
									"description": "Name of the metric to edit metadata from."
								}
							]
						},
						"description": "### Overview\n\nThe metrics metadata endpoint allows you to edit fields of a metric's metadata. [Find more about supported types][1]\n\n### Arguments\n\n* **`type`** [*required*]: [Metric type][1] such as **gauge** or **rate**\n* **`description`** [*optional*, *default*=**None**]: String description of the metric\" default\n* **`short_name`** [*required*]: Short name string of the metric\n* **`unit`** [*optional*, *default*=**None**]: Primary unit of the metric such as **byte** or **operation**. [See the full list of allowed metrics unit][2]\n* **`per_unit`** [*optional*, *default*=**None**]: Per unit of the metric such as **second** in **bytes per second**\n* **`statsd_interval`** [*optional*, *default*=**None**]: If applicable, statds flush interval in seconds for the metric\n\n[1]: https://docs.datadoghq.com/developers/metrics\n[2]: https://docs.datadoghq.com/developers/metrics/#units"
					},
					"response": []
				},
				{
					"name": "Search Metrics",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/search?q=metrics:<METRIC_NAME>",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "metrics:<METRIC_NAME>",
									"description": "Name of the metric to search on"
								}
							]
						},
						"description": "### Overview\n\nThis endpoint allows you to search for metrics from the last 24 hours in Datadog.\n\n### Arguments\n\n* `q` [*required*]: The query string. Must be prefixed with `metrics:`."
					},
					"response": []
				}
			],
			"description": "The metrics end-point allows you to:\n\n* Post metrics data so it can be graphed on Datadog's dashboards\n* Query metrics from any time period\n\nAs occurs within the Datadog UI, a graph can only contain a set number of points and as the timeframe over which a metric is viewed increases, aggregation between points occurs to stay below that set number.\n\nThus, if you are querying for larger timeframes of data, the points returned is more aggregated. The max granularity within Datadog is one point per second, so if you had submitted points at that interval and requested a very small interval from the query API (in this case, probably less than 100 seconds), you could end up getting all of those points back. Otherwise, Datadog algorithm tries to return about 150 points per any given time window, so you'll see coarser and coarser granularity as the amount of time requested increases. Time aggregation is done via averages.\n\nMetric points are stored at the 1 second resolution, but it's optimal to submit points every 15 seconds. Any metrics with fractions of a second timestamps gets rounded to the nearest second, and if any points have the same timestamp, the latest point overwrites the previous ones.\n\nThere is a soft limit of 100 timeseries per host, where a timeseries is defined as a unique combination of a [metric name and its associated tags]().",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0b7857dc-49bc-4d0e-95d2-3e4cd6f0cf69",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "bad82d75-65f4-47c9-b07c-13a71923759f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Monitors",
			"item": [
				{
					"name": "Create a Monitor ",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"We may need to add web hosts if this is consistently high.\",\n    \"name\": \"Bytes received on host0\",\n    \"options\": {\n        \"no_data_timeframe\": 20,\n        \"notify_no_data\": true\n    },\n    \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:myhost} > 100\",\n    \"tags\": [\n        \"app:webserver\",\n        \"frontend\"\n    ],\n    \"type\": \"metric alert\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/monitor",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"monitor"
							]
						},
						"description": "### Overview\n\nIf you manage and deploy monitors programmatically, it's easier to define the monitor in the Datadog UI and [export its valid JSON][1].\n\n### Arguments\n\n*   **`type`** [*required*]: The [type of the monitor][2], chosen from:\n\n| Monitor Type | type attribute value |\n| :--------    | :-------             |\n| anomaly      | `query alert`        |\n| apm          | `query alert`        |\n| composite    | `composite`          |\n| custom       | `service check`      |\n| event        | `event alert`        |\n| forecast     | `query alert`        |\n| host         | `service check`      |\n| integration  | `query alert`        |\n| live process | `process alert`      |\n| logs         | `log alert`          |\n| metric       | `query alert`        |\n| network      | `service check`      |\n| outlier      | `query alert`        |\n| process      | `service check`      |\n\n*   **`query`** [*required*]: The query defines when the monitor triggers. Query syntax depends on what type of monitor you are creating:\n    \n##### Metric Alert Query\n    \n`time_aggr(time_window):space_aggr:metric{tags} [by {key}] operator #`\n\n-   `time_aggr`: avg, sum, max, min, change, or pct_change\n-   `time_window`: `last_#m` (with `#` being 5, 10, 15, or 30) or `last_#h`(with `#` being 1, 2, or 4), or `last_1d`\n-   `space_aggr`: avg, sum, min, or max\n-   `tags`: one or more tags (comma-separated), or *\n-   `key`: a 'key' in key:value tag syntax; defines a separate alert for each tag in the group (multi-alert)\n-   `operator`: <, <=, >, >=, ==, or !=\n-   `#`: an integer or decimal number used to set the threshold\n\nIf you are using the `_change_` or `_pct_change_` time aggregator, instead use `change_aggr(time_aggr(time_window), timeshift):space_aggr:metric{tags} [by {key}] operator #` with:\n\n*   `change_aggr` change, pct_change\n*   `time_aggr` avg, sum, max, min [Learn more][3]\n*   `time_window` last_#m (1, 5, 10, 15, or 30), last_#h (1, 2, or 4), or last_#d (1 or 2)\n*   `timeshift` #m_ago (5, 10, 15, or 30), #h_ago (1, 2, or 4), or 1d_ago\n\nUse this to create an outlier monitor using the following query: `avg(last_30m):outliers(avg:system.cpu.user{role:es-events-data} by {host}, 'dbscan', 7) > 0`\n\n##### Service Check Query\n\n`\"check\".over(tags).last(count).count_by_status()`\n\n*   **`check`** name of the check, e.g. datadog.agent.up\n*   **`tags`** one or more quoted tags (comma-separated), or \"*\". e.g.: `.over(\"env:prod\", \"role:db\")`\n*   **`count`** must be at >= your max threshold (defined in the `options`). e.g. if you want to notify on 1 critical, 3 ok and 2 warn statuses count should be 3.\n\n##### Event Alert Query\n\n`events('sources:nagios status:error,warning priority:normal tags: \"string query\"').rollup(\"count\").last(\"1h\")\"`\n\n*  **`event`**, the event query string:\n*   **`string_query`** free text query to match against event title and text.\n*   **`sources`** event sources (comma-separated). [Complete list of source attribute values][4]\n*   **`status`** event statuses (comma-separated). Valid options: error, warn, and info.\n*   **`priority`** event priorities (comma-separated). Valid options: low, normal, all.\n*   **`host`** event reporting host (comma-separated).\n*   **`tags`** event tags (comma-separated).\n*   **`excluded_tags`** exluded event tags (comma-separated).\n*   **`rollup`** the stats rollup method. `count` is the only supported method now.\n*   **`last`** the timeframe to roll up the counts. Examples: 60s, 4h. Supported timeframes: s, m, h and d.\n\n##### Process Alert Query\n\n`processes(search).over(tags).rollup('count').last(timeframe) operator #`\n\n*   **`search`** free text search string for querying processes. Matching processes match results on the [Live Processes][5] page\n*   **`tags`** one or more tags (comma-separated)\n*   **`timeframe`** the timeframe to roll up the counts. Examples: 60s, 4h. Supported timeframes: s, m, h and d\n*   **`operator`** <, <=, >, >=, ==, or !=\n*   **`#`** an integer or decimal number used to set the threshold\n\n##### Composite Query\n\n`12345 && 67890`, where `12345` and `67890` are the IDs of non-composite monitors\n\n* **`name`** [*required*, *default* = **dynamic, based on query**]: The name of the alert.\n* **`message`** [*required*, *default* = **dynamic, based on query**]: A message to include with notifications for this monitor. Email notifications can be sent to specific users by using the same '@username' notation as events.\n* **`tags`** [*optional*, *default* = **empty list**]: A list of tags to associate with your monitor. When getting all monitor details via the API, use the `monitor_tags` argument to filter results by these tags. It is only available via the API and isn't visible or editable in the Datadog UI.\n\n* **`options`** [*optional*, *default*=**{}**]: A dictionary of options for the monitor. There are options that are common to all types as well as options that are specific to certain monitor types.\n   \n##### Common Options\n\n*   **`silenced`** dictionary of scopes to timestamps or `None`. Each scope is muted until the given POSIX timestamp or forever if the value is `None`. Default: **None**\n    Examples:\n    *   To mute the alert completely: `{'*': None}`\n    *   To mute `role:db` for a short time: `{'role:db': 1412798116}`\n\n*   **`notify_no_data`** a boolean indicating whether this monitor notifies when data stops reporting. Default: **false**\n\n*   **`new_host_delay`** Time (in seconds) to allow a host to boot and applications to fully start before starting the evaluation of monitor results. Should be a non negative integer. Default: **300**\n\n*   **`no_data_timeframe`** the number of minutes before a monitor notifies when data stops reporting. Must be at least 2x the monitor timeframe for metric alerts or 2 minutes for service checks. Default: **2x timeframe for metric alerts, 2 minutes for service checks**\n\n*   **`timeout_h`** the number of hours of the monitor not reporting data before it automatically resolves from a triggered state. Default: **None**.\n\n*   **`require_full_window`** a boolean indicating whether this monitor needs a full window of data before it's evaluated. We highly recommend you set this to `False` for sparse metrics, otherwise some evaluations are skipped. Default: **True** for \"on average\", \"at all times\" and \"in total\" aggregation. **False** otherwise.\n\n*   **`renotify_interval`** the number of minutes after the last notification before a monitor re-notifies on the current status. It only re-notifies if it's not resolved. Default: **None**.\n\n*   **`escalation_message`** a message to include with a re-notification. Supports the '@username' notification we allow elsewhere. Not applicable if `renotify_interval` is `None`. Default: **None**.\n\n*   **`notify_audit`** a boolean indicating whether tagged users is notified on changes to this monitor. Default: **False**\n\n*   **`locked`** a boolean indicating whether changes to to this monitor should be restricted to the creator or admins. Default: **False**\n\n*   **`include_tags`** a boolean indicating whether notifications from this monitor automatically inserts its triggering tags into the title. Default: **True** Examples:\n    *   True: `[Triggered on {host:h1}] Monitor Title`\n    *   False: `[Triggered] Monitor Title`\n\n##### Anomaly Options\n\n_These options only apply to anomaly monitors and are ignored for other monitor types._\n\n-   **`threshold_windows`** a dictionary containing `recovery_window` and `trigger_window`.\n    * `recovery_window` describes how long an anomalous metric must be normal before the alert recovers\n    * `trigger_window` describes how long a metric must be anomalous before an alert triggers\n\n        Example: `{'threshold_windows': {'recovery_window': 'last_15m', 'trigger_window': 'last_15m'}}`\n\n##### Metric Alert Options\n\n_These options only apply to metric alerts._\n\n-   **`thresholds`** a dictionary of thresholds by threshold type. There are two threshold types for metric alerts: *critical* and *warning*. *Critical* is defined in the query, but can also be specified in this option. *Warning* threshold can only be specified using the thresholds option.\nIf you want to use [recovery thresholds][6] for your monitor, use the attributes `critical_recovery` and `warning_recovery`.\n\n        Example: `{'critical': 90, 'warning': 80,  'critical_recovery': 70, 'warning_recovery': 50}`\n\n-   **`evaluation_delay`** Time (in seconds) to delay evaluation, as a non-negative integer. For example, if the value is set to 300 (5min), the timeframe is set to last_5m and the time is 7:00, the monitor evaluates data from 6:50 to 6:55. This is useful for AWS CloudWatch and other backfilled metrics to ensure the monitor always has data during evaluation.\n\n##### Service Check Options\n\n_These options only apply to service checks and are ignored for other monitor types._\n\n-   **`thresholds`** a dictionary of thresholds by status. Because service checks can have multiple thresholds, we don't define them directly in the query.\n\n        Example: `{'ok': 1, 'critical': 1, 'warning': 1}`\n\n[1]: https://docs.datadoghq.com/monitors/#export-your-monitor\n[2]: https://docs.datadoghq.com/monitors/monitor_types\n[3]: https://docs.datadoghq.com/monitors/monitor_types/#define-the-conditions\n[4]: https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value\n[5]: https://docs.datadoghq.com/graphing/infrastructure/process\n[6]: https://docs.datadoghq.com/monitors/faq/what-are-recovery-thresholds"
					},
					"response": []
				},
				{
					"name": "Get a Monitor's Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/monitor/:MONITOR_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":MONITOR_ID"
							],
							"query": [
								{
									"key": "group_states",
									"value": "",
									"description": "Includes additional information if available",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "MONITOR_ID",
									"value": "<MONITOR_ID_TO_GET>",
									"type": "string",
									"description": "Id of the monitor you want to get info from"
								}
							]
						},
						"description": "### Overview\n\nGet a monitor details based on its monitor ID.\n\n### Arguments\n\n* **`group_states`** [*optional*, *default*=**None**]: If this argument is set, the returned data includes additional information (if available) regarding the specified group states, including the last notification timestamp, last resolution timestamp and details about the last time the monitor was triggered. The argument should include a string list indicating what, if any, group states to include. Choose one or more from **all**, **alert**, **warn**, or **no data**. Example: 'alert,warn'\""
					},
					"response": []
				},
				{
					"name": "Edit a Monitor's Details",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"created\": \"2018-04-25T16:06:10.564735+00:00\",\n    \"created_at\": 1524672370000,\n    \"creator\": {\n        \"email\": \"test@datadoghq.com\",\n        \"handle\": \"test@datadoghq.com\",\n        \"id\": 580920,\n        \"name\": \"Testy McTestingson\"\n    },\n    \"deleted\": null,\n    \"id\": 4769031,\n    \"matching_downtimes\": [],\n    \"message\": \"Example Windows Service Check for {{service.name}} on {{host.name}}\",\n    \"modified\": \"2018-04-25T16:06:10.564735+00:00\",\n    \"multi\": true,\n    \"name\": \"Windows Service Check\",\n    \"options\": {\n        \"locked\": false,\n        \"new_host_delay\": 300,\n        \"no_data_timeframe\": 2,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"renotify_interval\": 0,\n        \"silenced\": {},\n        \"thresholds\": {\n            \"critical\": 3,\n            \"ok\": 3,\n            \"warning\": 3\n        },\n        \"timeout_h\": 0\n    },\n    \"org_id\": 12345,\n    \"overall_state\": \"No Data\",\n    \"overall_state_modified\": null,\n    \"query\": \"\\\"windows_service.state\\\".over(\\\"host:GamingPC\\\",\\\"service:termservice\\\").by(\\\"host\\\",\\\"service\\\").last(4).count_by_status()\",\n    \"tags\": [],\n    \"type\": \"service check\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/monitor/:MONITOR_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":MONITOR_ID"
							],
							"variable": [
								{
									"key": "MONITOR_ID",
									"value": "<MONITOR_ID_TO_EDIT>",
									"type": "string",
									"description": "Id of the monitor you want to edit info from"
								}
							]
						},
						"description": "### Overview\n\nEdit a monitor details based on its monitor ID.\n\n### Arguments\n\n* **`query`** [*required*]: The metric query to alert on.\n* **`name`** [*required*]: The name of the monitor.\n* **`message`** [*optional*, *default*=**dynamic, based on query**]: A message to include with notifications for this monitor. Email notifications can be sent to specific users by using the same '@username' notation as events.\n* **`options`** [*optional*, *default*=**{}**]: Refer to the create monitor documentation for details on the available options.\n* **`tags`** [*optional*, *default*=**None**]: A list of tags to associate with your monitor. This can help you categorize and filter monitors"
					},
					"response": []
				},
				{
					"name": "Can delete a Monitor",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/monitor/can_delete?monitor_id=<MONITOR_ID>",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"can_delete"
							],
							"query": [
								{
									"key": "monitor_id",
									"value": "<MONITOR_ID>",
									"description": "Comma-separated list of monitor IDs to check if they can be deleted."
								}
							]
						},
						"description": "### Overview \n\nCheck if a monitor can be deleted\n\n### ARGUMENTS\n\n* **`monitor_ids`**\n    The comma-separated list of monitor ids to check if they can be deleted."
					},
					"response": []
				},
				{
					"name": "Delete a Monitor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/monitor/:MONITOR_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":MONITOR_ID"
							],
							"variable": [
								{
									"key": "MONITOR_ID",
									"value": "<MONITOR_ID_TO_DELETE>",
									"type": "string",
									"description": "Id of the monitor to Delete"
								}
							]
						},
						"description": "### Overview\n\nDelete a monitor based on its monitor ID.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Resolve Monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"resolve\": [\n        {\n            \"<MONITOR_ID>\": \"*\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/monitor/bulk_resolve",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"monitor",
								"bulk_resolve"
							]
						},
						"description": "### Overview\n\nResolve a monitor by monitorId & Group.\n\n### Arguments\n\n* **`resolve`** [*required*]: Array of group(s) to resolve for a given monitor_id, e.g.: `{\"monitor_id\": \"group_to_resolve\"}`\n\n    * It supports multiple groups per monitor, e.g.: `resolve: [{\"monitor_id\": \"group_1\"}, {\"monitor_id\": \"group_2\"}]`\n\n    * It can also resolve all triggered groups with the pseudo-group `ALL_GROUPS`: `resolve: [{\"monitor_id\": \"ALL_GROUPS\"}]`"
					},
					"response": []
				},
				{
					"name": "Mute A Specific Monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/monitor/:MONITOR_ID/mute",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":MONITOR_ID",
								"mute"
							],
							"variable": [
								{
									"key": "MONITOR_ID",
									"value": "<MONITOR_ID_TO_MUTE>",
									"type": "string",
									"description": "ID of the monitor to mute."
								}
							]
						},
						"description": "### Overview\n\nMute a specific monitor base on its ID.\n\n### Arguments\n* **`scope`** [*optional*, *default*=**None**]: The scope to apply the mute to, e.g. **role:db**. For example, if your alert is grouped by `{host}`, you might mute `host:app1`.\n* **`end`** [*optional*, *default*=**None**]: A POSIX timestamp for when the mute should end."
					},
					"response": []
				},
				{
					"name": "Unmute A Specific Monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/monitor/:MONITOR_ID/unmute",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":MONITOR_ID",
								"unmute"
							],
							"variable": [
								{
									"key": "MONITOR_ID",
									"value": "<MONITOR_ID_TO_UNMUTE>",
									"type": "string",
									"description": "ID of the monitor to un-mute."
								}
							]
						},
						"description": "### Overview\n\n### Arguments\n\n* **`scope`** [*optional*, *default*=**None**]: The scope to apply the mute to. For example, if your alert is grouped by {host}, you might mute 'host:app1'\n* **`all_scopes`** [*optional*, *default* = **False**]: Clear muting across all scopes"
					},
					"response": []
				},
				{
					"name": "Mute All Monitors",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/monitor/mute_all",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"mute_all"
							]
						},
						"description": "### Overview\n\nMuting prevents all monitors from notifying through email and posts to the [event stream][1]. State changes are only visible by checking the alert page.\n\n### Arguments\n\nThis endpoint takes no JSON arguments.\n\n[1]: https://docs.datadoghq.com/graphing/event_stream"
					},
					"response": []
				},
				{
					"name": "Unmute All Monitors",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/monitor/unmute_all",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"unmute_all"
							]
						},
						"description": "### Overview\n\nDisables muting all monitors. Throws an error if mute all was not enabled previously.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Validate a Monitor Definitions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"metric alert\",\n    \"query\": \"THIS QUERY IS INVALID\",\n    \"name\": \"Bytes received on myhost\",\n    \"message\": \"We may need to add web hosts if this is consistently high.\",\n    \"tags\": [\n        \"app:webserver\",\n        \"frontend\"\n    ],\n    \"options\": {\n        \"notify_no_data\": true,\n        \"no_data_timeframe\": 20\n    }\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/monitor/validate",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"validate"
							]
						},
						"description": "### Overview\n\nValidates a monitor definition.\n\n### Arguments\n\nSee [Create a monitor][1] documentation for details on constructing a monitor definition.\n\n[1]: https://docs.datadoghq.com/api/#create-a-monitor"
					},
					"response": []
				},
				{
					"name": "Monitor Search",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/monitor/search?",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": null,
									"description": "Query to filter your monitors",
									"disabled": true
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page to start paginating from.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "30",
									"description": " Number of monitors to return per page.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": null,
									"description": "Comma separated string for sort order (e.g. name,asc) supported fields:\n\nname\nstatus\ntags",
									"disabled": true
								}
							]
						},
						"description": "### Overview\n\nSearch and filter your monitors details.\n\n### Arguments\n\n* **`query`** [*optional*]: After entering a search query in your [Manage Monitor page][1] use the query parameter value in the URL of the page as value for this parameter. Consult the dedicated [manage monitor documentation][2] page to learn more. The query can contain any number of space-separated monitor attributes, for instance `query=\"type:metric status:alert\"`.\n\n* **`page`** [*optional*, *default* = **0**]: Page to start paginating from.\n\n* **`per_page`** [*optional*, *default*=**30**]: Number of monitors to return per page.\n\n* **`sort`** [*optional*, *default*=**null**]: Comma separated string for sort order (e.g. name,asc) supported fields:\n\n    * `name`\n    * `status`\n    * `tags`\n\n[1]: https://app.datadoghq.com/monitors/manage\n[2]: https://docs.datadoghq.com/monitors/manage_monitor/#find-the-monitors"
					},
					"response": []
				},
				{
					"name": "Monitor Group Search",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/monitor/groups/search",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"groups",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "",
									"description": "After entering a search query in your Manage Monitor page use the query parameter value in the URL of the page as value for this parameter. Consult the dedicated manage monitor documentation page to learn more.",
									"disabled": true
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page to start paginating from.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "30",
									"description": "Number of monitors to return per page.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "",
									"description": "Comma separated string for sort order (e.g. name,asc) supported fields:\n\nname\nstatus\ntags",
									"disabled": true
								}
							]
						},
						"description": "### Overview\n\nSearch and filter your monitor groups details.\n\n### ARGUMENTS\n\n* **`query`** [*optional*]: After entering a search query in your [Manage Monitor page][1] use the query parameter value in the URL of the page as value for this parameter. Consult the dedicated [manage monitor documentation][2] page to learn more.\n\n* **`page`** [*optional*, *default* = **0**]: Page to start paginating from.\n\n* **`per_page`** [*optional*, *default*=**30**]: Number of monitors to return per page.\n\n* **`sort`** [*optional*, *default*=**null**]: Comma separated string for sort order (e.g. `name,asc`) supported fields:\n\n    * `name`\n    * `status`\n    * `tags`\n\n[1]: https://app.datadoghq.com/monitors/manage\n[2]: https://docs.datadoghq.com/monitors/manage_monitor/#find-the-monitors"
					},
					"response": []
				}
			],
			"description": "Monitors allow you to watch a metric or check that you care about, notifying your team when some defined threshold is exceeded. Please refer to the Guide to Monitors for more information on creating monitors.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Organizations",
			"item": [
				{
					"name": "Create child-organization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Org Setup by API\",\n    \"subscription\": {\n        \"type\": \"pro\"\n    },\n    \"billing\": {\n        \"type\": \"parent_billing\"\n    }\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/org",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"org"
							]
						},
						"description": "### Overview\n\nThis endpoint requires the [multi-org account][1] feature and must be enabled by [contacting support][2].\n\n### Arguments\n\n* **`name`** [*required*]: The name of the new child-organization, limited to 32 characters.\n* **`subscription`** [*required*]: A JSON array of subscription type. Types available are `trial`, `free`, and `pro`.\n* **`billing`** [*required*]: A JSON array of billing type. Note that only `parent_billing` is supported.\n\nOnce a new child-organization is created, you can interact with it by using the `org.public_id`, `api_key.key`, and `application_key.hash` provided in the response.\n\n[1]: https://docs.datadoghq.com/account_management/multi_organization\n[2]: https://docs.datadoghq.com/help"
					},
					"response": []
				},
				{
					"name": "Get Organization",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/org/:PUBLIC_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"org",
								":PUBLIC_ID"
							],
							"variable": [
								{
									"key": "PUBLIC_ID",
									"value": "<DATADOG_ORG_PUBLIC_ID_TO_GET>",
									"type": "string",
									"description": "Datadog public organization ID."
								}
							]
						},
						"description": "### Overview\nGet an organisation details based on its public ID.\n\n### Arguments\n\n* **`public_id`** [*required*]: The public id of the organization."
					},
					"response": []
				},
				{
					"name": "Get All Organizations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/org",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"org"
							]
						},
						"description": "### Overview\n\nGet all child-organisation details for a given Master organisation.\n\n### Arguments\n\nThis endpoint takes no JSON argument."
					},
					"response": []
				},
				{
					"name": "Update Organization",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"settings\": {\n        \"saml\": {\n            \"enabled\": false\n        },\n        \"saml_strict_mode\": {\n            \"enabled\": false\n        },\n        \"saml_idp_initiated_login\": {\n            \"enabled\": false\n        },\n        \"saml_autocreate_users_domains\": {\n            \"enabled\": false,\n            \"domains\": [\n                \"example.com\"\n            ]\n        }\n    }\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/org/:PUBLIC_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"org",
								":PUBLIC_ID"
							],
							"variable": [
								{
									"key": "PUBLIC_ID",
									"value": "<DATADOG_ORG_PUBLIC_ID_TO_UPDATE>",
									"type": "string",
									"description": "Public ID of a Datadog organisation."
								}
							]
						},
						"description": "### Overview\n\nUpdate a Datadog organization information.\n\n##### ARGUMENTS\n* **`name`** [*optional*]: The organization name.\n* **`settings`** [*optional*]: A JSON array of settings. Settings include:\n    * **`saml`** - Set the boolean property `enabled` to enable or disable single sign on with SAML. See the [SAML documentation][1] for more information about all SAML settings.\n    * **`saml_idp_initiated_login`** - has one property `enabled` (boolean).v\n    * **`saml_strict_mode`** - has one property `enabled` (boolean).\n    * **`saml_autocreate_users_domains`** - has two properties: `enabled` (boolean) and `domains` which is a list of domains without the @ symbol.\n\n[1]: https://docs.datadoghq.com/account_management/saml"
					},
					"response": []
				},
				{
					"name": "Upload iDP metadata",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": ""
							}
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/org/:PUBLIC_ID/idp_metadata",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"org",
								":PUBLIC_ID",
								"idp_metadata"
							],
							"variable": [
								{
									"key": "PUBLIC_ID",
									"value": "<DATADOG_ORG_PUBLIC_ID>",
									"type": "string",
									"description": "Public ID of a Datadog organisation."
								}
							]
						},
						"description": "### Overview\n\nThere are a couple of options for updating the Identity Provider (IdP) metadata from your SAML IdP.\n\n* **Multipart Form-Data**: Post the IdP metadata file using a form post.\n* **XML Body**: Post the IdP metadata file as the body of the request.\n\n### Multipart Form-Data\n\n#### Headers\n\n* **`Content-Type: multipart/form-data`**\n\n#### Arguments\n\n* **`idp_file`** [*required*]: The path to the XML metadata file you wish to upload.\n\n### XML Body\n\n#### Headers\n* **`Content-Type: application/xml`**\n\n#### Arguments\n\nThe body must contain the contents of your IdP metadata XML file."
					},
					"response": []
				}
			],
			"description": "This endpoint requires the [multi-org account feature](https://docs.datadoghq.com/account_management/multi_organization) and must be enabled by contacting support.\n\nYou can create, edit, and manage organizations. Read more about [multi-org accounts](https://docs.datadoghq.com/account_management/multi_organization).",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4bfcbf69-1cf1-43f5-bcb1-7eb0e3d3b95f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8192426f-c281-4ad7-88a5-012c97209c9c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Synthetics",
			"item": [
				{
					"name": "Create a test",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"config\": {\n        \"assertions\": [\n            {\n                \"operator\": \"is\",\n                \"type\": \"statusCode\",\n                \"target\": 403\n            },\n            {\n                \"operator\": \"is\",\n                \"property\": \"content-type\",\n                \"type\": \"header\",\n                \"target\": \"text/html\"\n            },\n            {\n                \"operator\": \"lessThan\",\n                \"type\": \"responseTime\",\n                \"target\": 2000\n            }\n        ],\n        \"request\": {\n            \"method\": \"GET\",\n            \"url\": \"https://datadoghq.com\",\n            \"timeout\": 30,\n            \"headers\": {\n                \"header1\": \"value1\",\n                \"header2\": \"value2\"\n            },\n            \"body\": \"body to send with the request\"\n        }\n    },\n    \"locations\": [\n        \"aws:us-east-2\",\n        \"aws:eu-central-1\",\n        \"aws:ca-central-1\",\n        \"aws:eu-west-2\",\n        \"aws:ap-northeast-1\",\n        \"aws:us-west-2\",\n        \"aws:ap-southeast-2\"\n    ],\n    \"message\": \"test\",\n    \"name\": \"Test\",\n    \"options\": {\n        \"tick_every\": 60,\n        \"min_failure_duration\": 0,\n        \"min_location_failed\": 1,\n        \"follow_redirects\": true\n    },\n    \"tags\": [\n        \"foo:bar\"\n    ],\n    \"type\": \"api\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/synthetics/tests",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests"
							]
						},
						"description": "### Overview\n\nCreate a Synthetics test to initiate and configure the tests you want Datadog to send to your API endpoints or to your browser app. You can configure the endpoints being tested, the number of tests, and where they are coming from. The parameters required are different for API and browser tests and they are marked accordingly—if a parameter is marked as _required_, it is required for both types of tests. Once you create a test, it shows up in the UI in your [Synthetics list][1]\n\nA browser test is treated like a GET API test. This method gives you the ability to create the browser test, but you have to use the UI to [record your test][2].\n\n### Arguments\n\nThe main arguments for your test are:\n\n*   **`name`** - _required_ - A unique name for the test.\n*   **`type`** - _required_ - The type of test. Valid values are `api` and `browser`.\n*   **`subtype`** - _required for SSL test_ - For a SSL API test, specify `ssl` as the value. Otherwise, you should omit this argument.\n*   **`request`** - _required_ - The request associated to your API and SSL test, refer to the Request section below to learn more.\n*   **`options`** - _required_ - List of options to customize your test, refer to the Options section below to learn more.\n*   **`message`** - _required_ - A description of the test.\n*   **`assertions`** - _required for API and SSL test_ - The assertions associated with your test, refer to the Assertions section below to learn more.\n*   **`locations`** - _required_ - A list of the locations to send the tests from. At least one value is required, and you can use all locations. For a list of valid locations, use the `GET available locations` method.\n*   **`tags`** - _optional_ - A list of tags used to filter your test when you are viewing it in Datadog. For more info on custom tags, see [Using tags][2].\n\nFind below the available configuration options depending on the test you want to create.\n\n#### Request\n\nThe **`request`**  argument is required for the browser, API, and SSL tests. It's an object containing all necessary information to perform the request to your endpoint. It's a JSON object with the following attributes:\n\n*   **`method`** - _required API and browser test_ - The method of the API to test. Valid values are `GET`, `POST`, `PUT`, `PATCH`, and `DELETE`. Use `GET` for a browser test.\n*   **`url`** - _required API and browser test_ - The endpoint for the API Datadog is testing. For a browser test, the URL for the website Datadog is testing.\n*   **`host`** - _required SSL test_ - If creating a SSL test, specify the host to connect to.\n*   **`port`** - _required SSL test_ - If creating a SSL test, specify the port to connect to.\n*   **`basicAuth`** - _optional_ - If your endpoint is behind basic Auth, use this parameter to define your username and password with the following value: `{\"username\": \"<USERNAME>\", \"password\": \"<PASSWORD>\"}`.\n*   **`timeout`** - _optional_ - When the request should timeout.\n*   **`headers`** - _optional API test_ - Headers in the API request.\n*   **`body`** - _optional API test_ - The body for the API request. Accepts text strings (including JSON as a text string). Specify the type using the `Content-Type` `property` parameter and type, for example `application/json` or `text/plain` in the `headers` parameter.\n*   **`cookies`** - _optional API test_ - Cookies to send along with your API test request.\n\n#### Options\n\nThe **`options`** argument is required for the browser, API, and SSL tests. Use it to specify custom request headers, authentication credentials, body content, cookies, or have the test follow redirects. All optional parameters take their default value if you don't specify a value. It's a JSON object with the following attributes available:\n\n*  **`tick_every`:** - _required_ -  How often the test should run (in seconds - current possible values are 60, 300, 900, 1800, 3600, 21600, 43200, 86400, and 604800).\n*  **`min_failure_duration`** - _optional_ - How long the test should be in failure before alerting (integer, number of seconds, max 7200). Default is 0.\n*  **`min_location_failed`** - _optional_ - The minimum number of locations in failure at the same time during at least one moment in the `min_failure_duration` period (min_location_failed and min_failure_duration are part of the advanced alerting rules  - integer, >= 1). Default is 1.\n*  **`follow_redirects`** - _optional_ - boolean - whether to follow redirects (a max of ten redirects can be followed before triggering a \"Too many redirects\" error). Valid values are `true` or `false`. Default value is `false`.\n*  **`device_ids`** - _required browser test_ - The type of device used to test. To get a list of available devices, use the `id` from the response of the `GET devices for browser checks` method. At least one device is required.\n\n#### Assertions\n\nThe **`assertions`**  argument is required for the API and SSL tests. It allows you to define exactly what should happen for a test to be considered passed. **It's an array of JSON objects** with the following attributes available:\n\n*   **`type`** - _required_ - The part of the response that you want to assess. Possible types are:\n\n  * `header`: When you define a header, you must specify the header parameter key in the `property` parameter, and the header parameter value with the `target` parameter.\n  * `body`: Use the `target` attribute to specify the expected value for the `body`.\n  * `responseTime`: Use the `target` attribute to specify the expected value for `responseTime`. For example: `\"target\":180000`.\n  * `statusCode`: Use the `target` attribute to specify the expected value for `statusCode`. For example: `\"target\":403`.\n  * `certificate`:  For SSL tests only, use the `target` attribute to specify the expected value for `certificate`. `\"target\":1` is a valid certificate, `\"target\":0` is a non-valid certificate.\n  * `property`: For SSL tests only, when you define a certificate `property`, you must specify the certificate property key in the `property` parameter, and the certificate property value with the `target`parameter.\n\n*   **`target`** - _required_ - The expected value for the assertion.\n*   **`property`** - _optional_ - When you are setting up a `header` for the `type` parameter, this is required to define the headers parameter key. Valid values are any header keys, like `Content-Type` or `Authorization`.\n*   **`operator`** - _required_ - Defines how to compare the target and the actual value from the response. Valid operators depend on the `type` of assertions. This is the list of valid operators per type:\n\n| type        | Valid operator                                                            | Value type                                                                                                                                           |\n| ---           | ---                                                                         | ---                                                                                                                                                  |\n| `header`       | `contains`, `does not contain`, `is`, `is not`, `matches`, `does not match` | String for `contains`/`does not contain`/`is`/`is not`.  [RegexString][3] for: `matches`/`does not match`. |\n| `body`          | `contains`, `does not contain`, `is`, `is not`, `matches`, `does not match` | String for: `contains`/`does not contain`/`is`/`is not`. [RegexString][3] for: `matches`/`does not match`. |\n| `responseTime` | `lessThan`                                                                  | Integer                                                                                                                                              |\n| `statusCode`   | `is`, `is not`                                                              | Integer                                                                                                                                              |\n| `certificate` | `isInMoreThan` | Integer |\n| `property` | `contains`, `does not contain`, `is`, `is not`, `matches`, `does not match` | String for: `contains`/`does not contain`/`is`/`is not`. [RegexString][3] for: `matches`/`does not match`. |\n\n[1]: https://app.datadoghq.com/synthetics/list\n[2]: /synthetics/browser_tests/#record-test\n[3]: https://en.wikipedia.org/wiki/Regular_expression"
					},
					"response": []
				},
				{
					"name": "Start or pause a test",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"new_status\": \"paused\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/synthetics/tests/:TEST_ID/status",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								":TEST_ID",
								"status"
							],
							"variable": [
								{
									"key": "TEST_ID",
									"value": "<SYNTHETICS_TEST_ID>",
									"type": "string",
									"description": "ID of the synthetics test to start/pause"
								}
							]
						},
						"description": "### Overview\n\nStart or pause an existing Synthetics test.\n\n##### Arguments\n\n*   **`new_status`** - _required_ - A key-value pair where you define whether you want to start or pause a test. Valid values are `live` and `paused`. Returns `true` if the status has been changed, and `false` if the status has stayed the same."
					},
					"response": []
				},
				{
					"name": "Edit a test",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"config\": {\n        \"assertions\": [\n            {\n                \"operator\": \"is\",\n                \"type\": \"statusCode\",\n                \"target\": 403\n            },\n            {\n                \"operator\": \"is\",\n                \"property\": \"content-type\",\n                \"type\": \"header\",\n                \"target\": \"text/html\"\n            },\n            {\n                \"operator\": \"lessThan\",\n                \"type\": \"responseTime\",\n                \"target\": 2000\n            }\n        ],\n        \"request\": {\n            \"method\": \"GET\",\n            \"url\": \"https://datadoghq.com\",\n            \"timeout\": 30,\n            \"headers\": {\n                \"header1\": \"value1\",\n                \"header2\": \"value2\"\n            },\n            \"body\": \"body to send with the request\"\n        }\n    },\n    \"locations\": [\n        \"aws:us-east-2\",\n        \"aws:eu-central-1\",\n        \"aws:ap-northeast-1\",\n        \"aws:us-west-2\",\n        \"aws:ap-southeast-2\"\n    ],\n    \"message\": \"test\",\n    \"name\": \"Test\",\n    \"options\": {\n        \"tick_every\": 60,\n        \"min_failure_duration\": 0,\n        \"min_location_failed\": 1,\n        \"follow_redirects\": true\n    },\n    \"tags\": [\n        \"foo:bar\"\n    ],\n    \"type\": \"api\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/synthetics/tests/:PUBLIC_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								":PUBLIC_ID"
							],
							"variable": [
								{
									"key": "PUBLIC_ID",
									"value": "<SYNTHETICS_TEST_PUBLIC_ID>",
									"type": "string",
									"description": "ID of the test to Edit"
								}
							]
						},
						"description": "### Overview\n\nUse this method to update an existing Synthetics test. In order to update a test, you have to submit the same payload as creating a test.\n\nThe parameters required are different for API and browser tests and they are marked accordingly—if a parameter is marked as _required_, it is required for both types of tests.\n\nA browser test is treated like a GET API test. This method gives you the ability to update the browser test, but you have to use the UI to [record your test][1].\n\nIn order to update a request, you have to submit a full object, but only these parameters are editable: `name`, `tags`, `config` (anything defined in the `assertions` and anything defined in the `request`), `message`, `options`, `locations`, and `status`.\n\n### Arguments\n\nThe main arguments for your test are:\n\n*   **`name`** - _required_ - A unique name for the test.\n*   **`type`** - _required_ - The type of test. Valid values are `api` and `browser`.\n*   **`subtype`** - _required for SSL test_ - For a SSL API test, specify `ssl` as the value. Otherwise, you should omit this argument.\n*   **`request`** - _required_ - The request associated to your API and SSL test, refer to the Request section below to learn more.\n*   **`options`** - _required_ - List of options to customize your test, refer to the Options section below to learn more.\n*   **`message`** - _required_ - A description of the test.\n*   **`assertions`** - _required for API and SSL test_ - The assertions associated with your test, refer to the Assertions section below to learn more.\n*   **`locations`** - _required_ - A list of the locations to send the tests from. At least one value is required, and you can use all locations. For a list of valid locations, use the `GET available locations` method.\n*   **`tags`** - _optional_ - A list of tags used to filter your test when you are viewing it in Datadog. For more info on custom tags, see [Using tags][2].\n\nFind below the available configuration options depending on the test you want to create.\n\n#### Request\n\nThe **`request`**  argument is required for the browser, API, and SSL tests. It's an object containing all necessary information to perform the request to your endpoint. It's a JSON object with the following attributes:\n\n*   **`method`** - _required API and browser test_ - The method of the API to test. Valid values are `GET`, `POST`, `PUT`, `PATCH`, and `DELETE`. Use `GET` for a browser test.\n*   **`url`** - _required API and browser test_ - The endpoint for the API Datadog is testing. For a browser test, the URL for the website Datadog is testing.\n*   **`host`** - _required SSL test_ - If creating a SSL test, specify the host to connect to.\n*   **`port`** - _required SSL test_ - If creating a SSL test, specify the port to connect to.\n*   **`basicAuth`** - _optional_ - If your endpoint is behind basic Auth, use this parameter to define your username and password with the following value: `{\"username\": \"<USERNAME>\", \"password\": \"<PASSWORD>\"}`.\n*   **`timeout`** - _optional_ - When the request should timeout.\n*   **`headers`** - _optional API test_ - Headers in the API request.\n*   **`body`** - _optional API test_ - The body for the API request. Accepts text strings (including JSON as a text string). Specify the type using the `Content-Type` `property` parameter and type, for example `application/json` or `text/plain` in the `headers` parameter.\n*   **`cookies`** - _optional API test_ - Cookies to send along with your API test request.\n\n#### Options\n\nThe **`options`** argument is required for the browser, API, and SSL tests. Use it to specify custom request headers, authentication credentials, body content, cookies, or have the test follow redirects. All optional parameters take their default value if you don't specify a value. It's a JSON object with the following attributes available:\n\n*  **`tick_every`:** - _required_ -  How often the test should run (in seconds - current possible values are 60, 300, 900, 1800, 3600, 21600, 43200, 86400, and 604800).\n*  **`min_failure_duration`** - _optional_ - How long the test should be in failure before alerting (integer, number of seconds, max 7200). Default is 0.\n*  **`min_location_failed`** - _optional_ - The minimum number of locations in failure at the same time during at least one moment in the `min_failure_duration` period (min_location_failed and min_failure_duration are part of the advanced alerting rules  - integer, >= 1). Default is 1.\n*  **`follow_redirects`** - _optional_ - boolean - whether to follow redirects (a max of ten redirects can be followed before triggering a \"Too many redirects\" error). Valid values are `true` or `false`. Default value is `false`.\n*  **`device_ids`** - _required browser test_ - The type of device used to test. To get a list of available devices, use the `id` from the response of the `GET devices for browser checks` method. At least one device is required.\n\n#### Assertions\n\nThe **`assertions`**  argument is required for the API and SSL tests. It allows you to define exactly what should happen for a test to be considered passed. **It's an array of JSON objects** with the following attributes available:\n\n*   **`type`** - _required_ - The part of the response that you want to assess. Possible types are:\n\n  * `header`: When you define a header, you must specify the header parameter key in the `property` parameter, and the header parameter value with the `target` parameter.\n  * `body`: Use the `target` attribute to specify the expected value for the `body`.\n  * `responseTime`: Use the `target` attribute to specify the expected value for `responseTime`. For example: `\"target\":180000`.\n  * `statusCode`: Use the `target` attribute to specify the expected value for `statusCode`. For example: `\"target\":403`.\n  * `certificate`:  For SSL tests only, use the `target` attribute to specify the expected value for `certificate`. `\"target\":1` is a valid certificate, `\"target\":0` is a non-valid certificate.\n  * `property`: For SSL tests only, when you define a certificate `property`, you must specify the certificate property key in the `property` parameter, and the certificate property value with the `target`parameter.\n\n*   **`target`** - _required_ - The expected value for the assertion.\n*   **`property`** - _optional_ - When you are setting up a `header` for the `type` parameter, this is required to define the headers parameter key. Valid values are any header keys, like `Content-Type` or `Authorization`.\n*   **`operator`** - _required_ - Defines how to compare the target and the actual value from the response. Valid operators depend on the `type` of assertions. This is the list of valid operators per type:\n\n| type        | Valid operator                                                            | Value type                                                                                                                                           |\n| ---           | ---                                                                         | ---                                                                                                                                                  |\n| `header`       | `contains`, `does not contain`, `is`, `is not`, `matches`, `does not match` | String for `contains`/`does not contain`/`is`/`is not`.  [RegexString][3] for: `matches`/`does not match`. |\n| `body`          | `contains`, `does not contain`, `is`, `is not`, `matches`, `does not match` | String for: `contains`/`does not contain`/`is`/`is not`. [RegexString][3] for: `matches`/`does not match`. |\n| `responseTime` | `lessThan`                                                                  | Integer                                                                                                                                              |\n| `statusCode`   | `is`, `is not`                                                              | Integer                                                                                                                                              |\n| `certificate` | `isInMoreThan` | Integer |\n| `property` | `contains`, `does not contain`, `is`, `is not`, `matches`, `does not match` | String for: `contains`/`does not contain`/`is`/`is not`. [RegexString][3] for: `matches`/`does not match`. |\n\n[1]: /synthetics/browser_tests/#record-test\n[2]: /tagging/using_tags\n[3]: https://en.wikipedia.org/wiki/Regular_expression"
					},
					"response": []
				},
				{
					"name": "Delete a test",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"public_ids\": [\n        \"<SYNTHETICS_TEST_PUBLIC_ID_1>\",\n        \"<SYNTHETICS_TEST_PUBLIC_ID_2>\"\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/synthetics/tests/delete",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"delete"
							]
						},
						"description": "### Overview\n\nDelete one or many tests.\n\n### Arguments\n\n*   **`public_ids`** - _required_ - A JSON list of the ID or IDs of the tests that you want to delete."
					},
					"response": []
				},
				{
					"name": "Get all test results",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/synthetics/tests/:PUBLIC_ID/results",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								":PUBLIC_ID",
								"results"
							],
							"variable": [
								{
									"key": "PUBLIC_ID",
									"value": "<SYNTHETICS_TEST_PUBLIC_ID>",
									"type": "string",
									"description": "ID of the synthetics test to get results from"
								}
							]
						},
						"description": "### Overview\n\nGet the most recent results for a specific test.\n\n### Arguments\n\n*This endpoint takes no JSON arguments.*"
					},
					"response": []
				},
				{
					"name": "Get a specific test result",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/synthetics/tests/:PUBLIC_ID/results/:RESULT_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								":PUBLIC_ID",
								"results",
								":RESULT_ID"
							],
							"variable": [
								{
									"key": "PUBLIC_ID",
									"value": "<SYNTHETICS_TEST_PUBLIC_ID>",
									"type": "string",
									"description": "ID of the synthetics test to get results from"
								},
								{
									"key": "RESULT_ID",
									"value": "<SYNTHETICS_TEST_RESULT_ID>",
									"type": "string",
									"description": "ID of the synthetics test result."
								}
							]
						},
						"description": "### Overview\n\nGet a specific result for a specific test.\n\n### Arguments\n\n*This endpoint takes no JSON arguments.*"
					},
					"response": []
				},
				{
					"name": "Get all tests",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/synthetics/tests",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests"
							]
						},
						"description": "### Overview\n\nGet a list of all existing tests.\n\n### Arguments\n\n*This endpoint takes no JSON arguments.*"
					},
					"response": []
				},
				{
					"name": "Get a test",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/synthetics/tests/:PUBLIC_ID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								":PUBLIC_ID"
							],
							"variable": [
								{
									"key": "PUBLIC_ID",
									"value": "SYNTHETICS_TEST_PUBLIC_ID",
									"type": "string",
									"description": "ID of the synthetics test to get results from"
								}
							]
						},
						"description": "### Overview\n\nGet information on a specific test.\n\n### Arguments\n\n*This endpoint takes no JSON arguments.*"
					},
					"response": []
				},
				{
					"name": "Get devices for browser checks",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/synthetics/browser/devices",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"browser",
								"devices"
							]
						},
						"description": "### Overview\n\nGet a list of devices for browser checks.\n\n### Arguments\n\n*This endpoint takes no JSON arguments.*"
					},
					"response": []
				},
				{
					"name": "Get available locations",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/synthetics/locations",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"locations"
							]
						},
						"description": "### Overview\n\nGet a list of available locations\n\n### Arguments\n\n*This endpoint takes no JSON arguments.*"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tags",
			"item": [
				{
					"name": "Get Tags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/tags/hosts",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts"
							]
						},
						"description": "### Overview\n\nReturn a mapping of tags to hosts for your whole infrastructure.\n\n### Arguments\n\n*This endpoint takes no JSON arguments.*"
					},
					"response": []
				},
				{
					"name": "Get host tags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/tags/hosts/:HOSTNAME",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":HOSTNAME"
							],
							"variable": [
								{
									"key": "HOSTNAME",
									"value": "<HOSTNAME>",
									"type": "string",
									"description": "Name of the host to retrieve tags from."
								}
							]
						},
						"description": "### Overview\n\nReturn the list of tags that apply to a given host.\n\n### Arguments\n\n*This endpoint takes no JSON arguments.*"
					},
					"response": []
				},
				{
					"name": "Add tags to a host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tags\": [\n        \"environment:postman\",\n        \"<TAG_KEY>:<TAG_VALUE>\"\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/tags/hosts/:HOSTNAME",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":HOSTNAME"
							],
							"variable": [
								{
									"key": "HOSTNAME",
									"value": "<HOSTNAME>",
									"type": "string",
									"description": "Host name to add tags to."
								}
							]
						},
						"description": "### Overview\n\nThis endpoint allows you to add new tags to a host, optionally specifying where these tags come from.\n\n### Arguments\n\n* **`tags`** [*required*]: A list of tags to apply to the host\n* **`source`** [*optional*, *default*=**users**]: The source of the tags (e.g. chef, puppet). [Complete list of source attribute values][1]\n\n[1]: https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value"
					},
					"response": []
				},
				{
					"name": "Update host tags",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tags\": [\n        \"environment:postman\",\n        \"<TAG_KEY>:<TAG_VALUE>\"\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/tags/hosts/:HOSTNAME",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":HOSTNAME"
							],
							"variable": [
								{
									"key": "HOSTNAME",
									"value": "<HOSTNAME>",
									"type": "string",
									"description": "Hostname to update tags of."
								}
							]
						},
						"description": "### Overview\n\nThis endpoint allows you to update/replace all tags in an integration source with those supplied in the request.\n\n### Arguments\n\n* **`tags`** [*required*]: A list of tags\n* **`source`** [*optional*, *default*=**users**]: The source of the tags (e.g. chef, puppet). [Complete list of source attribute values][1]\n\n[1]: https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value"
					},
					"response": []
				},
				{
					"name": "Remove host tags",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/tags/hosts/:HOSTNAME",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":HOSTNAME"
							],
							"variable": [
								{
									"key": "HOSTNAME",
									"value": "<HOSTNAME>",
									"type": "string",
									"description": "Hostname to delete tag from."
								}
							]
						},
						"description": "### Overview\n\nRemove all tags in an integration source for a single host.\n\n### Arguments\n\n*This endpoint takes no JSON arguments.*"
					},
					"response": []
				}
			],
			"description": "The tag end point allows you to tag hosts with keywords meaningful to you - like role:database. All metrics sent from a host will have its tags applied. When fetching and applying tags to a particular host, you can refer to hosts by name (yourhost.example.com).\n\nThe component of your infrastructure responsible for a tag is identified by a source. Valid sources are: nagios, hudson, jenkins, users, feed, chef, puppet, git, bitbucket, fabric, capistrano.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tracing",
			"item": [
				{
					"name": "Send traces",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4498d5f5-38b7-41d5-ab34-6c83ed1246f0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    [\n        {\n            \"trace_id\": \"{{guid}}\",\n            \"span_id\": \"{{guid}}\",\n            \"name\": \"span_name\",\n            \"resource\": \"/home\",\n            \"service\": \"service_name\",\n            \"type\": \"web\",\n            \"start\": \"{{from_ts_ns}}\",\n            \"duration\": \"2000000000\"\n        }\n    ]\n]"
						},
						"url": {
							"raw": "http://localhost:8126/v0.3/traces",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8126",
							"path": [
								"v0.3",
								"traces"
							]
						},
						"description": "### Overview\n\nDatadog's APM allows you to collect performance metrics by tracing your code to determine which parts of your application are slow or inefficient.\n\nTracing data is sent to the Datadog Agent via an HTTP API. We provide some [official libraries][1] that simplify sending metrics to the Datadog Agent, however you may want to interact directly with the API to instrument applications that cannot use the libraries or are written in languages that don't yet have an official Datadog Tracing library.\n\nTraces can be sent as an array of [traces][2]:\n```\n[ trace1, trace2, trace3 ]\n```\n\nand each trace is an array of [spans][3]:\n```\ntrace1 = [ span, span2, span3 ]\n```\n\nand each span is a dictionary with a `trace_id`, `span_id`, `resource`..\n\n[Learn more about the APM (tracing) terminology][4]\n\n**Note**: Each span within a trace should use the same trace_id.\n\n### Arguments\n\n*   **`trace_id`** - _required_ The unique integer (64-bit unsigned) ID of the trace containing this span.\n*   **`span_id`** - _required_ The span integer (64-bit unsigned) ID.\n*   **`name`** - _required_ The span name. The span name must not be longer than 100 characters.\n*   **`resource`** - _required_ The resource you are tracing. The resource name must not be longer than 5000 characters.\n*   **`service`** - _required_ The service you are tracing. The service name must not be longer than 100 characters.\n*   **`type`** - _optional, default=**custom**, case-sensitive_ The type of request. The options available are `web`, `db`, `cache`, and `custom`. \n*   **`start`** - _required._ The start time of the request in nanoseconds from the unix epoch.\n*   **`duration`** - _required_ The duration of the request in nanoseconds.\n*   **`parent_id`** - _optional_ The span integer ID of the parent span.\n*   **`error`** - _optional_ Set this value to 1 to indicate if an error occured. If an error occurs, you should pass additional information, such as the error message, type and stack information in the `meta` property.\n*   **`meta`** - _optional_ A dictionary of key-value metadata. e.g. tags.\n\n[1]: https://docs.datadoghq.com/tracing/#instrument-your-application\n[2]: https://docs.datadoghq.com/tracing/visualization/trace\n[3]: https://docs.datadoghq.com/tracing/visualization/trace/#spans\n[4]: https://docs.datadoghq.com/tracing/visualization/services_list"
					},
					"response": []
				},
				{
					"name": "Send services",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"service_name\": {\n        \"app\": \"my-app\",\n        \"app_type\": \"web\"\n    }\n}"
						},
						"url": {
							"raw": "http://localhost:8126/v0.3/services",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8126",
							"path": [
								"v0.3",
								"services"
							]
						},
						"description": "https://docs.datadoghq.com/api/?lang=bash#send-traces"
					},
					"response": []
				}
			],
			"description": "Learn more about [tracing with Datadog][1] and [the APM terminology][2]\n\nThe tracing API is an Agent API rather than a service side API. Submit your traces to the `http://localhost:8126/v0.3/traces` local endpoint so your Agent can forward them to Datadog.\n\n[1]: https://docs.datadoghq.com/tracing\n[2]: https://docs.datadoghq.com/tracing/visualization/services_list\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a2982b1e-900c-4a44-8054-224a3673ea23",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b3fd1c04-11ee-4b9e-989d-36e867465c8a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Usage Metering",
			"item": [
				{
					"name": "Get  Hosts and Containers hourly usage",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "86c2f87a-0c50-4e0e-82cc-a27b79513156",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/usage/hosts?start_hr=yyyy-MM-ddThh",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"hosts"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "yyyy-MM-ddThh",
									"description": "datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour"
								},
								{
									"key": "end_hr",
									"value": "yyyy-MM-ddThh",
									"description": "datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour",
									"disabled": true
								}
							]
						},
						"description": "### Overview\n\nGet Hourly Usage For Hosts and Containers.\n\n### Arguments\n\n* **`start_hr`** [*required*]: Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour\n* **`end_hr`** [*optional*, *default*=**1d+start_hr**]: Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour\n\n#### Response\n\n* **`container_count`**: Shows the total number of containers reporting via the Docker integration during the hour.\n* **`host_count`**: Contains the total number of billable infrastructure hosts reporting during a given hour. This is the sum of `agent_host_count`, `aws_host_count`, and `gcp_host_count`.\n* **`hour`**: The hour for the usage.\n* **`apm_host_count`**: Shows the total number of hosts using APM during the hour, these are counted as billable (except during trial periods).\n* **`agent_host_count`**: Contains the total number of infrastructure hosts reporting during a given hour that were running the Datadog Agent.\n* **`gcp_host_count`**: Contains the total number of hosts that reported via the Google Cloud integration (and were NOT running the Datadog Agent).\n* **`aws_host_count`**: Contains the total number of hosts that reported via the AWS integration (and were NOT running the Datadog Agent). When AWS or GCP hosts are also running the Datadog Agent, they are counted as Agent hosts, NOT as AWS or GCP."
					},
					"response": []
				},
				{
					"name": "Get Logs hourly Usage",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/usage/logs?start_hr=yyyy-MM-ddThh",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"logs"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "yyyy-MM-ddThh",
									"description": "datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour"
								},
								{
									"key": "end_hr",
									"value": "yyyy-MM-ddThh",
									"description": "datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour",
									"disabled": true
								}
							]
						},
						"description": "### Overview\n\nGet Hourly Usage For Logs.\n\n### Arguments\n* **`start_hr`** [*required*]: Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour\n* **`end_hr`** [*optional*, *default*=**1d+start_hr**]: Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour\n\n#### Response\n\n* **`ingested_events_bytes`**: Contains the number of log bytes ingested.\n* **`indexed_events_count`**: Contains the number of log events indexed.\n* **`hour`**: The hour for the usage."
					},
					"response": []
				},
				{
					"name": "Get  Custom Metrics hourly usage",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/usage/timeseries?start_hr=yyyy-MM-ddThh",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"timeseries"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "yyyy-MM-ddThh",
									"description": "Required: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour"
								},
								{
									"key": "end_hr",
									"value": "yyyy-MM-ddThh",
									"description": "Optional: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour",
									"disabled": true
								}
							]
						},
						"description": "### Overview\n\nGet Hourly Usage For [Custom Metrics][1].\n\n### Arguments\n\n* **`start_hr`** [*required*]: Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour\n* **`end_hr`** [*optional*, *default*=**1d+start_hr**]: Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour\n\n[1]: https://docs.datadoghq.com/developers/metrics/custom_metrics"
					},
					"response": []
				},
				{
					"name": "Get Top 500 Custom Metrics by hourly average",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/usage/top_avg_metrics?month=yyyy-MM",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"top_avg_metrics"
							],
							"query": [
								{
									"key": "names",
									"value": "",
									"description": "comma-separated list of metric names ",
									"disabled": true
								},
								{
									"key": "month",
									"value": "yyyy-MM"
								}
							]
						},
						"description": "### Overview\n\nGet Top [Custom Metrics][1] By Hourly Average.\n\n### Arguments\n* **`month`** [*required*]: Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning at this hour.\n* **`names`** [*optional*, *default*=**None**]: Comma-separated list of metric names.\n\n[1]: https://docs.datadoghq.com/developers/metrics/custom_metrics"
					},
					"response": []
				},
				{
					"name": "Get Multi-Org Usage Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/usage/summary?start_month=yyyy-MM",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"summary"
							],
							"query": [
								{
									"key": "start_month",
									"value": "yyyy-MM",
									"description": "Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning in this month. Maximum of 15 months ago."
								},
								{
									"key": "end_month",
									"value": "",
									"description": "Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage ending this month.",
									"disabled": true
								},
								{
									"key": "include_org_ids",
									"value": "true",
									"description": "Include usage summaries for each sub-org.",
									"disabled": true
								}
							]
						},
						"description": "### Overview\n\nGet usage across your multi-org account\n\n### Arguments\n\n* **`start_month`** [*required*]: Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning in this month. Maximum of 15 months ago.\n* **`end_month`** [*optional*, *default*=**current_month-3d**]: Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage ending this month.\n* **`include_org_details`** [*optional*, *default*=**true**]: Include usage summaries for each sub-org."
					},
					"response": []
				},
				{
					"name": "Get Trace Search hourly usage",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/usage/traces?start_hr=yyyy-MM-ddTHH",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"traces"
							],
							"query": [
								{
									"key": "end_hr",
									"value": "",
									"description": "datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour",
									"disabled": true
								},
								{
									"key": "start_hr",
									"value": "yyyy-MM-ddTHH"
								}
							]
						},
						"description": "### Overview\n\nGet hourly usage For Trace Search.\n\n### Arguments\n* **`start_hr`** [*required*]: Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour\n* **`end_hr`** [*optional*, *default*=**1d+start_hr**]: Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour\n\n#### Response\n\n* **`indexed_events_count`**: Contains the number of Trace Search events indexed.\n* **`hour`**: The hour for the usage."
					},
					"response": []
				},
				{
					"name": "Get Synthetics hourly usage",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/usage/synthetics?start_hr=yyyy-MM-ddTHH",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"synthetics"
							],
							"query": [
								{
									"key": "end_hr",
									"value": "",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour",
									"disabled": true
								},
								{
									"key": "start_hr",
									"value": "yyyy-MM-ddTHH"
								}
							]
						},
						"description": "Get Hourly Usage For [Synthetics][1].\n\n##### Arguments\n* **`start_hr`** [*required*]: Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour\n* **`end_hr`** [*optional*, *default*=**1d+start_hr**]: Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour\n\n[1]: https://docs.datadoghq.com/synthetics"
					},
					"response": []
				},
				{
					"name": "Get Fargate hourly usage",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v1/usage/synthetics?start_hr=yyyy-MM-ddTHH",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"synthetics"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "yyyy-MM-ddTHH",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour"
								},
								{
									"key": "end_hr",
									"value": "",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour\n",
									"disabled": true
								}
							]
						},
						"description": "### Overview\n\nGet Hourly Usage For [Fargate][1].\n\n### Arguments\n\n* **`start_hr`** [*required*]: Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour\n* **`end_hr`** [*optional*, *default*=**1d+start_hr**]: Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour\n\n[1]: https://docs.datadoghq.com/integrations/ecs_fargate"
					},
					"response": []
				}
			],
			"description": "This API is available to all customers. Python and Ruby clients are not yet supported.\n\nThe usage metering end-point allows you to:\n\n* Get Hourly Usage For Hosts and Containers\n* Get Hourly Usage For Logs\n* Get Hourly Usage For Custom Metrics\n* Get Top Custom Metrics By Hourly Average\n* Get Hourly Usage For Trace Search\n* Get Hourly Usage For Synthetics Checks\n* Get Hourly Usage For Fargate Tasks\n\n\nUsage data is delayed by up to 72 hours from when it was incurred. It is retained for the past 15 months.\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "91bb4174-dabb-4f1c-98f2-3f30d09163ce",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1079cbb1-9274-40a4-98fb-f57a5e72d6c9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get all users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v2/users",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v2",
								"users"
							]
						},
						"description": "### Overview\n\nGet all user for your organization.\n\n### Arguments\n\n\n* **`page[size]`** [*optional*, *default*=**10**]: Number of roles to return for a given page.\n* **`page[number]`** [*optional*, *default*=**0**]: Specific page number to return.\n* **`sort`** [*optional*, *default*=**name**]: User attribute to order results by. Sort order is **ascending** by default. Sort order is **descending** if the field is prefixed by a negative sign, for example: *sort=-name*.\n  * Options: **name**, **modified_at**, **user_count**\n* **`sort_dir`** [*optional*, *default*=**desc**]: Direction of sort.\n    * Options: `asc`, `desc`.\n* **`filter`**[*optional*, *default*=**None**]: Filter all roles by the given string.\n* **`filter[status]`**[*optional*, *default*=**None**]: Filter on `status` attribute. Comma separated list: `Active`, `Pending`, and `Disabled`."
					},
					"response": []
				},
				{
					"name": "Get a user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v2/users/:DATADOG_USER_UUID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v2",
								"users",
								":DATADOG_USER_UUID"
							],
							"variable": [
								{
									"key": "DATADOG_USER_UUID",
									"value": "",
									"description": "The user_uuid of the user."
								}
							]
						},
						"description": "### Overview\n\nGet a user in the organization specified by the user's `user_uuid`.\n\n### Arguments\n\n* **`user_uuid`** [*required*]: The `user_uuid` of the user."
					},
					"response": []
				},
				{
					"name": "Create user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"users\",\n    \"relationships\": {\n      \"roles\": {\n        \"data\": [\n          {\n            \"type\": \"roles\",\n            \"id\": \"<ROLE_ID>\"\n          }\n        ]\n      }\n    },\n    \"attributes\": {\n      \"email\": \"<USER_EMAIL>\",\n      \"name\": \"<USER_NAME>\",\n      \"title\": \"<USER_TITLE>\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v2/users",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v2",
								"users"
							]
						},
						"description": "### Overview\n\nCreate a user for your organization.\n\n### ARGUMENTS\n\nA user is a JSON object with `\"type\":\"users\"` that takes the following elements: \n\n* **`roles`** [*optional*]: An array of roles to assign to the user. Each role is an object with `\"type\": \"roles\"` and an `id` that is the role ID to assign to the user.\n* **`attributes.email`** [*required*]: The email of the new user.\n* **`attributes.name`** [*optional*]: The name of the new user.\n* **`attributes.title`** [*optional*]: The title of the new user."
					},
					"response": []
				},
				{
					"name": "Disable user",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "Your Datadog API key",
								"key": "DD-API-KEY",
								"type": "text",
								"value": "{{datadog_api_key}}"
							},
							{
								"description": "Your Datadog application key",
								"key": "DD-APPLICATION-KEY",
								"type": "text",
								"value": "{{datadog_application_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v2/users/:DATADOG_USER_UUID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v2",
								"users",
								":DATADOG_USER_UUID"
							],
							"variable": [
								{
									"key": "DATADOG_USER_UUID",
									"value": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
									"description": "The user uuid of the user to disable."
								}
							]
						},
						"description": "### Overview\n\nDelete a user from an organization.\n\n**Note**: This endpoint can only be used with application keys belonging to administrators.\n\n### Arguments\n\n* **`user_uuid`** [*required*]: The user uuid of the user to disable."
					},
					"response": []
				},
				{
					"name": "Get a user organisation",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v2/users/:USER_UUID/orgs",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v2",
								"users",
								":USER_UUID",
								"orgs"
							],
							"variable": [
								{
									"key": "USER_UUID",
									"value": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
									"description": "The user_uuid of the user."
								}
							]
						},
						"description": "### Overview\n\nReturns the user information and all of the organizations of that user.\n\n### Arguments\n\n* **`user_uuid`** [*required*]: The `user_uuid` of the user."
					},
					"response": []
				},
				{
					"name": "Get a user permission set",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "DD-API-KEY",
								"value": "{{datadog_api_key}}",
								"description": "Your Datadog API key",
								"type": "text"
							},
							{
								"key": "DD-APPLICATION-KEY",
								"value": "{{datadog_application_key}}",
								"description": "Your Datadog application key",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v2/users/:USER_UUID/permissions",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v2",
								"users",
								":USER_UUID",
								"permissions"
							],
							"variable": [
								{
									"key": "USER_UUID",
									"value": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
									"description": "The user_uuid of the user."
								}
							]
						},
						"description": "### Overview\n\nReturns a list of the user's permissions granted by the roles the user is assigned to.\n\n### Arguments\n\n* **`user_uuid`** [*required*]: The `user_uuid` of the user."
					},
					"response": []
				},
				{
					"name": "Send invitation email to users",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Your Datadog API key",
								"key": "DD-API-KEY",
								"type": "text",
								"value": "{{datadog_api_key}}"
							},
							{
								"description": "Your Datadog application key",
								"key": "DD-APPLICATION-KEY",
								"type": "text",
								"value": "{{datadog_application_key}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"type\": \"user_invitations\",\n      \"relationships\": {\n        \"user\": {\n          \"data\": {\n            \"type\": \"users\",\n            \"id\": \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"\n          }\n        }\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v2/user_invitations",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v2",
								"user_invitations"
							]
						},
						"description": "### Overview\n\nSends emails to one or more users inviting them to join the organization.\n\n### Arguments\n\n* **`type`** [*required*]: The type of the USER request, use `user_invitations`\n* **`attributes.login_method`** [*optional*]: The login method included in the user invitation, to choose between `SAML`or `oauth2`"
					},
					"response": []
				},
				{
					"name": "Get a user invitation",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "Your Datadog API key",
								"key": "DD-API-KEY",
								"type": "text",
								"value": "{{datadog_api_key}}"
							},
							{
								"description": "Your Datadog application key",
								"key": "DD-APPLICATION-KEY",
								"type": "text",
								"value": "{{datadog_application_key}}"
							}
						],
						"url": {
							"raw": "https://api.datadoghq.{{datadog_site}}/api/v2/user_invitations/:USER_INVITATION_UUID",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"{{datadog_site}}"
							],
							"path": [
								"api",
								"v2",
								"user_invitations",
								":USER_INVITATION_UUID"
							],
							"variable": [
								{
									"key": "USER_INVITATION_UUID",
									"value": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
									"description": "User invitation unique ID received as an anwser after sending one."
								}
							]
						},
						"description": "### Overview\n\nReturns a single User Invitation by its uuid.\n\n### Arguments\n\n* **`user_invitation_uuid`** [*required*]: The UUID for the user invitation."
					},
					"response": []
				}
			],
			"description": "\nCreate, edit, and disable users. [Read more about your team management][1]\n\n[1]: https://docs.datadoghq.com/account_management/team\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "dfc6442f-1a0b-4357-a802-06ae72359b98",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7f7351ce-db98-4b03-924c-ffe556fd94c8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "c41623be-f6de-4e50-b2d7-a774bd352140",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "72537730-7e9d-49b3-96a1-49995ee97eba",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "5a1497c2-0cf4-4f32-9191-724c75f45d48",
			"key": "datadog_api_key",
			"value": "xxxxx",
			"type": "string"
		},
		{
			"id": "2f92b8ea-c850-4e56-b0ca-56f5ca91bc6e",
			"key": "datadog_application_key",
			"value": "yyyyy",
			"type": "string"
		},
		{
			"id": "03904d68-6941-4383-94c9-cab1eadbbcb7",
			"key": "datadog_site",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}