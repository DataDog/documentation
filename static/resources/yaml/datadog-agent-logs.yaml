# Source: datadog/templates/secrets.yaml
# API Key
apiVersion: v1
kind: Secret
metadata:
  name: datadog-agent
  labels: {}
type: Opaque
data:
  api-key: PUT_YOUR_BASE64_ENCODED_API_KEY_HERE

# APP Key
---
# Source: datadog/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: datadog-agent
  labels: {}
spec:
  selector:
    matchLabels:
      app: datadog-agent
  template:
    metadata:
      labels:
        app: datadog-agent
      name: datadog-agent
      annotations: {}
    spec:
      containers:
      - name: agent
        image: "datadog/agent:7.19.0"
        imagePullPolicy: IfNotPresent
        command: ["agent", "start"]
        resources: {}
        ports:
        - containerPort: 8125
          name: dogstatsdport
          protocol: UDP
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              name: "datadog-agent"
              key: api-key
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DD_AC_EXCLUDE
          value: "name:datadog-agent"
        - name: DOCKER_HOST
          value: unix:///host/var/run/docker.sock
        - name: DD_LOG_LEVEL
          value: "INFO"
        - name: DD_DOGSTATSD_PORT
          value: "8125"
        - name: DD_LEADER_ELECTION
          value: "true"
        - name: DD_COLLECT_KUBERNETES_EVENTS
          value: "true"
        - name: DD_APM_ENABLED
          value: "false"
        - name: DD_LOGS_ENABLED
          value: "true"
        - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
          value: "true"
        - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
          value: "true"
        - name: DD_HEALTH_PORT
          value: "5555"
        volumeMounts:
        - name: config
          mountPath: /etc/datadog-agent
        - name: runtimesocketdir
          mountPath: /host/var/run
          readOnly: true
        - name: procdir
          mountPath: /host/proc
          readOnly: true
        - name: cgroups
          mountPath: /host/sys/fs/cgroup
          readOnly: true
        - name: pointerdir
          mountPath: /opt/datadog-agent/run
        - name: logpodpath
          mountPath: /var/log/pods
          readOnly: true
        - name: logdockercontainerpath
          mountPath: /var/lib/docker/containers
          readOnly: true
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /health
            port: 5555
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
      initContainers:
      - name: init-volume
        image: "datadog/agent:7.19.0"
        imagePullPolicy: IfNotPresent
        command: ["bash", "-c"]
        args:
        - cp -r /etc/datadog-agent /opt
        volumeMounts:
        - name: config
          mountPath: /opt/datadog-agent
        resources: {}
      - name: init-config
        image: "datadog/agent:7.19.0"
        imagePullPolicy: IfNotPresent
        command: ["bash", "-c"]
        args:
        - for script in $(find /etc/cont-init.d/ -type f -name '*.sh' | sort) ; do
          bash $script ; done
        volumeMounts:
        - name: config
          mountPath: /etc/datadog-agent
        - name: procdir
          mountPath: /host/proc
          readOnly: true
        - name: runtimesocketdir
          mountPath: /host/var/run
          readOnly: true
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              name: "datadog-agent"
              key: api-key
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DD_AC_EXCLUDE
          value: "name:datadog-agent"
        - name: DOCKER_HOST
          value: unix:///host/var/run/docker.sock
        - name: DD_LEADER_ELECTION
          value: "true"
        resources: {}
      volumes:
      - name: config
        emptyDir: {}
      - hostPath:
          path: /var/run
        name: runtimesocketdir
      - hostPath:
          path: /proc
        name: procdir
      - hostPath:
          path: /sys/fs/cgroup
        name: cgroups
      - name: s6-run
        emptyDir: {}
      - hostPath:
          path: "/var/lib/datadog-agent/logs"
        name: pointerdir
      - hostPath:
          path: /var/log/pods
        name: logpodpath
      - hostPath:
          path: /var/lib/docker/containers
        name: logdockercontainerpath
      tolerations:
      affinity: null
      serviceAccountName: "datadog-agent"
      nodeSelector:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
    type: RollingUpdate

# Source: datadog/templates/containers-common-env.yaml
# The purpose of this template is to define a minimal set of environment
# variables required to operate dedicated containers in the daemonset.
