# Source: datadog/templates/secret-api-key.yaml
apiVersion: v1
kind: Secret
metadata:
  name: datadog-agent
  labels: {}
type: Opaque
data:
  api-key: PUT_YOUR_BASE64_ENCODED_API_KEY_HERE
---
# Source: datadog/templates/install_info-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: datadog-agent-installinfo
  labels: {}
  annotations:
    checksum/install_info: 22b8b7e0a7d3253452aedb7615f5e649c4c08a662ad1ffe80ac5eff42d2d7bde
data:
  install_info: |
    ---
    install_method:
      tool: kubernetes sample manifests
      tool_version: kubernetes sample manifests
      installer_version: kubernetes sample manifests
---
# Source: datadog/templates/system-probe-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: datadog-agent-system-probe-config
  namespace: default
  labels: {}
data:
  system-probe.yaml: |
    system_probe_config:
      enabled: true
      debug_port:  0
      sysprobe_socket: /var/run/sysprobe/sysprobe.sock
      enable_conntrack: true
      bpf_debug: false
      enable_tcp_queue_length: false
      enable_oom_kill: false
      collect_dns_stats: false
      max_tracked_connections: 131072
      conntrack_max_state_size: 131072
    network_config:
      enabled: true
    runtime_security_config:
      enabled: false
      debug: false
      socket: /var/run/sysprobe/runtime-security.sock
      policies:
        dir: /etc/datadog-agent/runtime-security.d
      syscall_monitor:
        enabled: false
---
# Source: datadog/templates/system-probe-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: datadog-agent-security
  namespace: default
  labels: {}
data:
  system-probe-seccomp.json: |
    {
      "defaultAction": "SCMP_ACT_ERRNO",
      "syscalls": [
        {
          "names": [
            "accept4",
            "access",
            "arch_prctl",
            "bind",
            "bpf",
            "brk",
            "capget",
            "capset",
            "chdir",
            "clock_gettime",
            "clone",
            "close",
            "connect",
            "copy_file_range",
            "creat",
            "dup",
            "dup2",
            "dup3",
            "epoll_create",
            "epoll_create1",
            "epoll_ctl",
            "epoll_ctl_old",
            "epoll_pwait",
            "epoll_wait",
            "epoll_wait",
            "epoll_wait_old",
            "eventfd",
            "eventfd2",
            "execve",
            "execveat",
            "exit",
            "exit_group",
            "fchmod",
            "fchmodat",
            "fchown",
            "fchown32",
            "fchownat",
            "fcntl",
            "fcntl64",
            "fstat",
            "fstat64",
            "fstatfs",
            "fsync",
            "futex",
            "getcwd",
            "getdents",
            "getdents64",
            "getegid",
            "geteuid",
            "getgid",
            "getpeername",
            "getpid",
            "getppid",
            "getpriority",
            "getrandom",
            "getresgid",
            "getresgid32",
            "getresuid",
            "getresuid32",
            "getrlimit",
            "getrusage",
            "getsid",
            "getsockname",
            "getsockopt",
            "gettid",
            "gettimeofday",
            "getuid",
            "getxattr",
            "ioctl",
            "ipc",
            "listen",
            "lseek",
            "lstat",
            "lstat64",
            "madvise",
            "mkdir",
            "mkdirat",
            "mmap",
            "mmap2",
            "mprotect",
            "mremap",
            "munmap",
            "nanosleep",
            "newfstatat",
            "open",
            "openat",
            "pause",
            "perf_event_open",
            "pipe",
            "pipe2",
            "poll",
            "ppoll",
            "prctl",
            "pread64",
            "prlimit64",
            "pselect6",
            "read",
            "readlink",
            "readlinkat",
            "recvfrom",
            "recvmmsg",
            "recvmsg",
            "rename",
            "restart_syscall",
            "rmdir",
            "rt_sigaction",
            "rt_sigpending",
            "rt_sigprocmask",
            "rt_sigqueueinfo",
            "rt_sigreturn",
            "rt_sigsuspend",
            "rt_sigtimedwait",
            "rt_tgsigqueueinfo",
            "sched_getaffinity",
            "sched_yield",
            "seccomp",
            "select",
            "semtimedop",
            "send",
            "sendmmsg",
            "sendmsg",
            "sendto",
            "set_robust_list",
            "set_tid_address",
            "setgid",
            "setgid32",
            "setgroups",
            "setgroups32",
            "setns",
            "setrlimit",
            "setsid",
            "setsidaccept4",
            "setsockopt",
            "setuid",
            "setuid32",
            "sigaltstack",
            "socket",
            "socketcall",
            "socketpair",
            "stat",
            "stat64",
            "statfs",
            "sysinfo",
            "umask",
            "uname",
            "unlink",
            "unlinkat",
            "wait4",
            "waitid",
            "waitpid",
            "write"
          ],
          "action": "SCMP_ACT_ALLOW",
          "args": null
        },
        {
          "names": [
            "setns"
          ],
          "action": "SCMP_ACT_ALLOW",
          "args": [
            {
              "index": 1,
              "value": 1073741824,
              "valueTwo": 0,
              "op": "SCMP_CMP_EQ"
            }
          ],
          "comment": "",
          "includes": {},
          "excludes": {}
        }
      ]
    }
---
# Source: datadog/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: datadog-agent
  labels: {}
spec:
  selector:
    matchLabels:
      app: datadog-agent
  template:
    metadata:
      labels:
        app: datadog-agent
      name: datadog-agent
      annotations:
        container.apparmor.security.beta.kubernetes.io/system-probe: unconfined
        container.seccomp.security.alpha.kubernetes.io/system-probe: localhost/system-probe
    spec:
      containers:
      - name: agent
        image: "gcr.io/datadoghq/agent:7.26.0"
        imagePullPolicy: IfNotPresent
        command: ["agent", "run"]
        resources: {}
        ports:
        - containerPort: 8125
          name: dogstatsdport
          protocol: UDP
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              name: "datadog-agent"
              key: api-key
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DOCKER_HOST
          value: unix:///host/var/run/docker.sock
        - name: DD_LOG_LEVEL
          value: "INFO"
        - name: DD_DOGSTATSD_PORT
          value: "8125"
        - name: DD_DOGSTATSD_NON_LOCAL_TRAFFIC
          value: "true"
        - name: DD_LEADER_ELECTION
          value: "true"
        - name: DD_COLLECT_KUBERNETES_EVENTS
          value: "true"
        - name: DD_APM_ENABLED
          value: "false"
        - name: DD_LOGS_ENABLED
          value: "false"
        - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
          value: "false"
        - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
          value: "true"
        - name: DD_HEALTH_PORT
          value: "5555"
        volumeMounts:
        - name: installinfo
          subPath: install_info
          mountPath: /etc/datadog-agent/install_info
          readOnly: true
        - name: logdatadog
          mountPath: /var/log/datadog
        - name: tmpdir
          mountPath: /tmp
          readOnly: false
        - name: config
          mountPath: /etc/datadog-agent
        - name: runtimesocketdir
          mountPath: /host/var/run
          mountPropagation: None
          readOnly: true
        - name: procdir
          mountPath: /host/proc
          mountPropagation: None
          readOnly: true
        - name: cgroups
          mountPath: /host/sys/fs/cgroup
          mountPropagation: None
          readOnly: true
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /live
            port: 5555
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /ready
            port: 5555
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
      - name: process-agent
        image: "gcr.io/datadoghq/agent:7.26.0"
        imagePullPolicy: IfNotPresent
        command: ["process-agent", "-config=/etc/datadog-agent/datadog.yaml"]
        resources: {}
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              name: "datadog-agent"
              key: api-key
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DOCKER_HOST
          value: unix:///host/var/run/docker.sock
        - name: DD_CLUSTER_AGENT_ENABLED
          value: "false"
        - name: DD_LOG_LEVEL
          value: "INFO"
        - name: DD_SYSTEM_PROBE_ENABLED
          value: "true"
        - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
          value: "true"
        - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
          value: "false"
        volumeMounts:
        - name: config
          mountPath: /etc/datadog-agent
        - name: runtimesocketdir
          mountPath: /host/var/run
          mountPropagation: None
          readOnly: true
        - name: logdatadog
          mountPath: /var/log/datadog
        - name: tmpdir
          mountPath: /tmp
          readOnly: false
        - name: cgroups
          mountPath: /host/sys/fs/cgroup
          mountPropagation: None
          readOnly: true
        - name: passwd
          mountPath: /etc/passwd
          readOnly: true
        - name: procdir
          mountPath: /host/proc
          mountPropagation: None
          readOnly: true
        - name: sysprobe-socket-dir
          mountPath: /var/run/sysprobe
          readOnly: true
        - name: sysprobe-config
          mountPath: /etc/datadog-agent/system-probe.yaml
          subPath: system-probe.yaml
      - name: system-probe
        image: "gcr.io/datadoghq/agent:7.26.0"
        imagePullPolicy: IfNotPresent
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_RESOURCE
            - SYS_PTRACE
            - NET_ADMIN
            - NET_BROADCAST
            - NET_RAW
            - IPC_LOCK
          privileged: false
        command: ["/opt/datadog-agent/embedded/bin/system-probe", "--config=/etc/datadog-agent/system-probe.yaml"]
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              name: "datadog-agent"
              key: api-key
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DOCKER_HOST
          value: unix:///host/var/run/docker.sock
        - name: DD_LOG_LEVEL
          value: "INFO"
        resources: {}
        volumeMounts:
        - name: logdatadog
          mountPath: /var/log/datadog
        - name: tmpdir
          mountPath: /tmp
          readOnly: false
        - name: debugfs
          mountPath: /sys/kernel/debug
          mountPropagation: None
        - name: config
          mountPath: /etc/datadog-agent
        - name: sysprobe-config
          mountPath: /etc/datadog-agent/system-probe.yaml
          subPath: system-probe.yaml
        - name: sysprobe-socket-dir
          mountPath: /var/run/sysprobe
        - name: procdir
          mountPath: /host/proc
          mountPropagation: None
          readOnly: true
      initContainers:
      - name: init-volume
        image: "gcr.io/datadoghq/agent:7.26.0"
        imagePullPolicy: IfNotPresent
        command: ["bash", "-c"]
        args:
        - cp -r /etc/datadog-agent /opt
        volumeMounts:
        - name: config
          mountPath: /opt/datadog-agent
        resources: {}
      - name: init-config
        image: "gcr.io/datadoghq/agent:7.26.0"
        imagePullPolicy: IfNotPresent
        command: ["bash", "-c"]
        args:
        - for script in $(find /etc/cont-init.d/ -type f -name '*.sh' | sort) ; do
          bash $script ; done
        volumeMounts:
        - name: logdatadog
          mountPath: /var/log/datadog
        - name: config
          mountPath: /etc/datadog-agent
        - name: procdir
          mountPath: /host/proc
          mountPropagation: None
          readOnly: true
        - name: runtimesocketdir
          mountPath: /host/var/run
          mountPropagation: None
          readOnly: true
        - name: sysprobe-config
          mountPath: /etc/datadog-agent/system-probe.yaml
          subPath: system-probe.yaml
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              name: "datadog-agent"
              key: api-key
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "yes"
        - name: DOCKER_HOST
          value: unix:///host/var/run/docker.sock
        - name: DD_LEADER_ELECTION
          value: "true"
        resources: {}
      - name: seccomp-setup
        image: "gcr.io/datadoghq/agent:7.26.0"
        command:
        - cp
        - /etc/config/system-probe-seccomp.json
        - /host/var/lib/kubelet/seccomp/system-probe
        volumeMounts:
        - name: datadog-agent-security
          mountPath: /etc/config
        - name: seccomp-root
          mountPath: /host/var/lib/kubelet/seccomp
          mountPropagation: None
        resources: {}
      volumes:
      - name: installinfo
        configMap:
          name: datadog-agent-installinfo
      - name: config
        emptyDir: {}
      - hostPath:
          path: /var/run
        name: runtimesocketdir
      - name: logdatadog
        emptyDir: {}
      - name: tmpdir
        emptyDir: {}
      - hostPath:
          path: /proc
        name: procdir
      - hostPath:
          path: /sys/fs/cgroup
        name: cgroups
      - name: s6-run
        emptyDir: {}
      - name: sysprobe-config
        configMap:
          name: datadog-agent-system-probe-config
      - name: datadog-agent-security
        configMap:
          name: datadog-agent-security
      - hostPath:
          path: /var/lib/kubelet/seccomp
        name: seccomp-root
      - hostPath:
          path: /sys/kernel/debug
        name: debugfs
      - name: sysprobe-socket-dir
        emptyDir: {}
      - hostPath:
          path: /etc/passwd
        name: passwd
      tolerations:
      affinity: {}
      serviceAccountName: "datadog-agent"
      nodeSelector:
        kubernetes.io/os: linux
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
    type: RollingUpdate
