datadog:
  apiKey: "<datadog_api_key>"
  pipelineId: "<observability_pipelines_configuration_id>"
  site: "datadoghq.com"
  ## The remote configuration env var must be set so that the OP worker 
  ## boots up with RC enabled. In this Helm chart, the pipelineConfig 
  ## key is notably omitted in lieu of retrieving the config from Datadog.
  remoteConfigurationEnabled: true

## Autoscaling
##
autoscaling:
  enabled: true
  minReplicas: 2
  targetCPUUtilizationPercentage: 80

podDisruptionBudget:
  enabled: true
  minAvailable: 1

## HorizontalPodAutoscaler (HPA) requires resource requests to function,
## so this example configures several default values. Datadog recommends
## that you change the values to match the actual size of instances that
## you are using.
resources:
  requests:
    cpu: 1000m
    memory: 512Mi

affinity:
  ## To prevent a single datacenter from causing a complete system failure,
  ## this example defaults to running pods in different availability zones.
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - observability-pipelines-worker
          topologyKey: topology.kubernetes.io/zone


## Load Balancing
## This example configuration avoids cross-availability-zone costs where possible.
service:
  enabled: true
  ## You must manually specify the ports to open; this will match the Datadog Agent source.
  ports:
    - port: 8282
  type: "LoadBalancer"
  externalTrafficPolicy: "Local"
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"


## Buffering
## This creates an EBS drive that can be used for buffers, which
## must then be configured in the sinks themselves.
persistence:
  enabled: true
  storageClassName: "managed-csi"
  accessModes:
    - ReadWriteOnce
  size: 288Gi
