#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile 'sitemap' do
  filter :erb
end

route 'sitemap' do
  item.identifier.chop + '.xml'
end

compile '/static/*' do
  # don’t filter or layout
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    filter :erb
    filter :kramdown
    if not File.exists? 'NO_SYNTAX'
      # Run `touch NO_SYNTAX` to disable syntax highlighting, since it's very
      # slow. Remove it to re-enable.
      filter :colorize_syntax, :colorizers => {
              :javascript => :pygmentize,
              :console => :pygmentize,
              :python => :pygmentize,
              :ruby => :pygmentize,
              :pycon => :pygmentize,
              :json => :pygmentize
          }
    end

    id = @item.identifier
    case
    when id == '/api/'
      layout 'shell'
    when id.match('/guides/basic_agent_usage/')
      layout 'basic_agent_usage'
    else
      layout 'default'
    end
  end
end

route '/static/favicon/' do
  '/favicon.ico'
end

route '/static/CNAME/' do
  '/CNAME'
end

route '/static/*' do
  item.identifier.chop + '.' + item[:extension]
end

route '*' do
  # Write item with identifier /foo/ to /foo/index.html
  item.identifier + 'index.html'
end

layout '*', :erb
