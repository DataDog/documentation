kubernetes_state:
  - description: Si le check de préparation des conteneurs a réussi
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.container.ready
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.container.rdy
    unit_name: ''
  - description: Si le conteneur est actuellement en cours d'exécution
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.container.running
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.container.running
    unit_name: ''
  - description: Whether the container is currently in terminated state
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.container.terminated
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.container.term
    unit_name: ''
  - description: >-
      Count of the containers currently reporting a in terminated state with the
      reason as a tag
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.container.status_report.count.terminated
    metric_type: count
    orientation: '-1'
    per_unit_name: ''
    short_name: k8s_state.container.status_report.count.term
    unit_name: ''
  - description: Whether the container is currently in waiting state
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.container.waiting
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.container.wait
    unit_name: ''
  - description: >-
      Count of the containers currently reporting a in waiting state with the
      reason as a tag
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.container.status_report.count.waiting
    metric_type: count
    orientation: '-1'
    per_unit_name: ''
    short_name: k8s_state.container.status_report.count.wait
    unit_name: ''
  - description: The number of requested gpu devices by a container
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.container.gpu.request
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.container.gpu.request
    unit_name: ''
  - description: The limit on gpu devices to be used by a container
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.container.gpu.limit
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.container.gpu.limit
    unit_name: ''
  - description: The number of restarts per container
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.container.restarts
    metric_type: gauge
    orientation: '-1'
    per_unit_name: ''
    short_name: k8s_state.container.restarts
    unit_name: ''
  - description: Le nombre de coeurs CPU demandés par un conteneur.
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.container.cpu_requested
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.container.cpu_req
    unit_name: cpu
  - description: The number of requested memory bytes by a container
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.container.memory_requested
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.container.mem_req
    unit_name: byte
  - description: The limit on cpu cores to be used by a container
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.container.cpu_limit
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.container.cpu_limit
    unit_name: cpu
  - description: The limit on memory to be used by a container
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.container.memory_limit
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.container.mem_limit
    unit_name: byte
  - description: >-
      The number of nodes running at least one daemon pod and that are supposed
      to
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.daemonset.scheduled
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.ds.scheduled
    unit_name: ''
  - description: The number of nodes running a daemon pod but are not supposed to
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.daemonset.misscheduled
    metric_type: gauge
    orientation: '-1'
    per_unit_name: ''
    short_name: k8s_state.ds.misscheduled
    unit_name: ''
  - description: The number of nodes that should be running the daemon pod
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.daemonset.desired
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.ds.desired
    unit_name: ''
  - description: >-
      The number of nodes that should be running the daemon pod and have one or
      more running and ready
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.daemonset.ready
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.ds.ready
    unit_name: ''
  - description: The number of replicas per deployment
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.deployment.replicas
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.deployment.replicas
    unit_name: ''
  - description: The number of available replicas per deployment
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.deployment.replicas_available
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.deployment.replicas_available
    unit_name: ''
  - description: The number of unavailable replicas per deployment
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.deployment.replicas_unavailable
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.deployment.replicas_unavailable
    unit_name: ''
  - description: The number of updated replicas per deployment
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.deployment.replicas_updated
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.deployment.replicas_updated
    unit_name: ''
  - description: The number of desired replicas per deployment
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.deployment.replicas_desired
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.deployment.replicas_desired
    unit_name: ''
  - description: Whether a deployment is paused
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.deployment.paused
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.deployment.paused
    unit_name: ''
  - description: Maximum number of unavailable replicas during a rolling update
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.deployment.rollingupdate.max_unavailable
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.deployment.rollupdate.max_unavail
    unit_name: ''
  - description: Observed number of failed pods in a job
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.job.status.failed
    metric_type: counter
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.job.failed
    unit_name: ''
  - description: Observed number of succeeded pods in a job
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.job.status.succeeded
    metric_type: counter
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.job.succeeded
    unit_name: ''
  - description: Demande minimale de CPU pour ce type
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.limitrange.cpu.min
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.cpu.min
    unit_name: ''
  - description: Maximum CPU limit for this type
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.limitrange.cpu.max
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.cpu.max
    unit_name: ''
  - description: Default CPU limit if not specified
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.limitrange.cpu.default
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.cpu.default
    unit_name: ''
  - description: Default CPU request if not specified
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.limitrange.cpu.default_request
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.cpu.default_request
    unit_name: ''
  - description: Maximum CPU limit / request ratio
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.limitrange.cpu.max_limit_request_ratio
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.cpu.max_ratio
    unit_name: ''
  - description: Demande minimale de mémoire pour ce type
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.limitrange.memory.min
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.mem.min
    unit_name: ''
  - description: Maximum memory limit for this type
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.limitrange.memory.max
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.mem.max
    unit_name: ''
  - description: Default memory limit if not specified
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.limitrange.memory.default
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.mem.default
    unit_name: ''
  - description: Default memory request if not specified
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.limitrange.memory.default_request
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.mem.default_request
    unit_name: ''
  - description: Maximum memory limit / request ratio
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.limitrange.memory.max_limit_request_ratio
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.mem.max_ratio
    unit_name: ''
  - description: Le nombre total de ressources CPU sur le node
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.node.cpu_capacity
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.node.cpu_capacity
    unit_name: cpu
  - description: Le nombre total de ressources mémoire sur le node
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.node.memory_capacity
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.node.memory_capacity
    unit_name: byte
  - description: The total pod resources of the node
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.node.pods_capacity
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.node.pods_capacity
    unit_name: ''
  - description: The GPU resources of a node that are available for scheduling
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.node.gpu.cards_allocatable
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.node.gpu.cards_allocatable
    unit_name: ''
  - description: The total GPU resources of the node
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.node.gpu.cards_capacity
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.node.gpu.cards_capacity
    unit_name: ''
  - description: The phase the persistent volume claim is currently in
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.persistentvolumeclaim.status
    metric_type: gauge
    orientation: '-1'
    per_unit_name: ''
    short_name: k8s_state.persistentvolumeclaim.status
    unit_name: ''
  - description: The CPU resources of a node that are available for scheduling
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.node.cpu_allocatable
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.node.cpu_allocatable
    unit_name: cpu
  - description: Les ressources de la mémoire d'un noeud disponibles pour la planification
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.node.memory_allocatable
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.node.memory_allocatable
    unit_name: byte
  - description: The pod resources of a node that are available for scheduling
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.node.pods_allocatable
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.node.pods_allocatable
    unit_name: ''
  - description: >-
      Submitted with a value of 1 for each node and tagged either
      'status:schedulable' or 'status:unschedulable'; Sum this metric by either
      status to get the number of nodes in that status.
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.node.status
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.node.status
    unit_name: ''
  - description: >-
      To sum by `condition` and `status` to get number of nodes in a given
      condition.
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.nodes.by_condition
    metric_type: count
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.nodes.by_cond
    unit_name: ''
  - description: Lower limit for the number of pods that can be set by the autoscaler
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.hpa.min_replicas
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.hpa.min_replicas
    unit_name: ''
  - description: Upper limit for the number of pods that can be set by the autoscaler
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.hpa.max_replicas
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.hpa.max_replicas
    unit_name: ''
  - description: Target CPU percentage of pods managed by this autoscaler
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.hpa.target_cpu
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.hpa.target_cpu
    unit_name: ''
  - description: Desired number of replicas of pods managed by this autoscaler
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.hpa.desired_replicas
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.hpa.desired_replicas
    unit_name: ''
  - description: >-
      In association with the `condition` tag, whether the pod is ready to serve
      requests, e.g. `condition:true` keeps the pods that are in a ready state
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.pod.ready
    metric_type: gauge
    orientation: '1'
    per_unit_name: ''
    short_name: k8s_state.pod.ready
    unit_name: ''
  - description: Reports the status of the scheduling process for the pod with its tags
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.pod.scheduled
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.pod.scheduled
    unit_name: ''
  - description: The number of replicas per ReplicaSet
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.replicaset.replicas
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.rs.replicas
    unit_name: ''
  - description: The number of fully labeled replicas per ReplicaSet
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.replicaset.fully_labeled_replicas
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.rs.fully_labeled
    unit_name: ''
  - description: The number of ready replicas per ReplicaSet
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.replicaset.replicas_ready
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.rs.replicas_rdy
    unit_name: ''
  - description: Number of desired pods for a ReplicaSet
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.replicaset.replicas_desired
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.rs.replicas_desired
    unit_name: ''
  - description: The number of replicas per ReplicationController
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.replicationcontroller.replicas
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.rc.replicas
    unit_name: ''
  - description: The number of fully labeled replicas per ReplicationController
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.replicationcontroller.fully_labeled_replicas
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.rc.fully_labeled
    unit_name: ''
  - description: The number of ready replicas per ReplicationController
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.replicationcontroller.replicas_ready
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.rc.replicas_rdy
    unit_name: ''
  - description: Number of desired replicas for a ReplicationController
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.replicationcontroller.replicas_desired
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.rc.replicas_desired
    unit_name: ''
  - description: The number of available replicas per ReplicationController
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.replicationcontroller.replicas_available
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.rc.replicas_available
    unit_name: ''
  - description: Observed number of pods used for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.pods.used
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.pods.used
    unit_name: ''
  - description: Observed number of services used for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.services.used
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.svc.used
    unit_name: ''
  - description: Observed number of persistent volume claims used for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.persistentvolumeclaims.used
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.pvc.used
    unit_name: ''
  - description: Observed number of node ports used for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.services.nodeports.used
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.nodeports.used
    unit_name: ''
  - description: Observed number of loadbalancers used for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.services.loadbalancers.used
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.loadbalancers.used
    unit_name: ''
  - description: Observed sum of CPU cores requested for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.requests.cpu.used
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.requests.cpu.used
    unit_name: cpu
  - description: Observed sum of memory bytes requested for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.requests.memory.used
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.requests.mem.used
    unit_name: byte
  - description: Observed sum of storage bytes requested for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.requests.storage.used
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.requests.storage.used
    unit_name: byte
  - description: Observed sum of limits for CPU cores for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.limits.cpu.used
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.limits.cpu.used
    unit_name: cpu
  - description: Observed sum of limits for memory bytes for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.limits.memory.used
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.limits.mem.used
    unit_name: byte
  - description: Hard limit of the number of pods for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.pods.limit
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.pods.limit
    unit_name: ''
  - description: Hard limit of the number of services for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.services.limit
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.svc.limit
    unit_name: ''
  - description: Hard limit of the number of PVC for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.persistentvolumeclaims.limit
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.pvc.limit
    unit_name: ''
  - description: Hard limit of the number of node ports for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.services.nodeports.limit
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.nodeports.limit
    unit_name: ''
  - description: Hard limit of the number of loadbalancers for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.services.loadbalancers.limit
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.loadbalancers.limit
    unit_name: ''
  - description: Hard limit on the total of CPU core requested for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.requests.cpu.limit
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.requests.cpu.limit
    unit_name: cpu
  - description: Hard limit on the total of memory bytes requested for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.requests.memory.limit
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.requests.mem.limit
    unit_name: byte
  - description: Hard limit on the total of storage bytes requested for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.requests.storage.limit
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.requests.storage.limit
    unit_name: byte
  - description: Hard limit on the sum of CPU core limits for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.limits.cpu.limit
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.limits.cpu.limit
    unit_name: cpu
  - description: Hard limit on the sum of memory bytes limits for a resource quota
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.resourcequota.limits.memory.limit
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.resourcequota.limits.mem.limit
    unit_name: byte
  - description: The number of replicas per statefulset
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.statefulset.replicas
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.statefulset.replicas
    unit_name: ''
  - description: The number of desired replicas per statefulset
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.statefulset.replicas_desired
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.statefulset.replicas_desired
    unit_name: ''
  - description: The number of current replicas per StatefulSet
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.statefulset.replicas_current
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.statefulset.replicas_current
    unit_name: ''
  - description: The number of ready replicas per StatefulSet
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.statefulset.replicas_ready
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.statefulset.replicas_ready
    unit_name: ''
  - description: The number of updated replicas per StatefulSet
    integration: kubernetes
    interval: ''
    metric_name: kubernetes_state.statefulset.replicas_updated
    metric_type: gauge
    orientation: '0'
    per_unit_name: ''
    short_name: k8s_state.statefulset.replicas_updated
    unit_name: ''
