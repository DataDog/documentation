components:
  callbacks: {}
  examples: {}
  headers: {}
  links: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  schemas:
    APIErrorResponse:
      properties:
        errors:
          items:
            example: Bad Request
            type: string
          type: array
      required:
      - errors
      type: object
    Creator:
      description: Creator of the object
      properties:
        email:
          type: string
        handle:
          type: string
        name:
          type: string
      type: object
    DashboardListAddItemsResponse:
      properties:
        added_dashboards_to_list:
          description: List of dashboards added to the dashboard list
          items:
            $ref: '#/components/schemas/DashboardListItem'
          type: array
      type: object
    DashboardListDeleteItemsResponse:
      properties:
        deleted_dashboards_from_list:
          description: List of dashboards deleted from the dashboard list
          items:
            $ref: '#/components/schemas/DashboardListItem'
          type: array
      type: object
    DashboardListItem:
      properties:
        author:
          $ref: '#/components/schemas/Creator'
        created:
          description: Date of creation of the dashboard
          format: date-time
          readOnly: true
          type: string
        icon:
          description: URL to the icon of the dashboard
          readOnly: true
          type: string
        id:
          description: ID of the dashboard
          type: string
        is_favorite:
          description: Whether or not the dashboard is in the favorites
          readOnly: true
          type: boolean
        is_read_only:
          description: Whether or not the dashboard is read only
          readOnly: true
          type: boolean
        is_shared:
          description: Whether the dashboard is publicly shared or not
          readOnly: true
          type: boolean
        modified:
          description: Date of last edition of the dashboard
          format: date-time
          readOnly: true
          type: string
        popularity:
          description: Popularity of the dashboard
          format: int32
          maximum: 5
          readOnly: true
          type: integer
        title:
          description: Title of the dashboard
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/DashboardType'
        url:
          description: URL path to the dashboard
          readOnly: true
          type: string
      required:
      - type
      - id
      type: object
    DashboardListItems:
      properties:
        dashboards:
          description: List of dashboards in the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItem'
          type: array
        total:
          description: Number of dashboards in the dashboard list.
          format: int64
          readOnly: true
          type: integer
      required:
      - dashboards
      type: object
    DashboardType:
      description: The type of the dashboard.
      enum:
      - custom_timeboard
      - custom_screenboard
      - integration_screenboard
      - integration_timeboard
      - host_timeboard
      type: string
      x-enum-varnames:
      - CUSTOM_TIMEBOARD
      - CUSTOM_SCREENBOARD
      - INTEGRATION_SCREENBOARD
      - INTEGRATION_TIMEBOARD
      - HOST_TIMEBOARD
  securitySchemes:
    apiKeyAuth:
      description: API Key
      in: header
      name: DD-API-KEY
      type: apiKey
    appKeyAuth:
      description: APP Key
      in: header
      name: DD-APPLICATION-KEY
      type: apiKey
info:
  contact:
    email: support@datadoghq.com
    name: Datadog Support
    url: https://www.datadoghq.com/support/
  description: Collection of all Datadog Public endpoints.
  title: Datadog API Collection
  version: '1.0'
openapi: 3.0.0
paths:
  /api/v2/dashboard/lists/manual/{dashboard_list_id}/dashboards:
    delete:
      description: Delete dashboards from an existing dashboard list.
      operationId: DeleteDashboardListItems
      parameters:
      - description: ID of the dashboard list to delete items from
        in: path
        name: dashboard_list_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardListItems'
        description: Dashboards to delete from the dashboard list
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListDeleteItemsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Delete Items from a Dashboard List
      tags:
      - DashboardLists
      x-codegen-request-body-name: body
    get:
      description: "Fetch the dashboard list\u2019s dashboard definitions."
      operationId: GetDashboardListItems
      parameters:
      - description: ID of the dashboard list to get items from
        in: path
        name: dashboard_list_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListItems'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get a Dashboard List
      tags:
      - DashboardLists
    post:
      description: Add dashboards to an existing dashboard list.
      operationId: AddDashboardListItems
      parameters:
      - description: ID of the dashboard list to add items to
        in: path
        name: dashboard_list_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardListItems'
        description: Dashboards to add to the dashboard list
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListAddItemsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Add Items to a Dashboard List
      tags:
      - DashboardLists
      x-codegen-request-body-name: body
    put:
      description: Update dashboards of an existing dashboard list.
      operationId: UpdateDashboardListItems
      parameters:
      - description: ID of the dashboard list to update items from.
        in: path
        name: dashboard_list_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardListItems'
        description: New dashboards of the dashboard list.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListItems'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Update Items of a Dashboard List
      tags:
      - DashboardLists
      x-codegen-request-body-name: body
security:
- apiKeyAuth: []
  appKeyAuth: []
servers:
- url: https://{subdomain}.{site}
  variables:
    site:
      default: datadoghq.com
      description: The regional site for our customers.
      enum:
      - datadoghq.com
      - datadoghq.eu
    subdomain:
      default: api
      description: The subdomain where the API is deployed.
- url: '{protocol}://{name}'
  variables:
    name:
      default: api.datadoghq.com
      description: Full site DNS name.
    protocol:
      default: https
      description: The protocol for accessing the API.
tags:
- description: '[Interact with your dashboard lists](https://docs.datadoghq.com/monitors/downtimes)
    through the API to make it easier to organize, find, and share all of your dashboards
    with your team and organization.'
  name: DashboardLists
x-group-parameters: true
