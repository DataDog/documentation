{{- /* Creates an algolia json record for each individual section (split by h2 header) of the given page. */ -}}

{{ $hugo_context := .context }}
{{ $page := .page }}
{{ $title := .title }}
{{ $category := .category }}
{{ $subcategory := .subcategory }}
{{ $rank := .rank }}
{{ $section_header := "" }}
{{ $section_content := "" }}

{{- define "partials/headings" -}}
  {{- $ctx := .ctx -}}
  {{- $hugo_context := .ctx.context -}}
  {{- $page := .ctx.page -}}
  {{- $title := .ctx.title -}}
  {{- $category := .ctx.category -}}
  {{- $subcategory := .ctx.subcategory -}}
  {{- $rank := .ctx.rank -}}
  {{- $section_header := "" -}}
  {{- $section_content := "" -}}
  {{- $order := .order -}}
  {{- range $v := .data -}}
      {{- $restr := printf "<h([1-6]).*?id=\"%s\".*?>.*<\\/h[1-6]>" $v.ID -}}
      {{- $heading_html := index (findRE $restr $page.Content 1) 0 | default "" -}}
      {{- $content_starting_after_header := index (split $page.Content $heading_html) 1 -}}
      {{- $next_heading_html := index (findRE `<h([1-6]).*?>.*<\/h[1-6]>` $content_starting_after_header 1) 0 | default "" -}}
      {{- $content_block := index (split $content_starting_after_header $next_heading_html) 0 -}}
      {{- $section_header := $heading_html | plainify | htmlUnescape | safeHTML -}}
      {{- $section_content = (split $content_block " ") -}}

      {{- $chunked := slice -}}
      {{- $post_len := len $section_content -}}
      {{- range $i := (seq 0 1000 $post_len) -}}
          {{- $chunked = $chunked | append (delimit (first 1000 (after $i $section_content) ) " " ) -}}
      {{- end -}}

      {{- range $i, $c := $chunked -}}
          {{- $full_url := print $page.Permalink "#" ($section_header | anchorize) -}}
          {{- $relpermalink := print $page.RelPermalink "#" ($section_header | anchorize) -}}
          {{- $object_id := (print $page.File.UniqueID "_" $page.File.Lang "_" ($section_header | anchorize) "_" $i) -}}
          {{- $hugo_context.Scratch.Add "algoliaindex" (
              dict "objectID" $object_id
              "title" $section_header
              "order" $order
              "tags" (cond (eq $order 0) ($page.Params.algolia.tags | default "") "")
              "section_header" $section_header
              "content" $c
              "type" $page.Type
              "relpermalink" $relpermalink
              "full_url" $full_url
              "language" $page.Language.Lang
              "category" $category
              "subcategory" $subcategory
              "rank" $rank
          ) -}}
      {{- end -}}
      {{- $order = add $order 1 -}}
      {{- $order = partial "partials/headings" (dict "data" $v.Headings "ctx" $ctx "order" $order) -}}
  {{- end -}}
  {{- return $order -}}
{{- end -}}
{{- $ord := partial "partials/headings" (dict "data" $page.Fragments.Headings "ctx" . "order" 0) -}}
