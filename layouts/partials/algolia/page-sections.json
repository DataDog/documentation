{{- /* Creates an algolia json record for each individual section (split by h2 header) of the given page. */ -}}

{{ $hugo_context := .context }}
{{ $page := .page }}
{{ $title := .title }}
{{ $category := .category }}
{{ $subcategory := .subcategory }}
{{ $rank := .rank }}
{{ $section_header := "" }}
{{ $section_content := "" }}

{{- define "partials/heading-sections" -}}
  {{- $ctx := .ctx -}}
  {{- $hugo_context := .ctx.context -}}
  {{- $page := .ctx.page -}}
  {{- $title := .ctx.title -}}
  {{- $category := .ctx.category -}}
  {{- $subcategory := .ctx.subcategory -}}
  {{- $rank := .ctx.rank -}}
  {{- $section_header := "" -}}
  {{- $section_content := "" -}}
  {{- $section_content_words := "" -}}
  {{- $order := .order -}}
  {{- range $v := .data -}}
      {{- $restr := printf "<h([1-4]).*?id=\"%s\".*?>.*<\\/h[1-4]>" $v.ID -}}
      {{- $heading_html := index (findRE $restr $page.Content 1) 0 | default "" -}}
      {{- $content_starting_after_header := index (split $page.Content $heading_html) 1 -}}
      {{- $next_heading_html := index (findRE `<h([1-4]).*?>.*<\/h[1-4]>` $content_starting_after_header 1) 0 | default "" -}}
      {{- $content_block := index (split $content_starting_after_header $next_heading_html) 0 -}}
      {{- $section_header := $heading_html | plainify | htmlUnescape | safeHTML -}}
      {{- $section_content = $content_block | plainify | htmlUnescape | safeHTML -}}
      {{- $section_content_words = (split $section_content " ") -}}

      {{ if and (ne $section_header "Further Reading") (ne $section_header "") }}
          {{- $chunked := slice -}}
          {{- $post_len := len $section_content -}}
          {{- if gt $post_len 100000 -}}
              {{- $post_len = 100000 -}}
          {{- end -}}

          {{- range $i := (seq 0 500 $post_len) -}}
              {{- $chunked = $chunked | append (delimit (first 500 (after $i $section_content_words) ) " " ) -}}
          {{- end -}}

          {{- range $i, $c := $chunked -}}
              {{- if gt (len $c) 2 -}}
                  {{- $full_url := print $page.Permalink "#" ($section_header | anchorize) -}}
                  {{- $relpermalink := print $page.RelPermalink "#" ($section_header | anchorize) -}}
                  {{- $object_id := (print $page.File.UniqueID "_" $page.File.Lang "_" ($section_header | anchorize) "_" $i "_" $order) -}}
                  {{- $hugo_context.Scratch.Add "algoliaindex" (
                      dict "objectID" $object_id
                      "title" $title
                      "order" $order
                      "tags" ($page.Params.algolia.tags | default slice)
                      "section_header" $section_header
                      "content" $c
                      "type" $page.Type
                      "relpermalink" $relpermalink
                      "distinct_base_url" $page.RelPermalink
                      "full_url" $full_url
                      "language" $page.Language.Lang
                      "category" $category
                      "subcategory" $subcategory
                      "rank" $rank
                  ) -}}
              {{- end -}}
          {{- end -}}
          {{- $order = add $order 1 -}}
      {{- end -}}
      {{- $order = partial "partials/heading-sections" (dict "data" $v.Headings "ctx" $ctx "order" $order) -}}
  {{- end -}}
  {{- return $order -}}
{{- end -}}

{{- $ord := partial "partials/heading-sections" (dict "data" $page.Fragments.Headings "ctx" . "order" 0) -}}
